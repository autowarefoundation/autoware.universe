{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"autoware.universe","text":"<p>For Autoware's general documentation, see Autoware Documentation.</p> <p>For detailed documents of Autoware Universe components, see Autoware Universe Documentation.</p>"},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at conduct@autoware.org. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>See https://autowarefoundation.github.io/autoware-documentation/main/contributing/.</p>"},{"location":"DISCLAIMER/","title":"DISCLAIMER","text":"<p>DISCLAIMER</p> <p>\u201cAutoware\u201d will be provided by The Autoware Foundation under the Apache License 2.0. This \u201cDISCLAIMER\u201d will be applied to all users of Autoware (a \u201cUser\u201d or \u201cUsers\u201d) with the Apache License 2.0 and Users shall hereby approve and acknowledge all the contents specified in this disclaimer below and will be deemed to consent to this disclaimer without any objection upon utilizing or downloading Autoware.</p> <p>Disclaimer and Waiver of Warranties</p> <ol> <li> <p>AUTOWARE FOUNDATION MAKES NO REPRESENTATION OR WARRANTY OF ANY KIND,    EXPRESS OR IMPLIED, WITH RESPECT TO PROVIDING AUTOWARE (the \u201cService\u201d)    including but not limited to any representation or warranty (i) of fitness or    suitability for a particular purpose contemplated by the Users, (ii) of the    expected functions, commercial value, accuracy, or usefulness of the Service,    (iii) that the use by the Users of the Service complies with the laws and    regulations applicable to the Users or any internal rules established by    industrial organizations, (iv) that the Service will be free of interruption or    defects, (v) of the non-infringement of any third party's right and (vi) the    accuracy of the content of the Services and the software itself.</p> </li> <li> <p>The Autoware Foundation shall not be liable for any damage incurred by the    User that are attributable to the Autoware Foundation for any reasons    whatsoever. UNDER NO CIRCUMSTANCES SHALL THE AUTOWARE FOUNDATION BE LIABLE FOR    INCIDENTAL, INDIRECT, SPECIAL OR FUTURE DAMAGES OR LOSS OF PROFITS.</p> </li> <li> <p>A User shall be entirely responsible for the content posted by the User and    its use of any content of the Service or the Website. If the User is held    responsible in a civil action such as a claim for damages or even in a criminal    case, the Autoware Foundation and member companies, governments and academic &amp;    non-profit organizations and their directors, officers, employees and agents    (collectively, the \u201cIndemnified Parties\u201d) shall be completely discharged from    any rights or assertions the User may have against the Indemnified Parties, or    from any legal action, litigation or similar procedures.</p> </li> </ol> <p>Indemnity</p> <p>A User shall indemnify and hold the Indemnified Parties harmless from any of their damages, losses, liabilities, costs or expenses (including attorneys' fees or criminal compensation), or any claims or demands made against the Indemnified Parties by any third party, due to or arising out of, or in connection with utilizing Autoware (including the representations and warranties), the violation of applicable Product Liability Law of each country (including criminal case) or violation of any applicable laws by the Users, or the content posted by the User or its use of any content of the Service or the Website.</p>"},{"location":"common/autoware_auto_common/design/comparisons/","title":"Comparisons","text":"<p>The <code>float_comparisons.hpp</code> library is a simple set of functions for performing approximate numerical comparisons. There are separate functions for performing comparisons using absolute bounds and relative bounds. Absolute comparison checks are prefixed with <code>abs_</code> and relative checks are prefixed with <code>rel_</code>.</p> <p>The <code>bool_comparisons.hpp</code> library additionally contains an XOR operator.</p> <p>The intent of the library is to improve readability of code and reduce likelihood of typographical errors when using numerical and boolean comparisons.</p>"},{"location":"common/autoware_auto_common/design/comparisons/#target-use-cases","title":"Target use cases","text":"<p>The approximate comparisons are intended to be used to check whether two numbers lie within some absolute or relative interval. The <code>exclusive_or</code> function will test whether two values cast to different boolean values.</p>"},{"location":"common/autoware_auto_common/design/comparisons/#assumptions","title":"Assumptions","text":"<ul> <li>The approximate comparisons all take an <code>epsilon</code> parameter.   The value of this parameter must be &gt;= 0.</li> <li>The library is only intended to be used with floating point types.   A static assertion will be thrown if the library is used with a non-floating point type.</li> </ul>"},{"location":"common/autoware_auto_common/design/comparisons/#example-usage","title":"Example Usage","text":"<pre><code>#include \"common/bool_comparisons.hpp\"\n#include \"common/float_comparisons.hpp\"\n\n#include &lt;iostream&gt;\n\n// using-directive is just for illustration; don't do this in practice\nusing namespace autoware::common::helper_functions::comparisons;\n\nstatic constexpr auto epsilon = 0.2;\nstatic constexpr auto relative_epsilon = 0.01;\n\nstd::cout &lt;&lt; exclusive_or(true, false) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; rel_eq(1.0, 1.1, relative_epsilon)) &lt;&lt; \"\\n\";\n// Prints: false\n\nstd::cout &lt;&lt; approx_eq(10000.0, 10010.0, epsilon, relative_epsilon)) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; abs_eq(4.0, 4.2, epsilon) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; abs_ne(4.0, 4.2, epsilon) &lt;&lt; \"\\n\";\n// Prints: false\n\nstd::cout &lt;&lt; abs_eq_zero(0.2, epsilon) &lt;&lt; \"\\n\";\n// Prints: false\n\nstd::cout &lt;&lt; abs_lt(4.0, 4.25, epsilon) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; abs_lte(1.0, 1.2, epsilon) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; abs_gt(1.25, 1.0, epsilon) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; abs_gte(0.75, 1.0, epsilon) &lt;&lt; \"\\n\";\n// Prints: false\n</code></pre>"},{"location":"common/autoware_auto_geometry/design/interval/","title":"Interval","text":"<p>The interval is a standard 1D real-valued interval. The class implements a representation and operations on the interval type and guarantees interval validity on construction. Basic operations and accessors are implemented, as well as other common operations. See 'Example Usage' below.</p>"},{"location":"common/autoware_auto_geometry/design/interval/#target-use-cases","title":"Target use cases","text":"<ul> <li>Range or containment checks.   The interval class simplifies code that involves checking membership of a value to a range, or intersecting two ranges.   It also provides consistent behavior and consistent handling of edge cases.</li> </ul>"},{"location":"common/autoware_auto_geometry/design/interval/#properties","title":"Properties","text":"<ul> <li>empty: An empty interval is equivalent to an empty set.   It contains no elements.   It is a valid interval, but because it is empty, the notion of measure (length) is undefined; the measure of an empty interval is not zero.   The implementation represents the measure of an empty interval with <code>NaN</code>.</li> <li>zero measure: An interval with zero measure is an interval whose bounds are exactly equal.   The measure is zero because the interval contains only a single point, and points have zero measure.   However, because it does contain a single element, the interval is not empty.</li> <li>valid: A valid interval is either empty or has min/max bounds such that (min &lt;= max). On construction, interval objects are guaranteed to be valid.   An attempt to construct an invalid interval results in a runtime_error exception being thrown.</li> <li>pseudo-immutable: Once constructed the only way to change the value of an interval is to overwrite it with a new one; an existing object cannot be modified.</li> </ul>"},{"location":"common/autoware_auto_geometry/design/interval/#conventions","title":"Conventions","text":"<ul> <li>All operations on interval objects are defined as static class methods on the interval class.   This is a functional-style of programming that basically turns the class into a namespace that grants functions access to private member variables of the object they operate on.</li> </ul>"},{"location":"common/autoware_auto_geometry/design/interval/#assumptions","title":"Assumptions","text":"<ul> <li>The interval is only intended for floating point types.   This is enforced via static assertion.</li> <li>The constructor for non-empty intervals takes two arguments 'min' and 'max', and they must be ordered (i.e., min &lt;= max).   If this assumption is violated, an exception is emitted and construction fails.</li> </ul>"},{"location":"common/autoware_auto_geometry/design/interval/#example-usage","title":"Example Usage","text":"<pre><code>#include \"geometry/interval.hpp\"\n\n#include &lt;iostream&gt;\n\n// using-directive is just for illustration; don't do this in practice\nusing namespace autoware::common::geometry;\n\n// bounds for example interval\nconstexpr auto MIN = 0.0;\nconstexpr auto MAX = 1.0;\n\n//\n// Try to construct an invalid interval. This will give the following error:\n// 'Attempted to construct an invalid interval: {\"min\": 1.0, \"max\": 0.0}'\n//\n\ntry {\nconst auto i = Interval_d(MAX, MIN);\n} catch (const std::runtime_error&amp; e) {\nstd::cerr &lt;&lt; e.what();\n}\n\n//\n// Construct a double precision interval from 0 to 1\n//\n\nconst auto i = Interval_d(MIN, MAX);\n\n//\n// Test accessors and properties\n//\n\nstd::cout &lt;&lt; Interval_d::min(i) &lt;&lt; \" \" &lt;&lt; Interval_d::max(i) &lt;&lt; \"\\n\";\n// Prints: 0.0 1.0\n\nstd::cout &lt;&lt; Interval_d::empty(i) &lt;&lt; \" \" &lt;&lt; Interval_d::length(i) &lt;&lt; \"\\n\";\n// Prints: false 1.0\n\nstd::cout &lt;&lt; Interval_d::contains(i, 0.3) &lt;&lt; \"\\n\";\n// Prints: true\n\nstd::cout &lt;&lt; Interval_d::is_subset_eq(Interval_d(0.2, 0.4), i) &lt;&lt; \"\\n\";\n// Prints: true\n\n//\n// Test operations.\n//\n\nstd::cout &lt;&lt; Interval_d::intersect(i, Interval(-1.0, 0.3)) &lt;&lt; \"\\n\";\n// Prints: {\"min\": 0.0, \"max\": 0.3}\n\nstd::cout &lt;&lt; Interval_d::project_to_interval(i, 0.5) &lt;&lt; \" \"\n&lt;&lt; Interval_d::project_to_interval(i, -1.3) &lt;&lt; \"\\n\";\n// Prints: 0.5 0.0\n\n//\n// Distinguish empty/zero measure\n//\n\nconst auto i_empty = Interval();\nconst auto i_zero_length = Interval(0.0, 0.0);\n\nstd::cout &lt;&lt; Interval_d::empty(i_empty) &lt;&lt; \" \"\n&lt;&lt; Interval_d::empty(i_zero_length) &lt;&lt; \"\\n\";\n// Prints: true false\n\nstd::cout &lt;&lt; Interval_d::zero_measure(i_empty) &lt;&lt; \" \"\n&lt;&lt; Interval_d::zero_measure(i_zero_length) &lt;&lt; \"\\n\";\n// Prints: false false\n</code></pre>"},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/","title":"2D Convex Polygon Intersection","text":"<p>Two convex polygon's intersection can be visualized on the image below as the blue area:</p> <p></p>"},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>Computing the intersection between two polygons can be useful in many applications of scene understanding. It can be used to estimate collision detection, shape alignment, shape association and in any application that deals with the objects around the perceiving agent.</p>"},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#design","title":"Design","text":"<p>Livermore, Calif, 1977 mention the following observations about convex polygon intersection:</p> <ul> <li>Intersection of two convex polygons is a convex polygon</li> <li>A vertex from a polygon that is contained in the other polygon is a vertex of the intersection   shape. (Vertices A, C, D in the shape above)</li> <li>An edge from a polygon that is contained in the other polygon is an edge in the intersection   shape. (edge C-D in the shape above)</li> <li>Edge intersections between two polygons are vertices in the intersection shape. (Vertices B,   E in the shape above.)</li> </ul>"},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>With the observation mentioned above, the current algorithm operates in the following way:</p> <ul> <li>Compute and find the vertices from each polygon that is contained in the other polygon   (Vertices A, C, D)</li> <li>Compute and find the intersection points between each polygon (Vertices B, E)</li> <li>Compute the convex hull shaped by these vertices by ordering them CCW.</li> </ul>"},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#inputs-outputs-api","title":"Inputs / Outputs / API","text":"<p>Inputs:</p> <ul> <li>Two iterables that contain vertices of the convex polygons ordered in the CCW direction.</li> </ul> <p>Outputs:</p> <ul> <li>A list of vertices of the intersection shape ordered in the CCW direction.</li> </ul>"},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#future-work","title":"Future Work","text":""},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#1230-applying-efficient-algorithms","title":"1230: Applying efficient algorithms.","text":""},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#related-issues","title":"Related issues","text":""},{"location":"common/autoware_auto_geometry/design/polygon_intersection_2d-design/#983-integrate-vision-detections-in-object-tracker","title":"983: Integrate vision detections in object tracker","text":""},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/","title":"Spatial Hash","text":"<p>The spatial hash is a data structure designed for efficient fixed-radius near-neighbor queries in low dimensions.</p> <p>The fixed-radius near-neighbors problem is defined as follows:</p> <p><code>For point p, find all points p' s.t. d(p, p') &lt; r</code></p> <p>Where in this case <code>d(p, p')</code> is euclidean distance, and <code>r</code> is the fixed radius.</p> <p>For <code>n</code> points with an average of <code>k</code> neighbors each, this data structure can perform <code>m</code> near-neighbor queries (to generate lists of near-neighbors for <code>m</code> different points) in <code>O(mk)</code> time.</p> <p>By contrast, using a k-d tree for successive nearest-neighbor queries results in a running time of <code>O(m log n)</code>.</p> <p>The spatial hash works as follows:</p> <ul> <li>Each point is assigned to a bin in the predefined bounding area defined by   <code>x_min/x_max</code> and <code>y_min/y_max</code></li> <li>This can be done by converting x and y position into x and y index   respectively<ul> <li>For example with the bin containing <code>x_min</code> and <code>y_min</code> as index <code>(0, 0)</code></li> <li>The two (or more) indices can then be converted into a single index</li> </ul> </li> <li>Once every point of interest has been inserted into the hash, near-neighbor   queries can begin:<ul> <li>The bin of the reference point is first computed</li> <li>For each point in each adjacent bin, perform an explicit distance computation   between said point and the reference point. If the distance is below the given   radius, said point is considered to be a near-neighbor</li> </ul> </li> </ul> <p>Under the hood, an <code>std::unordered_multimap</code> is used, where the key is a bin/voxel index. The bin size was computed to be the same as the lookup distance.</p> <p>In addition, this data structure can support 2D or 3D queries. This is determined during configuration, and baked into the data structure via the configuration class. The purpose of this was to avoid if statements in tight loops. The configuration class specializations themselves use CRTP (Curiously Recurring Template Patterns) to do \"static polymorphism\", and avoid a dispatching call.</p>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#performance-characterization","title":"Performance characterization","text":""},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#time","title":"Time","text":"<p>Insertion is <code>O(n)</code> because lookup time for the underlying hashmap is <code>O(n)</code> for hashmaps. In practice, lookup time for hashmaps and thus insertion time should be <code>O(1)</code>.</p> <p>Removing a point is <code>O(1)</code> because the current API only supports removal via direct reference to a node.</p> <p>Finding <code>k</code> near-neighbors is worst case <code>O(n)</code> in the case of an adversarial example, but in practice <code>O(k)</code>.</p>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#space","title":"Space","text":"<p>The module consists of the following components:</p> <ul> <li>The internal hashmap is <code>O(n + n + A * n)</code>, where <code>A</code> is an arbitrary   constant (load factor)</li> <li>The other components of the spatial hash are <code>O(n + n)</code></li> </ul> <p>This results in <code>O(n)</code> space complexity.</p>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#states","title":"States","text":"<p>The spatial hash's state is dictated by the status of the underlying unordered_multimap.</p> <p>The data structure is wholly configured by a config class. The constructor of the class determines in the data structure accepts strictly 2D or strictly 3D queries.</p>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#inputs","title":"Inputs","text":"<p>The primary method of introducing data into the data structure is via the insert method.</p>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#outputs","title":"Outputs","text":"<p>The primary method of retrieving data from the data structure is via the near2D configuration or near 3D configuration3D configuration method.</p> <p>The whole data structure can also be traversed using standard constant iterators.</p>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#future-work","title":"Future Work","text":"<ul> <li>Performance tuning and optimization</li> </ul>"},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#related-issues","title":"Related issues","text":""},{"location":"common/autoware_auto_geometry/design/spatial-hash-design/#28-port-to-autowareauto","title":"28: Port to autoware.Auto","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/","title":"autoware_auto_perception_plugin","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/#purpose","title":"Purpose","text":"<p>It is an rviz plugin for visualizing the result from perception module. This package is based on the implementation of the rviz plugin developed by Autoware.Auto.</p> <p>See Autoware.Auto design documentation for the original design philosophy. [1]</p>"},{"location":"common/autoware_auto_perception_rviz_plugin/#input-types-visualization-results","title":"Input Types / Visualization Results","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/#detectedobjects","title":"DetectedObjects","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/#input-types","title":"Input Types","text":"Name Type Description <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detection result array"},{"location":"common/autoware_auto_perception_rviz_plugin/#visualization-result","title":"Visualization Result","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/#trackedobjects","title":"TrackedObjects","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/#input-types_1","title":"Input Types","text":"Name Type Description <code>autoware_auto_perception_msgs::msg::TrackedObjects</code> tracking result array"},{"location":"common/autoware_auto_perception_rviz_plugin/#visualization-result_1","title":"Visualization Result","text":"<p>Overwrite tracking results with detection results.</p> <p></p>"},{"location":"common/autoware_auto_perception_rviz_plugin/#predictedobjects","title":"PredictedObjects","text":""},{"location":"common/autoware_auto_perception_rviz_plugin/#input-types_2","title":"Input Types","text":"Name Type Description <code>autoware_auto_perception_msgs::msg::PredictedObjects</code> prediction result array"},{"location":"common/autoware_auto_perception_rviz_plugin/#visualization-result_2","title":"Visualization Result","text":"<p>Overwrite prediction results with tracking results.</p> <p></p>"},{"location":"common/autoware_auto_perception_rviz_plugin/#referencesexternal-links","title":"References/External links","text":"<p>[1] https://gitlab.com/autowarefoundation/autoware.auto/AutowareAuto/-/tree/master/src/tools/visualization/autoware_rviz_plugins</p>"},{"location":"common/autoware_auto_perception_rviz_plugin/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":""},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/","title":"autoware_auto_tf2","text":"<p>This is the design document for the <code>autoware_auto_tf2</code> package.</p>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>In general, users of ROS rely on tf (and its successor, tf2) for publishing and utilizing coordinate frame transforms. This is true even to the extent that the tf2 contains the packages <code>tf2_geometry_msgs</code> and <code>tf2_sensor_msgs</code> which allow for easy conversion to and from the message types defined in <code>geometry_msgs</code> and <code>sensor_msgs</code>, respectively. However, AutowareAuto contains some specialized message types which are not transformable between frames using the ROS2 library. The <code>autoware_auto_tf2</code> package aims to provide developers with tools to transform applicable <code>autoware_auto_msgs</code> types. In addition to this, this package also provides transform tools for messages types in <code>geometry_msgs</code> missing in <code>tf2_geometry_msgs</code>.</p>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#design","title":"Design","text":"<p>While writing <code>tf2_some_msgs</code> or contributing to <code>tf2_geometry_msgs</code>, compatibility and design intent was ensured with the following files in the existing tf2 framework:</p> <ul> <li><code>tf2/convert.h</code></li> <li><code>tf2_ros/buffer_interface.h</code></li> </ul> <p>For example:</p> <pre><code>void tf2::convert( const A &amp; a,B &amp; b)\n</code></pre> <p>The method <code>tf2::convert</code> is dependent on the following:</p> <pre><code>template&lt;typename A, typename B&gt;\nB tf2::toMsg(const A&amp; a);\ntemplate&lt;typename A, typename B&gt;\nvoid tf2::fromMsg(const A&amp;, B&amp; b);\n\n// New way to transform instead of using tf2::doTransform() directly\ntf2_ros::BufferInterface::transform(...)\n</code></pre> <p>Which, in turn, is dependent on the following:</p> <pre><code>void tf2::convert( const A &amp; a,B &amp; b)\nconst std::string&amp; tf2::getFrameId(const T&amp; t)\nconst ros::Time&amp; tf2::getTimestamp(const T&amp; t);\n</code></pre>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#current-implementation-of-tf2_geometry_msgs","title":"Current Implementation of tf2_geometry_msgs","text":"<p>In both ROS1 and ROS2 stamped msgs like <code>Vector3Stamped</code>, <code>QuaternionStamped</code> have associated functions like:</p> <ul> <li><code>getTimestamp</code></li> <li><code>getFrameId</code></li> <li><code>doTransform</code></li> <li><code>toMsg</code></li> <li><code>fromMsg</code></li> </ul> <p>In ROS1, to support <code>tf2::convert</code> and need in <code>doTransform</code> of the stamped data, non-stamped underlying data like <code>Vector3</code>, <code>Point</code>, have implementations of the following functions:</p> <ul> <li><code>toMsg</code></li> <li><code>fromMsg</code></li> </ul> <p>In ROS2, much of the <code>doTransform</code> method is not using <code>toMsg</code> and <code>fromMsg</code> as data types from tf2 are not used. Instead <code>doTransform</code> is done using <code>KDL</code>, thus functions relating to underlying data were not added; such as <code>Vector3</code>, <code>Point</code>, or ported in this commit ros/geometry2/commit/6f2a82. The non-stamped data with <code>toMsg</code> and <code>fromMsg</code> are <code>Quaternion</code>, <code>Transform</code>. <code>Pose</code> has the modified <code>toMsg</code> and not used by <code>PoseStamped</code>.</p>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#plan-for-autoware_auto_perception_msgsmsgboundingboxarray","title":"Plan for autoware_auto_perception_msgs::msg::BoundingBoxArray","text":"<p>The initial rough plan was to implement some of the common tf2 functions like <code>toMsg</code>, <code>fromMsg</code>, and <code>doTransform</code>, as needed for all the underlying data types in <code>BoundingBoxArray</code>. Examples of the data types include: <code>BoundingBox</code>, <code>Quaternion32</code>, and <code>Point32</code>. In addition, the implementation should be done such that upstream contributions could also be made to <code>geometry_msgs</code>.</p>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Due to conflicts in a function signatures, the predefined template of <code>convert.h</code>/ <code>transform_functions.h</code> is not followed and compatibility with <code>tf2::convert(..)</code> is broken and <code>toMsg</code> is written differently.</p> <pre><code>// Old style\ngeometry_msgs::Vector3 toMsg(const tf2::Vector3&amp; in)\ngeometry_msgs::Point&amp; toMsg(const tf2::Vector3&amp; in)\n\n// New style\ngeometry_msgs::Point&amp; toMsg(const tf2::Vector3&amp; in, geometry_msgs::Point&amp; out)\n</code></pre>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#inputs-outputs-api","title":"Inputs / Outputs / API","text":"<p>The library provides API <code>doTransform</code> for the following data-types that are either not available in <code>tf2_geometry_msgs</code> or the messages types are part of <code>autoware_auto_msgs</code> and are therefore custom and not inherently supported by any of the tf2 libraries. The following APIs are provided for the following data types:</p> <ul> <li><code>Point32</code></li> </ul> <pre><code>inline void doTransform(\nconst geometry_msgs::msg::Point32 &amp; t_in,\ngeometry_msgs::msg::Point32 &amp; t_out,\nconst geometry_msgs::msg::TransformStamped &amp; transform)\n</code></pre> <ul> <li><code>Quaternion32</code> (<code>autoware_auto_msgs</code>)</li> </ul> <pre><code>inline void doTransform(\nconst autoware_auto_geometry_msgs::msg::Quaternion32 &amp; t_in,\nautoware_auto_geometry_msgs::msg::Quaternion32 &amp; t_out,\nconst geometry_msgs::msg::TransformStamped &amp; transform)\n</code></pre> <ul> <li><code>BoundingBox</code> (<code>autoware_auto_msgs</code>)</li> </ul> <pre><code>inline void doTransform(\nconst BoundingBox &amp; t_in, BoundingBox &amp; t_out,\nconst geometry_msgs::msg::TransformStamped &amp; transform)\n</code></pre> <ul> <li><code>BoundingBoxArray</code></li> </ul> <pre><code>inline void doTransform(\nconst BoundingBoxArray &amp; t_in,\nBoundingBoxArray &amp; t_out,\nconst geometry_msgs::msg::TransformStamped &amp; transform)\n</code></pre> <p>In addition, the following helper methods are also added:</p> <ul> <li><code>BoundingBoxArray</code></li> </ul> <pre><code>inline tf2::TimePoint getTimestamp(const BoundingBoxArray &amp; t)\n\ninline std::string getFrameId(const BoundingBoxArray &amp; t)\n</code></pre>"},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":""},{"location":"common/autoware_auto_tf2/design/autoware-auto-tf2-design/#challenges","title":"Challenges","text":"<ul> <li><code>tf2_geometry_msgs</code> does not implement <code>doTransform</code> for any non-stamped data types, but it is   possible with the same function template. It is needed when transforming sub-data, with main data   that does have a stamp and can call doTransform on the sub-data with the same transform. Is this a useful upstream contribution?</li> <li><code>tf2_geometry_msgs</code> does not have <code>Point</code>, <code>Point32</code>, does not seem it needs one, also the   implementation of non-standard <code>toMsg</code> would not help the convert.</li> <li><code>BoundingBox</code> uses 32-bit float like <code>Quaternion32</code> and <code>Point32</code> to save space, as they are used   repeatedly in <code>BoundingBoxArray</code>. While transforming is it better to convert to 64-bit <code>Quaternion</code>,   <code>Point</code>, or <code>PoseStamped</code>, to re-use existing implementation of <code>doTransform</code>, or does it need to be   implemented? It may not be simple to template.</li> </ul>"},{"location":"common/autoware_testing/design/autoware_testing-design/","title":"autoware_testing","text":"<p>This is the design document for the <code>autoware_testing</code> package.</p>"},{"location":"common/autoware_testing/design/autoware_testing-design/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>The package aims to provide a unified way to add standard testing functionality to the package, currently supporting:</p> <ul> <li>Smoke testing (<code>add_smoke_test</code>): launch a node with default configuration and ensure that it starts up and does not crash.</li> </ul>"},{"location":"common/autoware_testing/design/autoware_testing-design/#design","title":"Design","text":"<p>Uses <code>ros_testing</code> (which is an extension of <code>launch_testing</code>) and provides some parametrized, reusable standard tests to run.</p>"},{"location":"common/autoware_testing/design/autoware_testing-design/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Parametrization is limited to package, executable names, parameters filename and executable arguments. Test namespace is set as 'test'. Parameters file for the package is expected to be in <code>param</code> directory inside package.</p>"},{"location":"common/autoware_testing/design/autoware_testing-design/#inputs-outputs-api","title":"Inputs / Outputs / API","text":"<p>To add a smoke test to your package tests, add test dependency on <code>autoware_testing</code> to <code>package.xml</code></p> <pre><code>&lt;test_depend&gt;autoware_testing&lt;/test_depend&gt;\n</code></pre> <p>and add the following two lines to <code>CMakeLists.txt</code> in the <code>IF (BUILD_TESTING)</code> section:</p> <pre><code>find_package(autoware_testing REQUIRED)\nadd_smoke_test(&lt;package_name&gt; &lt;executable_name&gt; [PARAM_FILENAME &lt;param_filename&gt;] [EXECUTABLE_ARGUMENTS &lt;arguments&gt;])\n</code></pre> <p>Where</p> <p><code>&lt;package_name&gt;</code> - [required] tested node package name.</p> <p><code>&lt;executable_name&gt;</code> - [required] tested node executable name.</p> <p><code>&lt;param_filename&gt;</code> - [optional] param filename. Default value is <code>test.param.yaml</code>. Required mostly in situation where there are multiple smoke tests in a package and each requires different parameters set</p> <p><code>&lt;arguments&gt;</code> - [optional] arguments passed to executable. By default no arguments are passed.</p> <p>which adds <code>&lt;executable_name&gt;_smoke_test</code> test to suite.</p> <p>Example test result:</p> <pre><code>build/&lt;package_name&gt;/test_results/&lt;package_name&gt;/&lt;executable_name&gt;_smoke_test.xunit.xml: 1 test, 0 errors, 0 failures, 0 skipped\n</code></pre>"},{"location":"common/autoware_testing/design/autoware_testing-design/#references-external-links","title":"References / External links","text":"<ul> <li>https://en.wikipedia.org/wiki/Smoke_testing_(software)</li> <li>https://github.com/ros2/ros_testing</li> <li>https://github.com/ros2/launch/blob/master/launch_testing</li> </ul>"},{"location":"common/autoware_testing/design/autoware_testing-design/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Adding more types of standard tests.</li> </ul>"},{"location":"common/autoware_testing/design/autoware_testing-design/#related-issues","title":"Related issues","text":"<ul> <li>Issue #700: add smoke test</li> <li>Issue #1224: Port other packages with smoke tests to use <code>autoware_testing</code></li> </ul>"},{"location":"common/bag_time_manager_rviz_plugin/","title":"bag_time_manager_rviz_plugin","text":""},{"location":"common/bag_time_manager_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin allows publishing and controlling the ros bag time.</p>"},{"location":"common/bag_time_manager_rviz_plugin/#output","title":"Output","text":"<p>tbd.</p>"},{"location":"common/bag_time_manager_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li> <p>Start rviz and select panels/Add new panel.</p> <p></p> </li> <li> <p>Select BagTimeManagerPanel and press OK.</p> <p></p> </li> <li> <p>See bag_time_manager_rviz_plugin/BagTimeManagerPanel is added.</p> <p></p> </li> </ol> <ul> <li>Pause/Resume: pause/resume the clock.</li> <li>ApplyRate: apply rate of the clock.</li> </ul>"},{"location":"common/component_interface_utils/","title":"component_interface_utils","text":""},{"location":"common/component_interface_utils/#features","title":"Features","text":"<p>This is a utility package that provides the following features:</p> <ul> <li>Instantiation of the wrapper class</li> <li>Logging for service and client</li> <li>Service exception for response</li> <li>Relays for topic and service</li> </ul>"},{"location":"common/component_interface_utils/#design","title":"Design","text":"<p>This package provides the wrappers for the interface classes of rclcpp. The wrappers limit the usage of the original class to enforce the processing recommended by the component interface. Do not inherit the class of rclcpp, and forward or wrap the member function that is allowed to be used.</p>"},{"location":"common/component_interface_utils/#instantiation-of-the-wrapper-class","title":"Instantiation of the wrapper class","text":"<p>The wrapper class requires interface information in this format.</p> <pre><code>struct SampleService\n{\nusing Service = sample_msgs::srv::ServiceType;\nstatic constexpr char name[] = \"/sample/service\";\n};\n\nstruct SampleMessage\n{\nusing Message = sample_msgs::msg::MessageType;\nstatic constexpr char name[] = \"/sample/message\";\nstatic constexpr size_t depth = 3;\nstatic constexpr auto reliability = RMW_QOS_POLICY_RELIABILITY_RELIABLE;\nstatic constexpr auto durability = RMW_QOS_POLICY_DURABILITY_TRANSIENT_LOCAL;\n};\n</code></pre> <p>Create the wrapper using the above definition as follows.</p> <pre><code>// header file\ncomponent_interface_utils::Service&lt;SampleService&gt;::SharedPtr srv_;\ncomponent_interface_utils::Client&lt;SampleService&gt;::SharedPtr cli_;\ncomponent_interface_utils::Publisher&lt;SampleMessage&gt;::SharedPtr pub_;\ncomponent_interface_utils::Subscription&lt;SampleMessage&gt;::SharedPtr sub_;\n\n// source file\nconst auto node = component_interface_utils::NodeAdaptor(this);\nnode.init_srv(srv_, callback);\nnode.init_cli(cli_);\nnode.init_pub(pub_);\nnode.init_sub(sub_, callback);\n</code></pre>"},{"location":"common/component_interface_utils/#logging-for-service-and-client","title":"Logging for service and client","text":"<p>If the wrapper class is used, logging is automatically enabled. The log level is <code>RCLCPP_INFO</code>.</p>"},{"location":"common/component_interface_utils/#service-exception-for-response","title":"Service exception for response","text":"<p>If the wrapper class is used and the service response has status, throwing <code>ServiceException</code> will automatically catch and set it to status. This is useful when returning an error from a function called from the service callback.</p> <pre><code>void service_callback(Request req, Response res)\n{\nfunction();\nres-&gt;status.success = true;\n}\n\nvoid function()\n{\nthrow ServiceException(ERROR_CODE, \"message\");\n}\n</code></pre> <p>If the wrapper class is not used or the service response has no status, manually catch the <code>ServiceException</code> as follows.</p> <pre><code>void service_callback(Request req, Response res)\n{\ntry {\nfunction();\nres-&gt;status.success = true;\n} catch (const ServiceException &amp; error) {\nres-&gt;status = error.status();\n}\n}\n</code></pre>"},{"location":"common/component_interface_utils/#relays-for-topic-and-service","title":"Relays for topic and service","text":"<p>There are utilities for relaying services and messages of the same type.</p> <pre><code>const auto node = component_interface_utils::NodeAdaptor(this);\nservice_callback_group_ = create_callback_group(rclcpp::CallbackGroupType::MutuallyExclusive);\nnode.relay_message(pub_, sub_);\nnode.relay_service(cli_, srv_, service_callback_group_);  // group is for avoiding deadlocks\n</code></pre>"},{"location":"common/fake_test_node/design/fake_test_node-design/","title":"Fake Test Node","text":""},{"location":"common/fake_test_node/design/fake_test_node-design/#what-this-package-provides","title":"What this package provides","text":"<p>When writing an integration test for a node in C++ using GTest, there is quite some boilerplate code that needs to be written to set up a fake node that would publish expected messages on an expected topic and subscribes to messages on some other topic. This is usually implemented as a custom GTest fixture.</p> <p>This package contains a library that introduces two utility classes that can be used in place of custom fixtures described above to write integration tests for a node:</p> <ul> <li><code>autoware::tools::testing::FakeTestNode</code> - to use as a custom test fixture with <code>TEST_F</code> tests</li> <li><code>autoware::tools::testing::FakeTestNodeParametrized</code> - to use a custom test fixture with the   parametrized <code>TEST_P</code> tests (accepts a template parameter that gets forwarded to   <code>testing::TestWithParam&lt;T&gt;</code>)</li> </ul> <p>These fixtures take care of initializing and re-initializing rclcpp as well as of checking that all subscribers and publishers have a match, thus reducing the amount of boilerplate code that the user needs to write.</p>"},{"location":"common/fake_test_node/design/fake_test_node-design/#how-to-use-this-library","title":"How to use this library","text":"<p>After including the relevant header the user can use a typedef to use a custom fixture name and use the provided classes as fixtures in <code>TEST_F</code> and <code>TEST_P</code> tests directly.</p>"},{"location":"common/fake_test_node/design/fake_test_node-design/#example-usage","title":"Example usage","text":"<p>Let's say there is a node <code>NodeUnderTest</code> that requires testing. It just subscribes to <code>std_msgs::msg::Int32</code> messages and publishes a <code>std_msgs::msg::Bool</code> to indicate that the input is positive. To test such a node the following code can be used utilizing the <code>autoware::tools::testing::FakeTestNode</code>:</p> <pre><code>using FakeNodeFixture = autoware::tools::testing::FakeTestNode;\n\n/// @test Test that we can use a non-parametrized test.\nTEST_F(FakeNodeFixture, Test) {\nInt32 msg{};\nmsg.data = 15;\nconst auto node = std::make_shared&lt;NodeUnderTest&gt;();\n\nBool::SharedPtr last_received_msg{};\nauto fake_odom_publisher = create_publisher&lt;Int32&gt;(\"/input_topic\");\nauto result_odom_subscription = create_subscription&lt;Bool&gt;(\"/output_topic\", *node,\n[&amp;last_received_msg](const Bool::SharedPtr msg) {last_received_msg = msg;});\n\nconst auto dt{std::chrono::milliseconds{100LL}};\nconst auto max_wait_time{std::chrono::seconds{10LL}};\nauto time_passed{std::chrono::milliseconds{0LL}};\nwhile (!last_received_msg) {\nfake_odom_publisher-&gt;publish(msg);\nrclcpp::spin_some(node);\nrclcpp::spin_some(get_fake_node());\nstd::this_thread::sleep_for(dt);\ntime_passed += dt;\nif (time_passed &gt; max_wait_time) {\nFAIL() &lt;&lt; \"Did not receive a message soon enough.\";\n}\n}\nEXPECT_TRUE(last_received_msg-&gt;data);\nSUCCEED();\n}\n</code></pre> <p>Here only the <code>TEST_F</code> example is shown but a <code>TEST_P</code> usage is very similar with a little bit more boilerplate to set up all the parameter values, see <code>test_fake_test_node.cpp</code> for an example usage.</p>"},{"location":"common/global_parameter_loader/Readme/","title":"Autoware Global Parameter Loader","text":"<p>This package is to set common ROS parameters to each node.</p>"},{"location":"common/global_parameter_loader/Readme/#usage","title":"Usage","text":"<p>Add the following lines to the launch file of the node in which you want to get global parameters.</p> <pre><code>&lt;!-- Global parameters --&gt;\n&lt;include file=\"$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py\"&gt;\n&lt;arg name=\"vehicle_model\" value=\"$(var vehicle_model)\"/&gt;\n&lt;/include&gt;\n</code></pre> <p>The vehicle model parameter is read from <code>config/vehicle_info.param.yaml</code> in <code>vehicle_model</code>_description package.</p>"},{"location":"common/global_parameter_loader/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Currently only vehicle_info is loaded by this launcher.</p>"},{"location":"common/goal_distance_calculator/Readme/","title":"goal_distance_calculator","text":""},{"location":"common/goal_distance_calculator/Readme/#purpose","title":"Purpose","text":"<p>This node publishes deviation of self-pose from goal pose.</p>"},{"location":"common/goal_distance_calculator/Readme/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"common/goal_distance_calculator/Readme/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/goal_distance_calculator/Readme/#input","title":"Input","text":"Name Type Description <code>/planning/mission_planning/route</code> <code>autoware_auto_planning_msgs::msg::Route</code> Used to get goal pose <code>/tf</code> <code>tf2_msgs/TFMessage</code> TF (self-pose)"},{"location":"common/goal_distance_calculator/Readme/#output","title":"Output","text":"Name Type Description <code>deviation/lateral</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> publish lateral deviation of self-pose from goal pose[m] <code>deviation/longitudinal</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> publish longitudinal deviation of self-pose from goal pose[m] <code>deviation/yaw</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> publish yaw deviation of self-pose from goal pose[rad] <code>deviation/yaw_deg</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> publish yaw deviation of self-pose from goal pose[deg]"},{"location":"common/goal_distance_calculator/Readme/#parameters","title":"Parameters","text":""},{"location":"common/goal_distance_calculator/Readme/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Explanation <code>update_rate</code> double 10.0 Timer callback period. [Hz]"},{"location":"common/goal_distance_calculator/Readme/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Explanation <code>oneshot</code> bool true publish deviations just once or repeatedly"},{"location":"common/goal_distance_calculator/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/grid_map_utils/","title":"Grid Map Utils","text":""},{"location":"common/grid_map_utils/#overview","title":"Overview","text":"<p>This packages contains a re-implementation of the <code>grid_map::PolygonIterator</code> used to iterate over all cells of a grid map contained inside some polygon.</p>"},{"location":"common/grid_map_utils/#algorithm","title":"Algorithm","text":"<p>This implementation uses the scan line algorithm, a common algorithm used to draw polygons on a rasterized image. The main idea of the algorithm adapted to a grid map is as follow:</p> <ul> <li>calculate intersections between rows of the grid map and the edges of the polygon edges;</li> <li>calculate for each row the column between each pair of intersections;</li> <li>the resulting <code>(row, column)</code> indexes are inside of the polygon.</li> </ul> <p>More details on the scan line algorithm can be found in the References.</p>"},{"location":"common/grid_map_utils/#api","title":"API","text":"<p>The <code>grid_map_utils::PolygonIterator</code> follows the same API as the original <code>grid_map::PolygonIterator</code>.</p>"},{"location":"common/grid_map_utils/#assumptions","title":"Assumptions","text":"<p>The behavior of the <code>grid_map_utils::PolygonIterator</code> is only guaranteed to match the <code>grid_map::PolygonIterator</code> if edges of the polygon do not exactly cross any cell center. In such a case, whether the crossed cell is considered inside or outside of the polygon can vary due to floating precision error.</p>"},{"location":"common/grid_map_utils/#performances","title":"Performances","text":"<p>Benchmarking code is implemented in <code>test/benchmarking.cpp</code> and is also used to validate that the <code>grid_map_utils::PolygonIterator</code> behaves exactly like the <code>grid_map::PolygonIterator</code>.</p> <p>The following figure shows a comparison of the runtime between the implementation of this package (<code>grid_map_utils</code>) and the original implementation (<code>grid_map</code>). The time measured includes the construction of the iterator and the iteration over all indexes and is shown using a logarithmic scale. Results were obtained varying the side size of a square grid map with <code>100 &lt;= n &lt;= 1000</code> (size=<code>n</code> means a grid of <code>n x n</code> cells), random polygons with a number of vertices <code>3 &lt;= m &lt;= 100</code> and with each parameter <code>(n,m)</code> repeated 10 times.</p> <p></p>"},{"location":"common/grid_map_utils/#future-improvements","title":"Future improvements","text":"<p>There exists variations of the scan line algorithm for multiple polygons. These can be implemented if we want to iterate over the cells contained in at least one of multiple polygons.</p> <p>The current implementation imitate the behavior of the original <code>grid_map::PolygonIterator</code> where a cell is selected if its center position is inside the polygon. This behavior could be changed for example to only return all cells overlapped by the polygon.</p>"},{"location":"common/grid_map_utils/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Scanline_rendering</li> <li>https://web.cs.ucdavis.edu/~ma/ECS175_S00/Notes/0411_b.pdf</li> <li>https://www.techfak.uni-bielefeld.de/ags/wbski/lehre/digiSA/WS0607/3DVRCG/Vorlesung/13.RT3DCGVR-vertex-2-fragment.pdf</li> </ul>"},{"location":"common/interpolation/","title":"Interpolation package","text":"<p>This package supplies linear and spline interpolation functions.</p>"},{"location":"common/interpolation/#linear-interpolation","title":"Linear Interpolation","text":"<p><code>lerp(src_val, dst_val, ratio)</code> (for scalar interpolation) interpolates <code>src_val</code> and <code>dst_val</code> with <code>ratio</code>. This will be replaced with <code>std::lerp(src_val, dst_val, ratio)</code> in <code>C++20</code>.</p> <p><code>lerp(base_keys, base_values, query_keys)</code> (for vector interpolation) applies linear regression to each two continuous points whose x values are<code>base_keys</code> and whose y values are <code>base_values</code>. Then it calculates interpolated values on y-axis for <code>query_keys</code> on x-axis.</p>"},{"location":"common/interpolation/#spline-interpolation","title":"Spline Interpolation","text":"<p><code>spline(base_keys, base_values, query_keys)</code> (for vector interpolation) applies spline regression to each two continuous points whose x values are<code>base_keys</code> and whose y values are <code>base_values</code>. Then it calculates interpolated values on y-axis for <code>query_keys</code> on x-axis.</p>"},{"location":"common/interpolation/#evaluation-of-calculation-cost","title":"Evaluation of calculation cost","text":"<p>We evaluated calculation cost of spline interpolation for 100 points, and adopted the best one which is tridiagonal matrix algorithm. Methods except for tridiagonal matrix algorithm exists in <code>spline_interpolation</code> package, which has been removed from Autoware.</p> Method Calculation time Tridiagonal Matrix Algorithm 0.007 [ms] Preconditioned Conjugate Gradient 0.024 [ms] Successive Over-Relaxation 0.074 [ms]"},{"location":"common/interpolation/#spline-interpolation-algorithm","title":"Spline Interpolation Algorithm","text":"<p>Assuming that the size of <code>base_keys</code> (x_i) and <code>base_values</code> (y_iy_i) are N + 1N + 1, we aim to calculate spline interpolation with the following equation to interpolate between y_iy_i and y_{i+1}y_{i+1}.</p>  Y_i(x) = a_i (x - x_i)^3 + b_i (x - x_i)^2 + c_i (x - x_i) + d_i \\ \\ \\ (i = 0, \\dots, N-1)   Y_i(x) = a_i (x - x_i)^3 + b_i (x - x_i)^2 + c_i (x - x_i) + d_i \\ \\ \\ (i = 0, \\dots, N-1)  <p>Constraints on spline interpolation are as follows. The number of constraints is 4N4N, which is equal to the number of variables of spline interpolation.</p>  \\begin{align} Y_i (x_i) &amp; = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y_i (x_{i+1}) &amp; = y_{i+1} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y'_i (x_{i+1}) &amp; = Y'_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_i (x_{i+1}) &amp; = Y''_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_0 (x_0) &amp; = 0 \\\\ Y''_{N-1} (x_N) &amp; = 0 \\end{align}   \\begin{align} Y_i (x_i) &amp; = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y_i (x_{i+1}) &amp; = y_{i+1} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y'_i (x_{i+1}) &amp; = Y'_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_i (x_{i+1}) &amp; = Y''_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_0 (x_0) &amp; = 0 \\\\ Y''_{N-1} (x_N) &amp; = 0 \\end{align}  <p>According to this article, spline interpolation is formulated as the following linear equation.</p>  \\begin{align}  \\begin{pmatrix}     2(h_0 + h_1) &amp; h_1 \\\\     h_0 &amp; 2 (h_1 + h_2) &amp; h_2 &amp; &amp; O \\\\         &amp;     &amp;     &amp; \\ddots \\\\     O &amp;     &amp;     &amp;       &amp; h_{N-2} &amp; 2 (h_{N-2} + h_{N-1})  \\end{pmatrix}  \\begin{pmatrix}     v_1 \\\\ v_2 \\\\ v_3 \\\\ \\vdots \\\\ v_{N-1}  \\end{pmatrix}=  \\begin{pmatrix}     w_1 \\\\ w_2 \\\\ w_3 \\\\ \\vdots \\\\ w_{N-1}  \\end{pmatrix} \\end{align}   \\begin{align}  \\begin{pmatrix}     2(h_0 + h_1) &amp; h_1 \\\\     h_0 &amp; 2 (h_1 + h_2) &amp; h_2 &amp; &amp; O \\\\         &amp;     &amp;     &amp; \\ddots \\\\     O &amp;     &amp;     &amp;       &amp; h_{N-2} &amp; 2 (h_{N-2} + h_{N-1})  \\end{pmatrix}  \\begin{pmatrix}     v_1 \\\\ v_2 \\\\ v_3 \\\\ \\vdots \\\\ v_{N-1}  \\end{pmatrix}=  \\begin{pmatrix}     w_1 \\\\ w_2 \\\\ w_3 \\\\ \\vdots \\\\ w_{N-1}  \\end{pmatrix} \\end{align}  <p>where</p>  \\begin{align} h_i &amp; = x_{i+1} - x_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ w_i &amp; = 6 \\left(\\frac{y_{i+1} - y_{i+1}}{h_i} - \\frac{y_i - y_{i-1}}{h_{i-1}}\\right) \\ \\ \\ (i = 1, \\dots, N-1) \\end{align}   \\begin{align} h_i &amp; = x_{i+1} - x_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ w_i &amp; = 6 \\left(\\frac{y_{i+1} - y_{i+1}}{h_i} - \\frac{y_i - y_{i-1}}{h_{i-1}}\\right) \\ \\ \\ (i = 1, \\dots, N-1) \\end{align}  <p>The coefficient matrix of this linear equation is tridiagonal matrix. Therefore, it can be solve with tridiagonal matrix algorithm, which can solve linear equations without gradient descent methods.</p> <p>Solving this linear equation with tridiagonal matrix algorithm, we can calculate coefficients of spline interpolation as follows.</p>  \\begin{align} a_i &amp; = \\frac{v_{i+1} - v_i}{6 (x_{i+1} - x_i)} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ b_i &amp; = \\frac{v_i}{2} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ c_i &amp; = \\frac{y_{i+1} - y_i}{x_{i+1} - x_i} - \\frac{1}{6}(x_{i+1} - x_i)(2 v_i + v_{i+1}) \\ \\ \\ (i = 0, \\dots, N-1) \\\\ d_i &amp; = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\end{align}   \\begin{align} a_i &amp; = \\frac{v_{i+1} - v_i}{6 (x_{i+1} - x_i)} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ b_i &amp; = \\frac{v_i}{2} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ c_i &amp; = \\frac{y_{i+1} - y_i}{x_{i+1} - x_i} - \\frac{1}{6}(x_{i+1} - x_i)(2 v_i + v_{i+1}) \\ \\ \\ (i = 0, \\dots, N-1) \\\\ d_i &amp; = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\end{align}"},{"location":"common/interpolation/#tridiagonal-matrix-algorithm","title":"Tridiagonal Matrix Algorithm","text":"<p>We solve tridiagonal linear equation according to this article where variables of linear equation are expressed as follows in the implementation.</p>  \\begin{align}  \\begin{pmatrix}     b_0 &amp; c_0 &amp;     &amp; \\\\     a_0 &amp; b_1 &amp; c_2 &amp; O \\\\         &amp;     &amp; \\ddots \\\\     O &amp;     &amp; a_{N-2} &amp;  b_{N-1}  \\end{pmatrix} x = \\begin{pmatrix}     d_0 \\\\ d_2 \\\\ d_3 \\\\ \\vdots \\\\ d_{N-1}  \\end{pmatrix} \\end{align}   \\begin{align}  \\begin{pmatrix}     b_0 &amp; c_0 &amp;     &amp; \\\\     a_0 &amp; b_1 &amp; c_2 &amp; O \\\\         &amp;     &amp; \\ddots \\\\     O &amp;     &amp; a_{N-2} &amp;  b_{N-1}  \\end{pmatrix} x = \\begin{pmatrix}     d_0 \\\\ d_2 \\\\ d_3 \\\\ \\vdots \\\\ d_{N-1}  \\end{pmatrix} \\end{align}"},{"location":"common/kalman_filter/","title":"kalman_filter","text":""},{"location":"common/kalman_filter/#purpose","title":"Purpose","text":"<p>This common package contains the kalman filter with time delay and the calculation of the kalman filter.</p>"},{"location":"common/kalman_filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/motion_utils/","title":"Motion Utils package","text":""},{"location":"common/motion_utils/#definition-of-terms","title":"Definition of terms","text":""},{"location":"common/motion_utils/#segment","title":"Segment","text":"<p><code>Segment</code> in Autoware is the line segment between two successive points as follows.</p> <p></p> <p>The nearest segment index and nearest point index to a certain position is not always th same. Therefore, we prepare two different utility functions to calculate a nearest index for points and segments.</p>"},{"location":"common/motion_utils/#nearest-index-search","title":"Nearest index search","text":"<p>In this section, the nearest index and nearest segment index search is explained.</p> <p>We have the same functions for the nearest index search and nearest segment index search. Taking for the example the nearest index search, we have two types of functions.</p> <p>The first function finds the nearest index with distance and yaw thresholds.</p> <pre><code>template &lt;class T&gt;\nsize_t findFirstNearestIndexWithSoftConstraints(\nconst T &amp; points, const geometry_msgs::msg::Pose &amp; pose,\nconst double dist_threshold = std::numeric_limits&lt;double&gt;::max(),\nconst double yaw_threshold = std::numeric_limits&lt;double&gt;::max());\n</code></pre> <p>This function finds the first local solution within thresholds. The reason to find the first local one is to deal with some edge cases explained in the next subsection.</p> <p>There are default parameters for thresholds arguments so that you can decide which thresholds to pass to the function.</p> <ol> <li>When both the distance and yaw thresholds are given.<ul> <li>First, try to find the nearest index with both the distance and yaw thresholds.</li> <li>If not found, try to find again with only the distance threshold.</li> <li>If not found, find without any thresholds.</li> </ul> </li> <li>When only distance are given.<ul> <li>First, try to find the nearest index the distance threshold.</li> <li>If not found, find without any thresholds.</li> </ul> </li> <li>When no thresholds are given.<ul> <li>Find the nearest index.</li> </ul> </li> </ol> <p>The second function finds the nearest index in the lane whose id is <code>lane_id</code>.</p> <pre><code>size_t findNearestIndexFromLaneId(\nconst autoware_auto_planning_msgs::msg::PathWithLaneId &amp; path,\nconst geometry_msgs::msg::Point &amp; pos, const int64_t lane_id);\n</code></pre>"},{"location":"common/motion_utils/#application-to-various-object","title":"Application to various object","text":"<p>Many node packages often calculate the nearest index of objects. We will explain the recommended method to calculate it.</p>"},{"location":"common/motion_utils/#nearest-index-for-the-ego","title":"Nearest index for the ego","text":"<p>Assuming that the path length before the ego is short enough, we expect to find the correct nearest index in the following edge cases by <code>findFirstNearestIndexWithSoftConstraints</code> with both distance and yaw thresholds. Blue circles describes the distance threshold from the base link position and two blue lines describe the yaw threshold against the base link orientation. Among points in these cases, the correct nearest point which is red can be found.</p> <p></p> <p>Therefore, the implementation is as follows.</p> <pre><code>const size_t ego_nearest_idx = findFirstNearestIndexWithSoftConstraints(points, ego_pose, ego_nearest_dist_threshold, ego_nearest_yaw_threshold);\nconst size_t ego_nearest_seg_idx = findFirstNearestIndexWithSoftConstraints(points, ego_pose, ego_nearest_dist_threshold, ego_nearest_yaw_threshold);\n</code></pre>"},{"location":"common/motion_utils/#nearest-index-for-dynamic-objects","title":"Nearest index for dynamic objects","text":"<p>For the ego nearest index, the orientation is considered in addition to the position since the ego is supposed to follow the points. However, for the dynamic objects (e.g., predicted object), sometimes its orientation may be different from the points order, e.g. the dynamic object driving backward although the ego is driving forward.</p> <p>Therefore, the yaw threshold should not be considered for the dynamic object. The implementation is as follows.</p> <pre><code>const size_t dynamic_obj_nearest_idx = findFirstNearestIndexWithSoftConstraints(points, dynamic_obj_pose, dynamic_obj_nearest_dist_threshold);\nconst size_t dynamic_obj_nearest_seg_idx = findFirstNearestIndexWithSoftConstraints(points, dynamic_obj_pose, dynamic_obj_nearest_dist_threshold);\n</code></pre>"},{"location":"common/motion_utils/#nearest-index-for-traffic-objects","title":"Nearest index for traffic objects","text":"<p>In lanelet maps, traffic objects belong to the specific lane. With this specific lane's id, the correct nearest index can be found.</p> <p>The implementation is as follows.</p> <pre><code>// first extract `lane_id` which the traffic object belong to.\nconst size_t traffic_obj_nearest_idx = findNearestIndexFromLaneId(path_with_lane_id, traffic_obj_pos, lane_id);\nconst size_t traffic_obj_nearest_seg_idx = findNearestSegmentIndexFromLaneId(path_with_lane_id, traffic_obj_pos, lane_id);\n</code></pre>"},{"location":"common/motion_utils/#pathtrajectory-length-calculation-between-designated-points","title":"Path/Trajectory length calculation between designated points","text":"<p>Based on the discussion so far, the nearest index search algorithm is different depending on the object type. Therefore, we recommended using the wrapper utility functions which require the nearest index search (e.g., calculating the path length) with each nearest index search.</p> <p>For example, when we want to calculate the path length between the ego and the dynamic object, the implementation is as follows.</p> <pre><code>const size_t ego_nearest_seg_idx = findFirstNearestSegmentIndex(points, ego_pose, ego_nearest_dist_threshold, ego_nearest_yaw_threshold);\nconst size_t dyn_obj_nearest_seg_idx = findFirstNearestSegmentIndex(points, dyn_obj_pose, dyn_obj_nearest_dist_threshold);\nconst double length_from_ego_to_obj = calcSignedArcLength(points, ego_pose, ego_nearest_seg_idx, dyn_obj_pose, dyn_obj_nearest_seg_idx);\n</code></pre>"},{"location":"common/motion_utils/docs/vehicle/vehicle/","title":"vehicle utils","text":"<p>Vehicle utils provides a convenient library used to check vehicle status.</p>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#feature","title":"Feature","text":"<p>The library contains following classes.</p>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#vehicle_stop_checker","title":"vehicle_stop_checker","text":"<p>This class check whether the vehicle is stopped or not based on localization result.</p>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#subscribed-topics","title":"Subscribed Topics","text":"Name Type Description <code>/localization/kinematic_state</code> <code>nav_msgs::msg::Odometry</code> vehicle odometry"},{"location":"common/motion_utils/docs/vehicle/vehicle/#parameters","title":"Parameters","text":"Name Type Default Value Explanation <code>velocity_buffer_time_sec</code> double 10.0 odometry buffering time [s]"},{"location":"common/motion_utils/docs/vehicle/vehicle/#member-functions","title":"Member functions","text":"<pre><code>bool isVehicleStopped(const double stop_duration)\n</code></pre> <ul> <li>Check simply whether the vehicle is stopped based on the localization result.</li> <li>Returns <code>true</code> if the vehicle is stopped, even if system outputs a non-zero target velocity.</li> </ul>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#example-usage","title":"Example Usage","text":"<p>Necessary includes:</p> <pre><code>#include &lt;tier4_autoware_utils/vehicle/vehicle_state_checker.hpp&gt;\n</code></pre> <p>1.Create a checker instance.</p> <pre><code>class SampleNode : public rclcpp::Node\n{\npublic:\nSampleNode() : Node(\"sample_node\")\n{\nvehicle_stop_checker_ = std::make_unique&lt;VehicleStopChecker&gt;(this);\n}\n\nstd::unique_ptr&lt;VehicleStopChecker&gt; vehicle_stop_checker_;\n\nbool sampleFunc();\n\n...\n}\n</code></pre> <p>2.Check the vehicle state.</p> <pre><code>bool SampleNode::sampleFunc()\n{\n...\n\nconst auto result_1 = vehicle_stop_checker_-&gt;isVehicleStopped();\n\n...\n\nconst auto result_2 = vehicle_stop_checker_-&gt;isVehicleStopped(3.0);\n\n...\n}\n</code></pre>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#vehicle_arrival_checker","title":"vehicle_arrival_checker","text":"<p>This class check whether the vehicle arrive at stop point based on localization and planning result.</p>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#subscribed-topics_1","title":"Subscribed Topics","text":"Name Type Description <code>/localization/kinematic_state</code> <code>nav_msgs::msg::Odometry</code> vehicle odometry <code>/planning/scenario_planning/trajectory</code> <code>autoware_auto_planning_msgs::msg::Trajectory</code> trajectory"},{"location":"common/motion_utils/docs/vehicle/vehicle/#parameters_1","title":"Parameters","text":"Name Type Default Value Explanation <code>velocity_buffer_time_sec</code> double 10.0 odometry buffering time [s] <code>th_arrived_distance_m</code> double 1.0 threshold distance to check if vehicle has arrived at target point [m]"},{"location":"common/motion_utils/docs/vehicle/vehicle/#member-functions_1","title":"Member functions","text":"<pre><code>bool isVehicleStopped(const double stop_duration)\n</code></pre> <ul> <li>Check simply whether the vehicle is stopped based on the localization result.</li> <li>Returns <code>true</code> if the vehicle is stopped, even if system outputs a non-zero target velocity.</li> </ul> <pre><code>bool isVehicleStoppedAtStopPoint(const double stop_duration)\n</code></pre> <ul> <li>Check whether the vehicle is stopped at stop point based on the localization and planning result.</li> <li>Returns <code>true</code> if the vehicle is not only stopped but also arrived at stop point.</li> </ul>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#example-usage_1","title":"Example Usage","text":"<p>Necessary includes:</p> <pre><code>#include &lt;tier4_autoware_utils/vehicle/vehicle_state_checker.hpp&gt;\n</code></pre> <p>1.Create a checker instance.</p> <pre><code>class SampleNode : public rclcpp::Node\n{\npublic:\nSampleNode() : Node(\"sample_node\")\n{\nvehicle_arrival_checker_ = std::make_unique&lt;VehicleArrivalChecker&gt;(this);\n}\n\nstd::unique_ptr&lt;VehicleArrivalChecker&gt; vehicle_arrival_checker_;\n\nbool sampleFunc();\n\n...\n}\n</code></pre> <p>2.Check the vehicle state.</p> <pre><code>bool SampleNode::sampleFunc()\n{\n...\n\nconst auto result_1 = vehicle_arrival_checker_-&gt;isVehicleStopped();\n\n...\n\nconst auto result_2 = vehicle_arrival_checker_-&gt;isVehicleStopped(3.0);\n\n...\n\nconst auto result_3 = vehicle_arrival_checker_-&gt;isVehicleStoppedAtStopPoint();\n\n...\n\nconst auto result_4 = vehicle_arrival_checker_-&gt;isVehicleStoppedAtStopPoint(3.0);\n\n...\n}\n</code></pre>"},{"location":"common/motion_utils/docs/vehicle/vehicle/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p><code>vehicle_stop_checker</code> and <code>vehicle_arrival_checker</code> cannot check whether the vehicle is stopped more than <code>velocity_buffer_time_sec</code> second.</p>"},{"location":"common/osqp_interface/design/osqp_interface-design/","title":"Interface for the OSQP library","text":"<p>This is the design document for the <code>osqp_interface</code> package.</p>"},{"location":"common/osqp_interface/design/osqp_interface-design/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>This packages provides a C++ interface for the OSQP library.</p>"},{"location":"common/osqp_interface/design/osqp_interface-design/#design","title":"Design","text":"<p>The class <code>OSQPInterface</code> takes a problem formulation as Eigen matrices and vectors, converts these objects into C-style Compressed-Column-Sparse matrices and dynamic arrays, loads the data into the OSQP workspace dataholder, and runs the optimizer.</p>"},{"location":"common/osqp_interface/design/osqp_interface-design/#inputs-outputs-api","title":"Inputs / Outputs / API","text":"<p>The interface can be used in several ways:</p> <ol> <li> <p>Initialize the interface WITHOUT data. Load the problem formulation at the optimization call.</p> <pre><code>    osqp_interface = OSQPInterface();\nosqp_interface.optimize(P, A, q, l, u);\n</code></pre> </li> <li> <p>Initialize the interface WITH data.</p> <pre><code>    osqp_interface = OSQPInterface(P, A, q, l, u);\nosqp_interface.optimize();\n</code></pre> </li> <li> <p>WARM START OPTIMIZATION by modifying the problem formulation between optimization runs.</p> <pre><code>    osqp_interface = OSQPInterface(P, A, q, l, u);\nosqp_interface.optimize();\nosqp.initializeProblem(P_new, A_new, q_new, l_new, u_new);\nosqp_interface.optimize();\n</code></pre> <p>The optimization results are returned as a vector by the optimization function.</p> <pre><code>std::tuple&lt;std::vector&lt;double&gt;, std::vector&lt;double&gt;&gt; result = osqp_interface.optimize();\nstd::vector&lt;double&gt; param = std::get&lt;0&gt;(result);\ndouble x_0 = param[0];\ndouble x_1 = param[1];\n</code></pre> </li> </ol>"},{"location":"common/osqp_interface/design/osqp_interface-design/#references-external-links","title":"References / External links","text":"<ul> <li>OSQP library: https://osqp.org/</li> </ul>"},{"location":"common/osqp_interface/design/osqp_interface-design/#related-issues","title":"Related issues","text":""},{"location":"common/path_distance_calculator/Readme/","title":"path_distance_calculator","text":""},{"location":"common/path_distance_calculator/Readme/#purpose","title":"Purpose","text":"<p>This node publishes a distance from the closest path point from the self-position to the end point of the path. Note that the distance means the arc-length along the path, not the Euclidean distance between the two points.</p>"},{"location":"common/path_distance_calculator/Readme/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"common/path_distance_calculator/Readme/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/path_distance_calculator/Readme/#input","title":"Input","text":"Name Type Description <code>/planning/scenario_planning/lane_driving/behavior_planning/path</code> <code>autoware_auto_planning_msgs::msg::Path</code> Reference path <code>/tf</code> <code>tf2_msgs/TFMessage</code> TF (self-pose)"},{"location":"common/path_distance_calculator/Readme/#output","title":"Output","text":"Name Type Description <code>~/distance</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> Publish a distance from the closest path point from the self-position to the end point of the path[m]"},{"location":"common/path_distance_calculator/Readme/#parameters","title":"Parameters","text":""},{"location":"common/path_distance_calculator/Readme/#node-parameters","title":"Node Parameters","text":"<p>None.</p>"},{"location":"common/path_distance_calculator/Readme/#core-parameters","title":"Core Parameters","text":"<p>None.</p>"},{"location":"common/path_distance_calculator/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/polar_grid/Readme/","title":"Polar Grid","text":""},{"location":"common/polar_grid/Readme/#purpose","title":"Purpose","text":"<p>This plugin displays polar grid around ego vehicle in Rviz.</p>"},{"location":"common/polar_grid/Readme/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Explanation <code>Max Range</code> float 200.0f max range for polar grid. [m] <code>Wave Velocity</code> float 100.0f wave ring velocity. [m/s] <code>Delta Range</code> float 10.0f wave ring distance for polar grid. [m]"},{"location":"common/polar_grid/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/rtc_manager_rviz_plugin/","title":"rtc_manager_rviz_plugin","text":""},{"location":"common/rtc_manager_rviz_plugin/#purpose","title":"Purpose","text":"<p>The purpose of this Rviz plugin is</p> <ol> <li> <p>To display each content of RTC status.</p> </li> <li> <p>To switch each module of RTC auto mode.</p> </li> <li> <p>To change RTC cooperate commands by button.</p> </li> </ol> <p></p>"},{"location":"common/rtc_manager_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/rtc_manager_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/api/external/get/rtc_status</code> <code>tier4_rtc_msgs::msg::CooperateStatusArray</code> The statuses of each Cooperate Commands"},{"location":"common/rtc_manager_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/api/external/set/rtc_commands</code> <code>tier4_rtc_msgs::src::CooperateCommands</code> The Cooperate Commands for each planning <code>/planning/enable_auto_mode/*</code> <code>tier4_rtc_msgs::src::AutoMode</code> The Cooperate Commands mode for each planning module"},{"location":"common/rtc_manager_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li> <p>Start rviz and select panels/Add new panel.    </p> </li> <li> <p>tier4_state_rviz_plugin/RTCManagerPanel and press OK.    </p> </li> </ol>"},{"location":"common/signal_processing/","title":"Signal Processing Methods","text":"<p>In this package, we present signal processing related methods for the Autoware applications. The following functionalities are available in the current version.</p> <ul> <li>an 1-D Low-pass filter,</li> <li>Butterworth low-pass filter tools.</li> </ul> <p>low-pass filter currently supports only the 1-D low pass filtering.</p>"},{"location":"common/signal_processing/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/signal_processing/documentation/ButterworthFilter/","title":"ButterworthFilter","text":""},{"location":"common/signal_processing/documentation/ButterworthFilter/#butterworth-low-pass-filter-design-tool-class","title":"Butterworth Low-pass Filter Design Tool Class","text":"<p>This Butterworth low-pass filter design tool can be used to design a Butterworth filter in continuous and discrete-time from the given specifications of the filter performance. The Butterworth filter is a class implementation. A default constructor creates the object without any argument.</p> <p>The filter can be prepared in three ways. If the filter specifications are known, such as the pass-band, and stop-band frequencies (Wp and Ws) together with the pass-band and stop-band ripple magnitudes (Ap and As), one can call the filter's buttord method with these arguments to obtain the recommended filter order (N) and cut-off frequency (Wc_rad_sec [rad/s]).</p> <p> Figure 1. Butterworth Low-pass filter specification from [1].</p> <p>An example call is demonstrated below;</p> <pre><code>ButterworthFilter bf();\n\nWp = 2.0; // pass-band frequency [rad/sec]\nWs = 3.0; // stop-band frequency [rad/sec]\nAp = 6.0; // pass-band ripple mag or loss [dB]\nAs = 20.0; // stop band ripple attenuation [dB]\n\n// Computing filter coefficients from the specs\nbf.Buttord(Wp, Ws, Ap, As);\n\n// Get the computed order and Cut-Off frequency\nsOrderCutOff NWc = bf.getOrderCutOff();]\n\ncout &lt;&lt; \" The computed order is ;\" &lt;&lt; NWc.N &lt;&lt; endl;\ncout &lt;&lt; \" The computed cut-off frequency is ;\" &lt;&lt; NWc.Wc_rad_sec &lt;&lt; endl;\n</code></pre> <p>The filter order and cut-off frequency can be obtained in a struct using bf.getOrderCutoff() method. These specs can be printed on the screen by calling PrintFilterSpecs() method. If the user would like to define the order and cut-off frequency manually, the setter methods for these variables can be called to set the filter order (N) and the desired cut-off frequency (Wc_rad_sec [rad/sec]) for the filter.</p>"},{"location":"common/signal_processing/documentation/ButterworthFilter/#obtaining-filter-transfer-functions","title":"Obtaining Filter Transfer Functions","text":"<p>The discrete transfer function of the filter requires the roots and gain of the continuous-time transfer function. Therefore, it is a must to call the first computeContinuousTimeTF() to create the continuous-time transfer function of the filter using;</p> <pre><code>bf.computeContinuousTimeTF();\n</code></pre> <p>The computed continuous-time transfer function roots can be printed on the screen using the methods;</p> <pre><code>bf.PrintFilter_ContinuousTimeRoots();\nbf.PrintContinuousTimeTF();\n</code></pre> <p>The resulting screen output for a 5th order filter is demonstrated below.</p> <pre><code> Roots of Continuous Time Filter Transfer Function Denominator are :\n-0.585518 + j 1.80204\n-1.53291 + j 1.11372\n-1.89478 + j 2.32043e-16\n-1.53291 + j -1.11372\n-0.585518 + j -1.80204\n\n\nThe Continuous-Time Transfer Function of the Filter is ;\n\n                                   24.422\n-------------------------------------------------------------------------------\n1.000 *s[5] + 6.132 *s[4] + 18.798 *s[3] + 35.619 *s[2] + 41.711 *s[1] + 24.422\n</code></pre>"},{"location":"common/signal_processing/documentation/ButterworthFilter/#discrete-time-transfer-function-difference-equations","title":"Discrete Time Transfer Function (Difference Equations)","text":"<p>The digital filter equivalent of the continuous-time definitions is produced by using the bi-linear transformation. When creating the discrete-time function of the ButterworthFilter object, its Numerator (Bn) and Denominator (An ) coefficients are stored in a vector of filter order size N.</p> <p>The discrete transfer function method is called using ;</p> <pre><code>bf.computeDiscreteTimeTF();\nbf.PrintDiscreteTimeTF();\n</code></pre> <p>The results are printed on the screen like; The Discrete-Time Transfer Function of the Filter is ;</p> <pre><code>0.191 *z[-5] + 0.956 *z[-4] + 1.913 *z[-3] + 1.913 *z[-2] + 0.956 *z[-1] + 0.191\n--------------------------------------------------------------------------------\n1.000 *z[-5] + 1.885 *z[-4] + 1.888 *z[-3] + 1.014 *z[-2] + 0.298 *z[-1] + 0.037\n</code></pre> <p>and the associated difference coefficients An and Bn by withing a struct ;</p> <pre><code>sDifferenceAnBn AnBn = bf.getAnBn();\n</code></pre> <p>The difference coefficients appear in the filtering equation in the form of.</p> <pre><code>An * Y_filtered = Bn * Y_unfiltered\n</code></pre> <p>To filter a signal given in a vector form ;</p>"},{"location":"common/signal_processing/documentation/ButterworthFilter/#calling-filter-by-a-specified-cut-off-and-sampling-frequencies-in-hz","title":"Calling Filter by a specified cut-off and sampling frequencies [in Hz]","text":"<p>The Butterworth filter can also be created by defining the desired order (N), a cut-off frequency (fc in [Hz]), and a sampling frequency (fs in [Hz]). In this method, the cut-off frequency is pre-warped with respect to the sampling frequency [1, 2] to match the continuous and digital filter frequencies.</p> <p>The filter is prepared by the following calling options;</p> <pre><code> // 3rd METHOD defining a sampling frequency together with the cut-off fc, fs\n bf.setOrder(2);\n bf.setCutOffFrequency(10, 100);\n</code></pre> <p>At this step, we define a boolean variable whether to use the pre-warping option or not.</p> <pre><code>// Compute Continuous Time TF\nbool use_sampling_frequency = true;\nbf.computeContinuousTimeTF(use_sampling_frequency);\nbf.PrintFilter_ContinuousTimeRoots();\nbf.PrintContinuousTimeTF();\n\n// Compute Discrete Time TF\nbf.computeDiscreteTimeTF(use_sampling_frequency);\nbf.PrintDiscreteTimeTF();\n</code></pre> <p>References:</p> <ol> <li> <p>Manolakis, Dimitris G., and Vinay K. Ingle. Applied digital signal processing: theory and practice. Cambridge    University Press, 2011.</p> </li> <li> <p>https://en.wikibooks.org/wiki/Digital_Signal_Processing/Bilinear_Transform</p> </li> </ol>"},{"location":"common/tier4_autoware_utils/","title":"tier4_autoware_utils","text":""},{"location":"common/tier4_autoware_utils/#purpose","title":"Purpose","text":"<p>This package contains many common functions used by other packages, so please refer to them as needed.</p>"},{"location":"common/tier4_control_rviz_plugin/","title":"tier4_control_rviz_plugin","text":"<p>This package is to mimic external control for simulation.</p>"},{"location":"common/tier4_control_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_control_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/control/current_gate_mode</code> <code>tier4_control_msgs::msg::GateMode</code> Current GATE mode <code>/vehicle/status/velocity_status</code> <code>autoware_auto_vehicle_msgs::msg::VelocityReport</code> Current velocity status <code>/api/autoware/get/engage</code> <code>tier4_external_api_msgs::srv::Engage</code> Getting Engage <code>/vehicle/status/gear_status</code> <code>autoware_auto_vehicle_msgs::msg::GearReport</code> The state of GEAR"},{"location":"common/tier4_control_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/control/gate_mode_cmd</code> <code>tier4_control_msgs::msg::GateMode</code> GATE mode <code>/external/selected/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> AckermannControlCommand <code>/external/selected/gear_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> GEAR"},{"location":"common/tier4_control_rviz_plugin/#usage","title":"Usage","text":"<ol> <li> <p>Start rviz and select Panels.</p> <p></p> </li> <li> <p>Select tier4_control_rviz_plugin/ManualController and press OK.</p> <p></p> </li> <li> <p>Enter velocity in \"Set Cruise Velocity\" and Press the button to confirm. You can notice that GEAR shows D (DRIVE).</p> <p></p> </li> <li> <p>Press \"Enable Manual Control\" and you can notice that \"GATE\" and \"Engage\" turn \"Ready\" and the vehicle starts!</p> <p></p> </li> </ol>"},{"location":"common/tier4_datetime_rviz_plugin/","title":"tier4_datetime_rviz_plugin","text":""},{"location":"common/tier4_datetime_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin displays the ROS Time and Wall Time in rviz.</p>"},{"location":"common/tier4_datetime_rviz_plugin/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/tier4_datetime_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select panels/Add new panel.    </li> <li>Select tier4_datetime_rviz_plugin/AutowareDateTimePanel and press OK.    </li> </ol>"},{"location":"common/tier4_debug_rviz_plugin/","title":"tier4_debug_rviz_plugin","text":"<p>This package is including jsk code. Note that jsk_overlay_utils.cpp and jsk_overlay_utils.hpp are BSD license.</p>"},{"location":"common/tier4_debug_rviz_plugin/#plugins","title":"Plugins","text":""},{"location":"common/tier4_debug_rviz_plugin/#float32multiarraystampedpiechart","title":"Float32MultiArrayStampedPieChart","text":"<p>Pie chart from <code>tier4_debug_msgs::msg::Float32MultiArrayStamped</code>.</p> <p></p>"},{"location":"common/tier4_debug_tools/","title":"tier4_debug_tools","text":"<p>This package provides useful features for debugging Autoware.</p>"},{"location":"common/tier4_debug_tools/#usage","title":"Usage","text":""},{"location":"common/tier4_debug_tools/#tf2pose","title":"tf2pose","text":"<p>This tool converts any <code>tf</code> to <code>pose</code> topic. With this tool, for example, you can plot <code>x</code> values of <code>tf</code> in <code>rqt_multiplot</code>.</p> <pre><code>ros2 run tier4_debug_tools tf2pose {tf_from} {tf_to} {hz}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools tf2pose base_link ndt_base_link 100\n\n$ ros2 topic echo /tf2pose/pose -n1\nheader:\n  seq: 13\nstamp:\n    secs: 1605168366\nnsecs: 549174070\nframe_id: \"base_link\"\npose:\n  position:\n    x: 0.0387684271191\n    y: -0.00320360406477\n    z: 0.000276674520819\n  orientation:\n    x: 0.000335221893885\n    y: 0.000122020672186\n    z: -0.00539673212896\n    w: 0.999985368502\n---\n</code></pre>"},{"location":"common/tier4_debug_tools/#pose2tf","title":"pose2tf","text":"<p>This tool converts any <code>pose</code> topic to <code>tf</code>.</p> <pre><code>ros2 run tier4_debug_tools pose2tf {pose_topic_name} {tf_name}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools pose2tf /localization/pose_estimator/pose ndt_pose\n\n$ ros2 run tf tf_echo ndt_pose ndt_base_link 100\nAt time 1605168365.449\n- Translation: [0.000, 0.000, 0.000]\n- Rotation: in Quaternion [0.000, 0.000, 0.000, 1.000]\nin RPY (radian) [0.000, -0.000, 0.000]\nin RPY (degree) [0.000, -0.000, 0.000]\n</code></pre>"},{"location":"common/tier4_debug_tools/#stop_reason2pose","title":"stop_reason2pose","text":"<p>This tool extracts <code>pose</code> from <code>stop_reasons</code>. Topics without numbers such as <code>/stop_reason2pose/pose/detection_area</code> are the nearest stop_reasons, and topics with numbers are individual stop_reasons that are roughly matched with previous ones.</p> <pre><code>ros2 run tier4_debug_tools stop_reason2pose {stop_reason_topic_name}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools stop_reason2pose /planning/scenario_planning/status/stop_reasons\n\n$ ros2 topic list | ag stop_reason2pose\n/stop_reason2pose/pose/detection_area\n/stop_reason2pose/pose/detection_area_1\n/stop_reason2pose/pose/obstacle_stop\n/stop_reason2pose/pose/obstacle_stop_1\n\n$ ros2 topic echo /stop_reason2pose/pose/detection_area -n1\nheader:\n  seq: 1\nstamp:\n    secs: 1605168355\nnsecs:    821713\nframe_id: \"map\"\npose:\n  position:\n    x: 60608.8433457\n    y: 43886.2410876\n    z: 44.9078212441\n  orientation:\n    x: 0.0\n    y: 0.0\n    z: -0.190261378408\n    w: 0.981733470901\n---\n</code></pre>"},{"location":"common/tier4_debug_tools/#stop_reason2tf","title":"stop_reason2tf","text":"<p>This is an all-in-one script that uses <code>tf2pose</code>, <code>pose2tf</code>, and <code>stop_reason2pose</code>. With this tool, you can view the relative position from base_link to the nearest stop_reason.</p> <pre><code>ros2 run tier4_debug_tools stop_reason2tf {stop_reason_name}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools stop_reason2tf obstacle_stop\nAt time 1605168359.501\n- Translation: [0.291, -0.095, 0.266]\n- Rotation: in Quaternion [0.007, 0.011, -0.005, 1.000]\nin RPY (radian) [0.014, 0.023, -0.010]\nin RPY (degree) [0.825, 1.305, -0.573]\n</code></pre>"},{"location":"common/tier4_debug_tools/#lateral_error_publisher","title":"lateral_error_publisher","text":"<p>This node calculate the control error and localization error in the trajectory normal direction as shown in the figure below.</p> <p></p> <p>Set the reference trajectory, vehicle pose and ground truth pose in the launch file.</p> <pre><code>ros2 launch tier4_debug_tools lateral_error_publisher.launch.xml\n</code></pre>"},{"location":"common/tier4_localization_rviz_plugin/","title":"tier4_localization_rviz_plugin","text":""},{"location":"common/tier4_localization_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin can display the history of the localization obtained by ekf_localizer or ndt_scan_matching.</p>"},{"location":"common/tier4_localization_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_localization_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>input/pose</code> <code>geometry_msgs::msg::PoseStamped</code> In input/pose, put the result of localization calculated by ekf_localizer or ndt_scan_matching"},{"location":"common/tier4_localization_rviz_plugin/#parameters","title":"Parameters","text":""},{"location":"common/tier4_localization_rviz_plugin/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>property_buffer_size_</code> int 100 Buffer size of topic <code>property_line_view_</code> bool true Use Line property or not <code>property_line_width_</code> float 0.1 Width of Line property [m] <code>property_line_alpha_</code> float 1.0 Alpha of Line property <code>property_line_color_</code> QColor Qt::white Color of Line property"},{"location":"common/tier4_localization_rviz_plugin/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/tier4_localization_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select Add under the Displays panel.    </li> <li>Select tier4_localization_rviz_plugin/PoseHistory and press OK.    </li> <li>Enter the name of the topic where you want to view the trajectory.    </li> </ol>"},{"location":"common/tier4_perception_rviz_plugin/","title":"tier4_perception_rviz_plugin","text":""},{"location":"common/tier4_perception_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin is used to generate dummy pedestrians, cars, and obstacles in planning simulator.</p>"},{"location":"common/tier4_perception_rviz_plugin/#overview","title":"Overview","text":"<p>The CarInitialPoseTool sends a topic for generating a dummy car. The PedestrianInitialPoseTool sends a topic for generating a dummy pedestrian. The UnknownInitialPoseTool sends a topic for generating a dummy obstacle. The DeleteAllObjectsTool deletes the dummy cars, pedestrians, and obstacles displayed by the above three tools.</p>"},{"location":"common/tier4_perception_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_perception_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/simulation/dummy_perception_publisher/object_info</code> <code>dummy_perception_publisher::msg::Object</code> The topic on which to publish dummy object info"},{"location":"common/tier4_perception_rviz_plugin/#parameter","title":"Parameter","text":""},{"location":"common/tier4_perception_rviz_plugin/#core-parameters","title":"Core Parameters","text":""},{"location":"common/tier4_perception_rviz_plugin/#carpose","title":"CarPose","text":"Name Type Default Value Description <code>topic_property_</code> string <code>/simulation/dummy_perception_publisher/object_info</code> The topic on which to publish dummy object info <code>std_dev_x_</code> float 0.03 X standard deviation for initial pose [m] <code>std_dev_y_</code> float 0.03 Y standard deviation for initial pose [m] <code>std_dev_z_</code> float 0.03 Z standard deviation for initial pose [m] <code>std_dev_theta_</code> float 5.0 * M_PI / 180.0 Theta standard deviation for initial pose [rad] <code>length_</code> float 4.0 X standard deviation for initial pose [m] <code>width_</code> float 1.8 Y standard deviation for initial pose [m] <code>height_</code> float 2.0 Z standard deviation for initial pose [m] <code>position_z_</code> float 0.0 Z position for initial pose [m] <code>velocity_</code> float 0.0 Velocity [m/s]"},{"location":"common/tier4_perception_rviz_plugin/#buspose","title":"BusPose","text":"Name Type Default Value Description <code>topic_property_</code> string <code>/simulation/dummy_perception_publisher/object_info</code> The topic on which to publish dummy object info <code>std_dev_x_</code> float 0.03 X standard deviation for initial pose [m] <code>std_dev_y_</code> float 0.03 Y standard deviation for initial pose [m] <code>std_dev_z_</code> float 0.03 Z standard deviation for initial pose [m] <code>std_dev_theta_</code> float 5.0 * M_PI / 180.0 Theta standard deviation for initial pose [rad] <code>length_</code> float 10.5 X standard deviation for initial pose [m] <code>width_</code> float 2.5 Y standard deviation for initial pose [m] <code>height_</code> float 3.5 Z standard deviation for initial pose [m] <code>position_z_</code> float 0.0 Z position for initial pose [m] <code>velocity_</code> float 0.0 Velocity [m/s]"},{"location":"common/tier4_perception_rviz_plugin/#pedestrianpose","title":"PedestrianPose","text":"Name Type Default Value Description <code>topic_property_</code> string <code>/simulation/dummy_perception_publisher/object_info</code> The topic on which to publish dummy object info <code>std_dev_x_</code> float 0.03 X standard deviation for initial pose [m] <code>std_dev_y_</code> float 0.03 Y standard deviation for initial pose [m] <code>std_dev_z_</code> float 0.03 Z standard deviation for initial pose [m] <code>std_dev_theta_</code> float 5.0 * M_PI / 180.0 Theta standard deviation for initial pose [rad] <code>position_z_</code> float 0.0 Z position for initial pose [m] <code>velocity_</code> float 0.0 Velocity [m/s]"},{"location":"common/tier4_perception_rviz_plugin/#unknownpose","title":"UnknownPose","text":"Name Type Default Value Description <code>topic_property_</code> string <code>/simulation/dummy_perception_publisher/object_info</code> The topic on which to publish dummy object info <code>std_dev_x_</code> float 0.03 X standard deviation for initial pose [m] <code>std_dev_y_</code> float 0.03 Y standard deviation for initial pose [m] <code>std_dev_z_</code> float 0.03 Z standard deviation for initial pose [m] <code>std_dev_theta_</code> float 5.0 * M_PI / 180.0 Theta standard deviation for initial pose [rad] <code>position_z_</code> float 0.0 Z position for initial pose [m] <code>velocity_</code> float 0.0 Velocity [m/s]"},{"location":"common/tier4_perception_rviz_plugin/#deleteallobjects","title":"DeleteAllObjects","text":"Name Type Default Value Description <code>topic_property_</code> string <code>/simulation/dummy_perception_publisher/object_info</code> The topic on which to publish dummy object info"},{"location":"common/tier4_perception_rviz_plugin/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Using a planning simulator</p>"},{"location":"common/tier4_perception_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select + on the tool tab.    </li> <li>Select one of the following: tier4_perception_rviz_plugin and press OK.    </li> <li>Select the new item in the tool tab (2D Dummy Car in the example) and click on it in rviz.    </li> </ol>"},{"location":"common/tier4_perception_rviz_plugin/#interactive-manipulation","title":"Interactive manipulation","text":"<p>You can interactively manipulate the object.</p> <ol> <li>Select \"Tool Properties\" in rviz.</li> <li>Select the corresponding object tab in the Tool Properties.</li> <li>Turn the \"Interactive\" checkbox on.    </li> <li>Select the item in the tool tab in you haven't chosen yet.</li> <li>Key commands are as follows.</li> </ol> action key command ADD Shift + Click Right Button MOVE Hold down Right Button + Drug and Drop DELETE Alt + Click Right Button"},{"location":"common/tier4_planning_rviz_plugin/","title":"tier4_planning_rviz_plugin","text":"<p>This package is including jsk code. Note that jsk_overlay_utils.cpp and jsk_overlay_utils.hpp are BSD license.</p>"},{"location":"common/tier4_planning_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin displays the path, trajectory, and maximum speed.</p>"},{"location":"common/tier4_planning_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_planning_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/input/path</code> <code>autoware_auto_planning_msgs::msg::Path</code> The topic on which to subscribe path <code>/input/trajectory</code> <code>autoware_auto_planning_msgs::msg::Trajectory</code> The topic on which to subscribe trajectory <code>/planning/scenario_planning/current_max_velocity</code> <code>tier4_planning_msgs/msg/VelocityLimit</code> The topic on which to publish max velocity"},{"location":"common/tier4_planning_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/planning/mission_planning/checkpoint</code> <code>geometry_msgs/msg/PoseStamped</code> The topic on which to publish checkpoint"},{"location":"common/tier4_planning_rviz_plugin/#parameter","title":"Parameter","text":""},{"location":"common/tier4_planning_rviz_plugin/#core-parameters","title":"Core Parameters","text":""},{"location":"common/tier4_planning_rviz_plugin/#missioncheckpoint","title":"MissionCheckpoint","text":"Name Type Default Value Description <code>pose_topic_property_</code> string <code>mission_checkpoint</code> The topic on which to publish checkpoint <code>std_dev_x_</code> float 0.5 X standard deviation for checkpoint pose [m] <code>std_dev_y_</code> float 0.5 Y standard deviation for checkpoint pose [m] <code>std_dev_theta_</code> float M_PI / 12.0 Theta standard deviation for checkpoint pose [rad] <code>position_z_</code> float 0.0 Z position for checkpoint pose [m]"},{"location":"common/tier4_planning_rviz_plugin/#path","title":"Path","text":"Name Type Default Value Description <code>property_path_view_</code> bool true Use Path property or not <code>property_path_width_</code> float 2.0 Width of Path property [m] <code>property_path_alpha_</code> float 1.0 Alpha of Path property <code>property_path_color_view_</code> bool false Use Constant Color or not <code>property_path_color_</code> QColor Qt::black Color of Path property <code>property_velocity_view_</code> bool true Use Velocity property or not <code>property_velocity_alpha_</code> float 1.0 Alpha of Velocity property <code>property_velocity_scale_</code> float 0.3 Scale of Velocity property <code>property_velocity_color_view_</code> bool false Use Constant Color or not <code>property_velocity_color_</code> QColor Qt::black Color of Velocity property <code>property_vel_max_</code> float 3.0 Max velocity [m/s]"},{"location":"common/tier4_planning_rviz_plugin/#drivablearea","title":"DrivableArea","text":"Name Type Default Value Description <code>color_scheme_property_</code> int 0 Color scheme of DrivableArea property <code>alpha_property_</code> float 0.2 Alpha of DrivableArea property <code>draw_under_property_</code> bool false Draw as background or not"},{"location":"common/tier4_planning_rviz_plugin/#pathfootprint","title":"PathFootprint","text":"Name Type Default Value Description <code>property_path_footprint_view_</code> bool true Use Path Footprint property or not <code>property_path_footprint_alpha_</code> float 1.0 Alpha of Path Footprint property <code>property_path_footprint_color_</code> QColor Qt::black Color of Path Footprint property <code>property_vehicle_length_</code> float 4.77 Vehicle length [m] <code>property_vehicle_width_</code> float 1.83 Vehicle width [m] <code>property_rear_overhang_</code> float 1.03 Rear overhang [m]"},{"location":"common/tier4_planning_rviz_plugin/#trajectory","title":"Trajectory","text":"Name Type Default Value Description <code>property_path_view_</code> bool true Use Path property or not <code>property_path_width_</code> float 2.0 Width of Path property [m] <code>property_path_alpha_</code> float 1.0 Alpha of Path property <code>property_path_color_view_</code> bool false Use Constant Color or not <code>property_path_color_</code> QColor Qt::black Color of Path property <code>property_velocity_view_</code> bool true Use Velocity property or not <code>property_velocity_alpha_</code> float 1.0 Alpha of Velocity property <code>property_velocity_scale_</code> float 0.3 Scale of Velocity property <code>property_velocity_color_view_</code> bool false Use Constant Color or not <code>property_velocity_color_</code> QColor Qt::black Color of Velocity property <code>property_velocity_text_view_</code> bool false View text Velocity <code>property_velocity_text_scale_</code> float 0.3 Scale of Velocity property <code>property_vel_max_</code> float 3.0 Max velocity [m/s]"},{"location":"common/tier4_planning_rviz_plugin/#trajectoryfootprint","title":"TrajectoryFootprint","text":"Name Type Default Value Description <code>property_trajectory_footprint_view_</code> bool true Use Trajectory Footprint property or not <code>property_trajectory_footprint_alpha_</code> float 1.0 Alpha of Trajectory Footprint property <code>property_trajectory_footprint_color_</code> QColor QColor(230, 230, 50) Color of Trajectory Footprint property <code>property_vehicle_length_</code> float 4.77 Vehicle length [m] <code>property_vehicle_width_</code> float 1.83 Vehicle width [m] <code>property_rear_overhang_</code> float 1.03 Rear overhang [m] <code>property_trajectory_point_view_</code> bool false Use Trajectory Point property or not <code>property_trajectory_point_alpha_</code> float 1.0 Alpha of Trajectory Point property <code>property_trajectory_point_color_</code> QColor QColor(0, 60, 255) Color of Trajectory Point property <code>property_trajectory_point_radius_</code> float 0.1 Radius of Trajectory Point property"},{"location":"common/tier4_planning_rviz_plugin/#maxvelocity","title":"MaxVelocity","text":"Name Type Default Value Description <code>property_topic_name_</code> string <code>/planning/scenario_planning/current_max_velocity</code> The topic on which to subscribe max velocity <code>property_text_color_</code> QColor QColor(255, 255, 255) Text color <code>property_left_</code> int 128 Left of the plotter window [px] <code>property_top_</code> int 128 Top of the plotter window [px] <code>property_length_</code> int 96 Length of the plotter window [px] <code>property_value_scale_</code> float 1.0 / 4.0 Value scale"},{"location":"common/tier4_planning_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select Add under the Displays panel.    </li> <li>Select any one of the tier4_planning_rviz_plugin and press OK.    </li> <li>Enter the name of the topic where you want to view the path or trajectory.    </li> </ol>"},{"location":"common/tier4_screen_capture_rviz_plugin/","title":"tier4_screen_capture_rviz_plugin","text":""},{"location":"common/tier4_screen_capture_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin captures the screen of rviz.</p>"},{"location":"common/tier4_screen_capture_rviz_plugin/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>This is only for debug or analyze. The <code>capture screen</code> button is still beta version which can slow frame rate. set lower frame rate according to PC spec.</p>"},{"location":"common/tier4_screen_capture_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select panels/Add new panel.    </li> </ol>"},{"location":"common/tier4_simulated_clock_rviz_plugin/","title":"tier4_simulated_clock_rviz_plugin","text":""},{"location":"common/tier4_simulated_clock_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin allows publishing and controlling the simulated ROS time.</p>"},{"location":"common/tier4_simulated_clock_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/clock</code> <code>rosgraph_msgs::msg::Clock</code> the current simulated time"},{"location":"common/tier4_simulated_clock_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li>Start rviz and select panels/Add new panel.    </li> <li>Select tier4_clock_rviz_plugin/SimulatedClock and press OK.    </li> <li> <p>Use the added panel to control how the simulated clock is published.    </p> <ul> <li>Pause button: pause/resume the clock.</li> <li>Speed: speed of the clock relative to the system clock.</li> <li>Rate: publishing rate of the clock.</li> <li>Step button: advance the clock by the specified time step.</li> <li>Time step: value used to advance the clock when pressing the step button d).</li> <li>Time unit: time unit associated with the value from e).</li> </ul> </li> </ol>"},{"location":"common/tier4_state_rviz_plugin/","title":"tier4_state_rviz_plugin","text":""},{"location":"common/tier4_state_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin displays the current status of autoware. This plugin also can engage from the panel.</p>"},{"location":"common/tier4_state_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_state_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/api/operation_mode/state</code> <code>autoware_adapi_v1_msgs::msg::OperationModeState</code> The topic represents the state of operation mode <code>/api/routing/state</code> <code>autoware_adapi_v1_msgs::msg::RouteState</code> The topic represents the state of route <code>/api/localization/initialization_state</code> <code>autoware_adapi_v1_msgs::msg::LocalizationInitializationState</code> The topic represents the state of localization initialization <code>/api/motion/state</code> <code>autoware_adapi_v1_msgs::msg::MotionState</code> The topic represents the state of motion <code>/api/autoware/get/emergency</code> <code>tier4_external_api_msgs::msg::Emergency</code> The topic represents the state of external emergency <code>/vehicle/status/gear_status</code> <code>autoware_auto_vehicle_msgs::msg::GearReport</code> The topic represents the state of gear"},{"location":"common/tier4_state_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/api/operation_mode/change_to_autonomous</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to change operation mode to autonomous <code>/api/operation_mode/change_to_stop</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to change operation mode to stop <code>/api/operation_mode/change_to_local</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to change operation mode to local <code>/api/operation_mode/change_to_remote</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to change operation mode to remote <code>/api/operation_mode/enable_autoware_control</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to enable vehicle control by Autoware <code>/api/operation_mode/disable_autoware_control</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to disable vehicle control by Autoware <code>/api/routing/clear_route</code> <code>autoware_adapi_v1_msgs::srv::ClearRoute</code> The service to clear route state <code>/api/motion/accept_start</code> <code>autoware_adapi_v1_msgs::srv::AcceptStart</code> The service to accept the vehicle to start <code>/api/autoware/set/emergency</code> <code>tier4_external_api_msgs::srv::SetEmergency</code> The service to set external emergency <code>/planning/scenario_planning/max_velocity_default</code> <code>tier4_planning_msgs::msg::VelocityLimit</code> The topic to set maximum speed of the vehicle"},{"location":"common/tier4_state_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li> <p>Start rviz and select panels/Add new panel.</p> <p></p> </li> <li> <p>Select tier4_state_rviz_plugin/AutowareStatePanel and press OK.</p> <p></p> </li> <li> <p>If the auto button is activated, can engage by clicking it.</p> <p></p> </li> </ol>"},{"location":"common/tier4_traffic_light_rviz_plugin/","title":"tier4_traffic_light_rviz_plugin","text":""},{"location":"common/tier4_traffic_light_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin panel publishes dummy traffic light signals.</p>"},{"location":"common/tier4_traffic_light_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_traffic_light_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/perception/traffic_light_recognition/traffic_signals</code> <code>autoware_auto_perception_msgs::msg::TrafficSignalArray</code> Publish traffic light signals"},{"location":"common/tier4_traffic_light_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li>Start rviz and select panels/Add new panel.</li> <li>Select TrafficLightPublishPanel and press OK.</li> <li>Set <code>Traffic Light ID</code> &amp; <code>Traffic Light Status</code> and press <code>SET</code> button.</li> <li>Traffic light signals are published, while <code>PUBLISH</code> button is pushed.</li> </ol>"},{"location":"common/tier4_vehicle_rviz_plugin/","title":"tier4_vehicle_rviz_plugin","text":"<p>This package is including jsk code. Note that jsk_overlay_utils.cpp and jsk_overlay_utils.hpp are BSD license.</p>"},{"location":"common/tier4_vehicle_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin provides a visual and easy-to-understand display of vehicle speed, turn signal and steering status.</p>"},{"location":"common/tier4_vehicle_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_vehicle_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/vehicle/status/velocity_status</code> <code>autoware_auto_vehicle_msgs::msg::VelocityReport</code> The topic is vehicle twist <code>/control/turn_signal_cmd</code> <code>autoware_auto_vehicle_msgs::msg::TurnIndicatorsReport</code> The topic is status of turn signal <code>/vehicle/status/steering_status</code> <code>autoware_auto_vehicle_msgs::msg::SteeringReport</code> The topic is status of steering"},{"location":"common/tier4_vehicle_rviz_plugin/#parameter","title":"Parameter","text":""},{"location":"common/tier4_vehicle_rviz_plugin/#core-parameters","title":"Core Parameters","text":""},{"location":"common/tier4_vehicle_rviz_plugin/#consolemeter","title":"ConsoleMeter","text":"Name Type Default Value Description <code>property_text_color_</code> QColor QColor(25, 255, 240) Text color <code>property_left_</code> int 128 Left of the plotter window [px] <code>property_top_</code> int 128 Top of the plotter window [px] <code>property_length_</code> int 256 Height of the plotter window [px] <code>property_value_height_offset_</code> int 0 Height offset of the plotter window [px] <code>property_value_scale_</code> float 1.0 / 6.667 Value scale"},{"location":"common/tier4_vehicle_rviz_plugin/#steeringangle","title":"SteeringAngle","text":"Name Type Default Value Description <code>property_text_color_</code> QColor QColor(25, 255, 240) Text color <code>property_left_</code> int 128 Left of the plotter window [px] <code>property_top_</code> int 128 Top of the plotter window [px] <code>property_length_</code> int 256 Height of the plotter window [px] <code>property_value_height_offset_</code> int 0 Height offset of the plotter window [px] <code>property_value_scale_</code> float 1.0 / 6.667 Value scale <code>property_handle_angle_scale_</code> float 3.0 Scale is steering angle to handle angle"},{"location":"common/tier4_vehicle_rviz_plugin/#turnsignal","title":"TurnSignal","text":"Name Type Default Value Description <code>property_left_</code> int 128 Left of the plotter window [px] <code>property_top_</code> int 128 Top of the plotter window [px] <code>property_width_</code> int 256 Left of the plotter window [px] <code>property_height_</code> int 256 Width of the plotter window [px]"},{"location":"common/tier4_vehicle_rviz_plugin/#velocityhistory","title":"VelocityHistory","text":"Name Type Default Value Description <code>property_velocity_timeout_</code> float 10.0 Timeout of velocity [s] <code>property_velocity_alpha_</code> float 1.0 Alpha of velocity <code>property_velocity_scale_</code> float 0.3 Scale of velocity <code>property_velocity_color_view_</code> bool false Use Constant Color or not <code>property_velocity_color_</code> QColor Qt::black Color of velocity history <code>property_vel_max_</code> float 3.0 Color Border Vel Max [m/s]"},{"location":"common/tier4_vehicle_rviz_plugin/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"common/tier4_vehicle_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select Add under the Displays panel.    </li> <li>Select any one of the tier4_vehicle_rviz_plugin and press OK.    </li> <li>Enter the name of the topic where you want to view the status.    </li> </ol>"},{"location":"common/tvm_utility/artifacts/","title":"Macro Syntax Error","text":"<p>Line 1 in Markdown file: Missing end of comment tag <pre><code># TVM Utility Artifacts {#tvm-utility-artifacts-readme}\n</code></pre></p>"},{"location":"common/tvm_utility/design/tvm-utility-design/","title":"Macro Syntax Error","text":"<p>Line 1 in Markdown file: Missing end of comment tag <pre><code># TVM Utility {#tvm-utility-design}\n</code></pre></p>"},{"location":"common/tvm_utility/design/tvm-utility-yolo-v2-tiny-tests/","title":"Macro Syntax Error","text":"<p>Line 1 in Markdown file: Missing end of comment tag <pre><code># YOLOv2 Tiny Example Pipeline {#tvm-utility-yolo-v2-tiny-tests}\n</code></pre></p>"},{"location":"control/control_performance_analysis/","title":"control_performance_analysis","text":""},{"location":"control/control_performance_analysis/#purpose","title":"Purpose","text":"<p><code>control_performance_analysis</code> is the package to analyze the tracking performance of a control module and monitor the driving status of the vehicle.</p> <p>This package is used as a tool to quantify the results of the control module. That's why it doesn't interfere with the core logic of autonomous driving.</p> <p>Based on the various input from planning, control, and vehicle, it publishes the result of analysis as <code>control_performance_analysis::msg::ErrorStamped</code> defined in this package.</p> <p>All results in <code>ErrorStamped</code> message are calculated in Frenet Frame of curve. Errors and velocity errors are calculated by using paper below.</p> <p><code>Werling, Moritz &amp; Groell, Lutz &amp; Bretthauer, Georg. (2010). Invariant Trajectory Tracking With a Full-Size Autonomous Road Vehicle. Robotics, IEEE Transactions on. 26. 758 - 765. 10.1109/TRO.2010.2052325.</code></p> <p>If you are interested in calculations, you can see the error and error velocity calculations in section <code>C. Asymptotical Trajectory Tracking With Orientation Control</code>.</p> <p>Error acceleration calculations are made based on the velocity calculations above. You can see below the calculation of error acceleration.</p> <p></p>"},{"location":"control/control_performance_analysis/#input-output","title":"Input / Output","text":""},{"location":"control/control_performance_analysis/#input-topics","title":"Input topics","text":"Name Type Description <code>/planning/scenario_planning/trajectory</code> autoware_auto_planning_msgs::msg::Trajectory Output trajectory from planning module. <code>/control/command/control_cmd</code> autoware_auto_control_msgs::msg::AckermannControlCommand Output control command from control module. <code>/vehicle/status/steering_status</code> autoware_auto_vehicle_msgs::msg::SteeringReport Steering information from vehicle. <code>/localization/kinematic_state</code> nav_msgs::msg::Odometry Use twist from odometry. <code>/tf</code> tf2_msgs::msg::TFMessage Extract ego pose from tf."},{"location":"control/control_performance_analysis/#output-topics","title":"Output topics","text":"Name Type Description <code>/control_performance/performance_vars</code> control_performance_analysis::msg::ErrorStamped The result of the performance analysis. <code>/control_performance/driving_status</code> control_performance_analysis::msg::DrivingMonitorStamped Driving status (acceleration, jerk etc.) monitoring"},{"location":"control/control_performance_analysis/#outputs","title":"Outputs","text":""},{"location":"control/control_performance_analysis/#control_performance_analysismsgdrivingmonitorstamped","title":"control_performance_analysis::msg::DrivingMonitorStamped","text":"Name Type Description <code>longitudinal_acceleration</code> float [m / s^2] <code>longitudinal_jerk</code> float [m / s^3] <code>lateral_acceleration</code> float [m / s^2] <code>lateral_jerk</code> float [m / s^3] <code>desired_steering_angle</code> float [rad] <code>controller_processing_time</code> float Timestamp between last two control command messages [ms]"},{"location":"control/control_performance_analysis/#control_performance_analysismsgerrorstamped","title":"control_performance_analysis::msg::ErrorStamped","text":"Name Type Description <code>lateral_error</code> float [m] <code>lateral_error_velocity</code> float [m / s] <code>lateral_error_acceleration</code> float [m / s^2] <code>longitudinal_error</code> float [m] <code>longitudinal_error_velocity</code> float [m / s] <code>longitudinal_error_acceleration</code> float [m / s^2] <code>heading_error</code> float [rad] <code>heading_error_velocity</code> float [rad / s] <code>control_effort_energy</code> float [u * R * u^T] <code>error_energy</code> float lateral_error^2 + heading_error^2 <code>value_approximation</code> float V = xPx' ; Value function from DARE Lyap matrix P <code>curvature_estimate</code> float [1 / m] <code>curvature_estimate_pp</code> float [1 / m] <code>vehicle_velocity_error</code> float [m / s] <code>tracking_curvature_discontinuity_ability</code> float Measures the ability to tracking the curvature changes [<code>abs(delta(curvature)) / (1 + abs(delta(lateral_error))</code>]"},{"location":"control/control_performance_analysis/#parameters","title":"Parameters","text":"Name Type Description <code>curvature_interval_length</code> double Used for estimating current curvature <code>prevent_zero_division_value</code> double Value to avoid zero division. Default is <code>0.001</code> <code>odom_interval</code> unsigned integer Interval between odom messages, increase it for smoother curve. <code>acceptable_max_distance_to_waypoint</code> double Maximum distance between trajectory point and vehicle [m] <code>acceptable_max_yaw_difference_rad</code> double Maximum yaw difference between trajectory point and vehicle [rad] <code>low_pass_filter_gain</code> double Low pass filter gain"},{"location":"control/control_performance_analysis/#usage","title":"Usage","text":"<ul> <li>After launched simulation and control module, launch the <code>control_performance_analysis.launch.xml</code>.</li> <li>You should be able to see the driving monitor and error variables in topics.</li> <li>If you want to visualize the results, you can use <code>Plotjuggler</code> and use <code>config/controller_monitor.xml</code> as layout.</li> <li>After import the layout, please specify the topics that are listed below.</li> </ul> <ul> <li>/localization/kinematic_state</li> <li>/vehicle/status/steering_status</li> <li>/control_performance/driving_status</li> <li>/control_performance/performance_vars</li> </ul> <ul> <li>In <code>Plotjuggler</code> you can export the statistic (max, min, average) values as csv file. Use that statistics to compare the control modules.</li> </ul>"},{"location":"control/control_performance_analysis/#future-improvements","title":"Future Improvements","text":"<ul> <li>Implement a LPF by cut-off frequency, differential equation and discrete state space update.</li> </ul>"},{"location":"control/external_cmd_selector/","title":"external_cmd_selector","text":""},{"location":"control/external_cmd_selector/#purpose","title":"Purpose","text":"<p><code>external_cmd_selector</code> is the package to publish <code>external_control_cmd</code>, <code>gear_cmd</code>, <code>hazard_lights_cmd</code>, <code>heartbeat</code> and <code>turn_indicators_cmd</code>, according to the current mode, which is <code>remote</code> or <code>local</code>.</p> <p>The current mode is set via service, <code>remote</code> is remotely operated, <code>local</code> is to use the values calculated by Autoware.</p>"},{"location":"control/external_cmd_selector/#input-output","title":"Input / Output","text":""},{"location":"control/external_cmd_selector/#input-topics","title":"Input topics","text":"Name Type Description <code>/api/external/set/command/local/control</code> TBD Local. Calculated control value. <code>/api/external/set/command/local/heartbeat</code> TBD Local. Heartbeat. <code>/api/external/set/command/local/shift</code> TBD Local. Gear shift like drive, rear and etc. <code>/api/external/set/command/local/turn_signal</code> TBD Local. Turn signal like left turn, right turn and etc. <code>/api/external/set/command/remote/control</code> TBD Remote. Calculated control value. <code>/api/external/set/command/remote/heartbeat</code> TBD Remote. Heartbeat. <code>/api/external/set/command/remote/shift</code> TBD Remote. Gear shift like drive, rear and etc. <code>/api/external/set/command/remote/turn_signal</code> TBD Remote. Turn signal like left turn, right turn and etc."},{"location":"control/external_cmd_selector/#output-topics","title":"Output topics","text":"Name Type Description <code>/control/external_cmd_selector/current_selector_mode</code> TBD Current selected mode, remote or local. <code>/diagnostics</code> diagnostic_msgs::msg::DiagnosticArray Check if node is active or not. <code>/external/selected/external_control_cmd</code> TBD Pass through control command with current mode. <code>/external/selected/gear_cmd</code> autoware_auto_vehicle_msgs::msg::GearCommand Pass through gear command with current mode. <code>/external/selected/hazard_lights_cmd</code> autoware_auto_vehicle_msgs::msg::HazardLightsCommand Pass through hazard light with current mode. <code>/external/selected/heartbeat</code> TBD Pass through heartbeat with current mode. <code>/external/selected/turn_indicators_cmd</code> autoware_auto_vehicle_msgs::msg::TurnIndicatorsCommand Pass through turn indicator with current mode."},{"location":"control/joy_controller/","title":"joy_controller","text":""},{"location":"control/joy_controller/#role","title":"Role","text":"<p><code>joy_controller</code> is the package to convert a joy msg to autoware commands (e.g. steering wheel, shift, turn signal, engage) for a vehicle.</p>"},{"location":"control/joy_controller/#input-output","title":"Input / Output","text":""},{"location":"control/joy_controller/#input-topics","title":"Input topics","text":"Name Type Description <code>~/input/joy</code> sensor_msgs::msg::Joy joy controller command <code>~/input/odometry</code> nav_msgs::msg::Odometry ego vehicle odometry to get twist"},{"location":"control/joy_controller/#output-topics","title":"Output topics","text":"Name Type Description <code>~/output/control_command</code> autoware_auto_control_msgs::msg::AckermannControlCommand lateral and longitudinal control command <code>~/output/external_control_command</code> tier4_external_api_msgs::msg::ControlCommandStamped lateral and longitudinal control command <code>~/output/shift</code> tier4_external_api_msgs::msg::GearShiftStamped gear command <code>~/output/turn_signal</code> tier4_external_api_msgs::msg::TurnSignalStamped turn signal command <code>~/output/gate_mode</code> tier4_control_msgs::msg::GateMode gate mode (Auto or External) <code>~/output/heartbeat</code> tier4_external_api_msgs::msg::Heartbeat heartbeat <code>~/output/vehicle_engage</code> autoware_auto_vehicle_msgs::msg::Engage vehicle engage"},{"location":"control/joy_controller/#parameters","title":"Parameters","text":"Parameter Type Description <code>joy_type</code> string joy controller type (default: DS4) <code>update_rate</code> double update rate to publish control commands <code>accel_ratio</code> double ratio to calculate acceleration (commanded acceleration is ratio * operation) <code>brake_ratio</code> double ratio to calculate deceleration (commanded acceleration is -ratio * operation) <code>steer_ratio</code> double ratio to calculate deceleration (commanded steer is ratio * operation) <code>steering_angle_velocity</code> double steering angle velocity for operation <code>accel_sensitivity</code> double sensitivity to calculate acceleration for external API (commanded acceleration is pow(operation, 1 / sensitivity)) <code>brake_sensitivity</code> double sensitivity to calculate deceleration for external API (commanded acceleration is pow(operation, 1 / sensitivity)) <code>velocity_gain</code> double ratio to calculate velocity by acceleration <code>max_forward_velocity</code> double absolute max velocity to go forward <code>max_backward_velocity</code> double absolute max velocity to go backward <code>backward_accel_ratio</code> double ratio to calculate deceleration (commanded acceleration is -ratio * operation)"},{"location":"control/joy_controller/#p65-joystick-key-map","title":"P65 Joystick Key Map","text":"Action Button Acceleration R2 Brake L2 Steering Left Stick Left Right Shift up Cursor Up Shift down Cursor Down Shift Drive Cursor Left Shift Reverse Cursor Right Turn Signal Left L1 Turn Signal Right R1 Clear Turn Signal A Gate Mode B Emergency Stop Select Clear Emergency Stop Start Autoware Engage X Autoware Disengage Y Vehicle Engage PS Vehicle Disengage Right Trigger"},{"location":"control/joy_controller/#ds4-joystick-key-map","title":"DS4 Joystick Key Map","text":"Action Button Acceleration R2, \u00d7, or Right Stick Up Brake L2, \u25a1, or Right Stick Down Steering Left Stick Left Right Shift up Cursor Up Shift down Cursor Down Shift Drive Cursor Left Shift Reverse Cursor Right Turn Signal Left L1 Turn Signal Right R1 Clear Turn Signal SHARE Gate Mode OPTIONS Emergency Stop PS Clear Emergency Stop PS Autoware Engage \u25cb Autoware Disengage \u25cb Vehicle Engage \u25b3 Vehicle Disengage \u25b3"},{"location":"control/lane_departure_checker/","title":"Lane Departure Checker","text":"<p>The Lane Departure Checker checks if vehicle follows a trajectory. If it does not follow the trajectory, it reports its status via <code>diagnostic_updater</code>.</p>"},{"location":"control/lane_departure_checker/#features","title":"Features","text":"<p>This package includes the following features:</p> <ul> <li>Lane Departure: Check if ego vehicle is going to be out of lane boundaries based on output from control module (predicted trajectory).</li> <li>Trajectory Deviation: Check if ego vehicle's pose does not deviate from the trajectory. Checking lateral, longitudinal and yaw deviation.</li> </ul>"},{"location":"control/lane_departure_checker/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"control/lane_departure_checker/#how-to-extend-footprint-by-covariance","title":"How to extend footprint by covariance","text":"<ol> <li> <p>Calculate the standard deviation of error ellipse(covariance) in vehicle coordinate.</p> <p>1.Transform covariance into vehicle coordinate.</p> <p> </p> <p>Calculate covariance in vehicle coordinate.</p> <p>   \\begin{align}  Cov_{vehicle} &amp;= E \\left[  \\left( \\begin{array}{cc} x_{vehicle}\\\\ y_{vehicle}\\\\ \\end{array} \\right) (x_{vehicle}, y_{vehicle}) \\right] \\\\  &amp;= E \\left[ R\\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right)  (x_{map}, y_{map})R^t  \\right] \\\\  &amp;= R E\\left[ \\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right)  (x_{map}, y_{map})  \\right] R^t \\\\  &amp;= R Cov_{map} R^t  \\end{align}   </p> <p>2.The longitudinal length we want to expand is correspond to marginal distribution of x_{vehicle}x_{vehicle}, which is represented in Cov_{vehicle}(0,0)Cov_{vehicle}(0,0). In the same way, the lateral length is represented in Cov_{vehicle}(1,1)Cov_{vehicle}(1,1). Wikipedia reference here.</p> </li> <li> <p>Expand footprint based on the standard deviation multiplied with <code>footprint_margin_scale</code>.</p> </li> </ol>"},{"location":"control/lane_departure_checker/#interface","title":"Interface","text":""},{"location":"control/lane_departure_checker/#input","title":"Input","text":"<ul> <li>/localization/kinematic_state [<code>nav_msgs::msg::Odometry</code>]</li> <li>/map/vector_map [<code>autoware_auto_mapping_msgs::msg::HADMapBin</code>]</li> <li>/planning/mission_planning/route [<code>autoware_planning_msgs::msg::LaneletRoute</code>]</li> <li>/planning/scenario_planning/trajectory [<code>autoware_auto_planning_msgs::msg::Trajectory</code>]</li> <li>/control/trajectory_follower/predicted_trajectory [<code>autoware_auto_planning_msgs::msg::Trajectory</code>]</li> </ul>"},{"location":"control/lane_departure_checker/#output","title":"Output","text":"<ul> <li>[<code>diagnostic_updater</code>] lane_departure : Update diagnostic level when ego vehicle is out of lane.</li> <li>[<code>diagnostic_updater</code>] trajectory_deviation : Update diagnostic level when ego vehicle deviates from trajectory.</li> </ul>"},{"location":"control/lane_departure_checker/#parameters","title":"Parameters","text":""},{"location":"control/lane_departure_checker/#node-parameters","title":"Node Parameters","text":"Name Type Description Default value update_rate double Frequency for publishing [Hz] 10.0 visualize_lanelet bool Flag for visualizing lanelet False"},{"location":"control/lane_departure_checker/#core-parameters","title":"Core Parameters","text":"Name Type Description Default value footprint_margin_scale double Coefficient for expanding footprint margin. Multiplied by 1 standard deviation. 1.0 resample_interval double Minimum Euclidean distance between points when resample trajectory.[m] 0.3 max_deceleration double Maximum deceleration when calculating braking distance. 2.8 delay_time double Delay time which took to actuate brake when calculating braking distance. [second] 1.3 max_lateral_deviation double Maximum lateral deviation in vehicle coordinate. [m] 2.0 max_longitudinal_deviation double Maximum longitudinal deviation in vehicle coordinate. [m] 2.0 max_yaw_deviation_deg double Maximum ego yaw deviation from trajectory. [deg] 60.0"},{"location":"control/mpc_lateral_controller/","title":"MPC Lateral Controller","text":"<p>This is the design document for the lateral controller node in the <code>trajectory_follower_node</code> package.</p>"},{"location":"control/mpc_lateral_controller/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>This node is used to general lateral control commands (steering angle and steering rate) when following a path.</p>"},{"location":"control/mpc_lateral_controller/#design","title":"Design","text":"<p>The node uses an implementation of linear model predictive control (MPC) for accurate path tracking. The MPC uses a model of the vehicle to simulate the trajectory resulting from the control command. The optimization of the control command is formulated as a Quadratic Program (QP).</p> <p>Different vehicle models are implemented:</p> <ul> <li>kinematics : bicycle kinematics model with steering 1st-order delay.</li> <li>kinematics_no_delay : bicycle kinematics model without steering delay.</li> <li>dynamics : bicycle dynamics model considering slip angle.   The kinematics model is being used by default. Please see the reference [1] for more details.</li> </ul> <p>For the optimization, a Quadratic Programming (QP) solver is used and two options are currently implemented:</p> <ul> <li>unconstraint_fast : use least square method to solve unconstraint QP with eigen.</li> <li>osqp: run the following ADMM algorithm (for more details see the related papers at the Citing OSQP section):</li> </ul>"},{"location":"control/mpc_lateral_controller/#filtering","title":"Filtering","text":"<p>Filtering is required for good noise reduction. A Butterworth filter is used for the yaw and lateral errors used as input of the MPC as well as for the output steering angle. Other filtering methods can be considered as long as the noise reduction performances are good enough. The moving average filter for example is not suited and can yield worse results than without any filtering.</p>"},{"location":"control/mpc_lateral_controller/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The tracking is not accurate if the first point of the reference trajectory is at or in front of the current ego pose.</p>"},{"location":"control/mpc_lateral_controller/#inputs-outputs-api","title":"Inputs / Outputs / API","text":""},{"location":"control/mpc_lateral_controller/#inputs","title":"Inputs","text":"<p>Set the following from the controller_node</p> <ul> <li><code>autoware_auto_planning_msgs/Trajectory</code> : reference trajectory to follow.</li> <li><code>nav_msgs/Odometry</code>: current odometry</li> <li><code>autoware_auto_vehicle_msgs/SteeringReport</code> current steering</li> </ul>"},{"location":"control/mpc_lateral_controller/#outputs","title":"Outputs","text":"<p>Return LateralOutput which contains the following to the controller node</p> <ul> <li><code>autoware_auto_control_msgs/AckermannLateralCommand</code></li> <li>LateralSyncData<ul> <li>steer angle convergence</li> </ul> </li> </ul>"},{"location":"control/mpc_lateral_controller/#mpc-class","title":"MPC class","text":"<p>The <code>MPC</code> class (defined in <code>mpc.hpp</code>) provides the interface with the MPC algorithm. Once a vehicle model, a QP solver, and the reference trajectory to follow have been set (using <code>setVehicleModel()</code>, <code>setQPSolver()</code>, <code>setReferenceTrajectory()</code>), a lateral control command can be calculated by providing the current steer, velocity, and pose to function <code>calculateMPC()</code>.</p>"},{"location":"control/mpc_lateral_controller/#parameter-description","title":"Parameter description","text":"<p>The default parameters defined in <code>param/lateral_controller_defaults.param.yaml</code> are adjusted to the AutonomouStuff Lexus RX 450h for under 40 km/h driving.</p> Name Type Description Default value show_debug_info bool display debug info false traj_resample_dist double distance of waypoints in resampling [m] 0.1 enable_path_smoothing bool path smoothing flag. This should be true when uses path resampling to reduce resampling noise. true path_filter_moving_ave_num int number of data points moving average filter for path smoothing 35 path_smoothing_times int number of times of applying path smoothing filter 1 curvature_smoothing_num_ref_steer double index distance of points used in curvature calculation for reference steer command: p(i-num), p(i), p(i+num). larger num makes less noisy values. 35 curvature_smoothing_num_traj double index distance of points used in curvature calculation for trajectory: p(i-num), p(i), p(i+num). larger num makes less noisy values. 1 extend_trajectory_for_end_yaw_control bool trajectory extending flag for end yaw control. true steering_lpf_cutoff_hz double cutoff frequency of lowpass filter for steering output command [hz] 3.0 admissible_position_error double stop vehicle when following position error is larger than this value [m]. 5.0 admissible_yaw_error_rad double stop vehicle when following yaw angle error is larger than this value [rad]. 1.57 stop_state_entry_ego_speed *1 double threshold value of the ego vehicle speed used to the stop state entry condition 0.0 stop_state_entry_target_speed *1 double threshold value of the target speed used to the stop state entry condition 0.0 converged_steer_rad double threshold value of the steer convergence 0.1 keep_steer_control_until_converged bool keep steer control until steer is converged true new_traj_duration_time double threshold value of the time to be considered as new trajectory 1.0 new_traj_end_dist double threshold value of the distance between trajectory ends to be considered as new trajectory 0.3 <p>(*1) To prevent unnecessary steering movement, the steering command is fixed to the previous value in the stop state.</p>"},{"location":"control/mpc_lateral_controller/#mpc-algorithm","title":"MPC algorithm","text":"Name Type Description Default value qp_solver_type string QP solver option. described below in detail. unconstraint_fast vehicle_model_type string vehicle model option. described below in detail. kinematics prediction_horizon int total prediction step for MPC 70 prediction_sampling_time double prediction period for one step [s] 0.1 weight_lat_error double weight for lateral error 0.1 weight_heading_error double weight for heading error 0.0 weight_heading_error_squared_vel_coeff double weight for heading error * velocity 5.0 weight_steering_input double weight for steering error (steer command - reference steer) 1.0 weight_steering_input_squared_vel_coeff double weight for steering error (steer command - reference steer) * velocity 0.25 weight_lat_jerk double weight for lateral jerk (steer(i) - steer(i-1)) * velocity 0.0 weight_terminal_lat_error double terminal cost weight for lateral error 1.0 weight_terminal_heading_error double terminal cost weight for heading error 0.1 zero_ff_steer_deg double threshold of feedforward angle [deg]. feedforward angle smaller than this value is set to zero. 2.0"},{"location":"control/mpc_lateral_controller/#vehicle","title":"Vehicle","text":"Name Type Description Default value cg_to_front_m double distance from baselink to the front axle[m] 1.228 cg_to_rear_m double distance from baselink to the rear axle [m] 1.5618 mass_fl double mass applied to front left tire [kg] 600 mass_fr double mass applied to front right tire [kg] 600 mass_rl double mass applied to rear left tire [kg] 600 mass_rr double mass applied to rear right tire [kg] 600 cf double front cornering power [N/rad] 155494.663 cr double rear cornering power [N/rad] 155494.663 steering_tau double steering dynamics time constant (1d approximation) for vehicle model [s] 0.3"},{"location":"control/mpc_lateral_controller/#how-to-tune-mpc-parameters","title":"How to tune MPC parameters","text":"<ol> <li> <p>Set appropriate vehicle kinematics parameters for distance to front and rear axle and max steer angle.    Also check that the input <code>VehicleKinematicState</code> has appropriate values (speed: vehicle rear-wheels-center velocity [km/h], angle: steering (tire) angle [rad]).    These values give a vehicle information to the controller for path following.    Errors in these values cause fundamental tracking error.</p> </li> <li> <p>Set appropriate vehicle dynamics parameters of <code>steering_tau</code>, which is the approximated delay from steering angle command to actual steering angle.</p> </li> <li> <p>Set <code>weight_steering_input</code> = 1.0, <code>weight_lat_error</code> = 0.1, and other weights to 0.    If the vehicle oscillates when driving with low speed, set <code>weight_lat_error</code> smaller.</p> </li> <li> <p>Adjust other weights.    One of the simple way for tuning is to increase <code>weight_lat_error</code> until oscillation occurs.    If the vehicle is unstable with very small <code>weight_lat_error</code>, increase terminal weight :    <code>weight_terminal_lat_error</code> and <code>weight_terminal_heading_error</code> to improve tracking stability.    Larger <code>prediction_horizon</code> and smaller <code>prediction_sampling_time</code> is effective for tracking performance, but it is a trade-off between computational costs.    Other parameters can be adjusted like below.</p> </li> </ol> <ul> <li><code>weight_lat_error</code>: Reduce lateral tracking error. This acts like P gain in PID.</li> <li><code>weight_heading_error</code>: Make a drive straight. This acts like D gain in PID.</li> <li><code>weight_heading_error_squared_vel_coeff</code> : Make a drive straight in high speed range.</li> <li><code>weight_steering_input</code>: Reduce oscillation of tracking.</li> <li><code>weight_steering_input_squared_vel_coeff</code>: Reduce oscillation of tracking in high speed range.</li> <li><code>weight_lat_jerk</code>: Reduce lateral jerk.</li> <li><code>weight_terminal_lat_error</code>: Preferable to set a higher value than normal lateral weight <code>weight_lat_error</code> for stability.</li> <li><code>weight_terminal_heading_error</code>: Preferable to set a higher value than normal heading weight <code>weight_heading_error</code> for stability.</li> </ul>"},{"location":"control/mpc_lateral_controller/#references-external-links","title":"References / External links","text":"<ul> <li>[1] Jarrod M. Snider, \"Automatic Steering Methods for Autonomous Automobile Path Tracking\",   Robotics Institute, Carnegie Mellon University, February 2009.</li> </ul>"},{"location":"control/mpc_lateral_controller/#related-issues","title":"Related issues","text":""},{"location":"control/obstacle_collision_checker/","title":"obstacle_collision_checker","text":""},{"location":"control/obstacle_collision_checker/#purpose","title":"Purpose","text":"<p><code>obstacle_collision_checker</code> is a module to check obstacle collision for predicted trajectory and publish diagnostic errors if collision is found.</p>"},{"location":"control/obstacle_collision_checker/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"control/obstacle_collision_checker/#flow-chart","title":"Flow chart","text":""},{"location":"control/obstacle_collision_checker/#algorithms","title":"Algorithms","text":""},{"location":"control/obstacle_collision_checker/#check-data","title":"Check data","text":"<p>Check that <code>obstacle_collision_checker</code> receives no ground pointcloud, predicted_trajectory, reference trajectory, and current velocity data.</p>"},{"location":"control/obstacle_collision_checker/#diagnostic-update","title":"Diagnostic update","text":"<p>If any collision is found on predicted path, this module sets <code>ERROR</code> level as diagnostic status else sets <code>OK</code>.</p>"},{"location":"control/obstacle_collision_checker/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"control/obstacle_collision_checker/#input","title":"Input","text":"Name Type Description <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs::msg::Trajectory</code> Reference trajectory <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs::msg::Trajectory</code> Predicted trajectory <code>/perception/obstacle_segmentation/pointcloud</code> <code>sensor_msgs::msg::PointCloud2</code> Pointcloud of obstacles which the ego-vehicle should stop or avoid <code>/tf</code> <code>tf2_msgs::msg::TFMessage</code> TF <code>/tf_static</code> <code>tf2_msgs::msg::TFMessage</code> TF static"},{"location":"control/obstacle_collision_checker/#output","title":"Output","text":"Name Type Description <code>~/debug/marker</code> <code>visualization_msgs::msg::MarkerArray</code> Marker for visualization"},{"location":"control/obstacle_collision_checker/#parameters","title":"Parameters","text":"Name Type Description Default value <code>delay_time</code> <code>double</code> Delay time of vehicle [s] 0.3 <code>footprint_margin</code> <code>double</code> Foot print margin [m] 0.0 <code>max_deceleration</code> <code>double</code> Max deceleration for ego vehicle to stop [m/s^2] 2.0 <code>resample_interval</code> <code>double</code> Interval for resampling trajectory [m] 0.3 <code>search_radius</code> <code>double</code> Search distance from trajectory to point cloud [m] 5.0"},{"location":"control/obstacle_collision_checker/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>To perform proper collision check, it is necessary to get probably predicted trajectory and obstacle pointclouds without noise.</p>"},{"location":"control/operation_mode_transition_manager/","title":"operation_mode_transition_manager","text":""},{"location":"control/operation_mode_transition_manager/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>This module is responsible for managing the different modes of operation for the Autoware system. The possible modes are:</p> <ul> <li><code>Autonomous</code>: the vehicle is fully controlled by the autonomous driving system</li> <li><code>Local</code>: the vehicle is controlled by a physically connected control system such as a joy stick</li> <li><code>Remote</code>: the vehicle is controlled by a remote controller</li> <li><code>Stop</code>: the vehicle is stopped and there is no active control system.</li> </ul> <p>There is also an <code>In Transition</code> state that occurs during each mode transitions. During this state, the transition to the new operator is not yet complete, and the previous operator is still responsible for controlling the system until the transition is complete. Some actions may be restricted during the <code>In Transition</code> state, such as sudden braking or steering. (This is restricted by the <code>vehicle_cmd_gate</code>).</p>"},{"location":"control/operation_mode_transition_manager/#features","title":"Features","text":"<ul> <li>Transit mode between <code>Autonomous</code>, <code>Local</code>, <code>Remote</code> and <code>Stop</code> based on the indication command.</li> <li>Check whether the each transition is available (safe or not).</li> <li>Limit some sudden motion control in <code>In Transition</code> mode (this is done with <code>vehicle_cmd_gate</code> feature).</li> <li>Check whether the transition is completed.</li> </ul> <ul> <li>Transition between the <code>Autonomous</code>, <code>Local</code>, <code>Remote</code>, and <code>Stop</code> modes based on the indicated command.</li> <li>Determine whether each transition is safe to execute.</li> <li>Restrict certain sudden motion controls during the <code>In Transition</code> mode (using the <code>vehicle_cmd_gate</code> feature).</li> <li>Verify that the transition is complete.</li> </ul>"},{"location":"control/operation_mode_transition_manager/#design","title":"Design","text":""},{"location":"control/operation_mode_transition_manager/#inputs-outputs-api","title":"Inputs / Outputs / API","text":""},{"location":"control/operation_mode_transition_manager/#inputs","title":"Inputs","text":"<p>For the mode transition:</p> <ul> <li>/system/operation_mode/change_autoware_control [<code>tier4_system_msgs/srv/ChangeAutowareControl</code>]: change operation mode to Autonomous</li> <li>/system/operation_mode/change_operation_mode [<code>tier4_system_msgs/srv/ChangeOperationMode</code>]: change operation mode</li> </ul> <p>For the transition availability/completion check:</p> <ul> <li>/control/command/control_cmd [<code>autoware_auto_control_msgs/msg/AckermannControlCommand</code>]: vehicle control signal</li> <li>/localization/kinematic_state [<code>nav_msgs/msg/Odometry</code>]: ego vehicle state</li> <li>/planning/scenario_planning/trajectory [<code>autoware_auto_planning_msgs/msg/Trajectory</code>]: planning trajectory</li> <li>/vehicle/status/control_mode [<code>autoware_auto_vehicle_msgs/msg/ControlModeReport</code>]: vehicle control mode (autonomous/manual)</li> <li>/control/vehicle_cmd_gate/operation_mode [<code>autoware_adapi_v1_msgs/msg/OperationModeState</code>]: the operation mode in the <code>vehicle_cmd_gate</code>. (To be removed)</li> </ul> <p>For the backward compatibility (to be removed):</p> <ul> <li>/api/autoware/get/engage [<code>autoware_auto_vehicle_msgs/msg/Engage</code>]</li> <li>/control/current_gate_mode [<code>tier4_control_msgs/msg/GateMode</code>]</li> <li>/control/external_cmd_selector/current_selector_mode [<code>tier4_control_msgs/msg/ExternalCommandSelectorMode</code>]</li> </ul>"},{"location":"control/operation_mode_transition_manager/#outputs","title":"Outputs","text":"<ul> <li>/system/operation_mode/state [<code>autoware_adapi_v1_msgs/msg/OperationModeState</code>]: to inform the current operation mode</li> <li>/control/operation_mode_transition_manager/debug_info [<code>operation_mode_transition_manager/msg/OperationModeTransitionManagerDebug</code>]: detailed information about the operation mode transition</li> </ul> <ul> <li>/control/gate_mode_cmd [<code>tier4_control_msgs/msg/GateMode</code>]: to change the <code>vehicle_cmd_gate</code> state to use its features (to be removed)</li> <li>/autoware/engage [<code>autoware_auto_vehicle_msgs/msg/Engage</code>]:</li> </ul> <ul> <li>/control/control_mode_request [<code>autoware_auto_vehicle_msgs/srv/ControlModeCommand</code>]: to change the vehicle control mode (autonomous/manual)</li> <li>/control/external_cmd_selector/select_external_command [<code>tier4_control_msgs/srv/ExternalCommandSelect</code>]:</li> </ul>"},{"location":"control/operation_mode_transition_manager/#parameters","title":"Parameters","text":"Name Type Description Default value <code>transition_timeout</code> <code>double</code> If the state transition is not completed within this time, it is considered a transition failure. 10.0 <code>frequency_hz</code> <code>double</code> running hz 10.0 <code>check_engage_condition</code> <code>double</code> If false, autonomous transition is always available 0.1 <code>nearest_dist_deviation_threshold</code> <code>double</code> distance threshold used to find nearest trajectory point 3.0 <code>nearest_yaw_deviation_threshold</code> <code>double</code> angle threshold used to find nearest trajectory point 1.57 <p>For <code>engage_acceptable_limits</code> related parameters:</p> Name Type Description Default value <code>allow_autonomous_in_stopped</code> <code>bool</code> If true, autonomous transition is available when the vehicle is stopped even if other checks fail. true <code>dist_threshold</code> <code>double</code> the distance between the trajectory and ego vehicle must be within this distance for <code>Autonomous</code> transition. 1.5 <code>yaw_threshold</code> <code>double</code> the yaw angle between trajectory and ego vehicle must be within this threshold for <code>Autonomous</code> transition. 0.524 <code>speed_upper_threshold</code> <code>double</code> the velocity deviation between control command and ego vehicle must be within this threshold for <code>Autonomous</code> transition. 10.0 <code>speed_lower_threshold</code> <code>double</code> the velocity deviation between the control command and ego vehicle must be within this threshold for <code>Autonomous</code> transition. -10.0 <code>acc_threshold</code> <code>double</code> the control command acceleration must be less than this threshold for <code>Autonomous</code> transition. 1.5 <code>lateral_acc_threshold</code> <code>double</code> the control command lateral acceleration must be less than this threshold for <code>Autonomous</code> transition. 1.0 <code>lateral_acc_diff_threshold</code> <code>double</code> the lateral acceleration deviation between the control command must be less than this threshold for <code>Autonomous</code> transition. 0.5 <p>For <code>stable_check</code> related parameters:</p> Name Type Description Default value <code>duration</code> <code>double</code> the stable condition must be satisfied for this duration to complete the transition. 0.1 <code>dist_threshold</code> <code>double</code> the distance between the trajectory and ego vehicle must be within this distance to complete <code>Autonomous</code> transition. 1.5 <code>yaw_threshold</code> <code>double</code> the yaw angle between trajectory and ego vehicle must be within this threshold to complete <code>Autonomous</code> transition. 0.262 <code>speed_upper_threshold</code> <code>double</code> the velocity deviation between control command and ego vehicle must be within this threshold to complete <code>Autonomous</code> transition. 2.0 <code>speed_lower_threshold</code> <code>double</code> the velocity deviation between control command and ego vehicle must be within this threshold to complete <code>Autonomous</code> transition. 2.0"},{"location":"control/operation_mode_transition_manager/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Need to remove backward compatibility interfaces.</li> <li>This node should be merged to the <code>vehicle_cmd_gate</code> due to its strong connection.</li> </ul>"},{"location":"control/pid_longitudinal_controller/","title":"PID Longitudinal Controller","text":""},{"location":"control/pid_longitudinal_controller/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>The longitudinal_controller computes the target acceleration to achieve the target velocity set at each point of the target trajectory using a feed-forward/back control.</p> <p>It also contains a slope force correction that takes into account road slope information, and a delay compensation function. It is assumed that the target acceleration calculated here will be properly realized by the vehicle interface.</p> <p>Note that the use of this module is not mandatory for Autoware if the vehicle supports the \"target speed\" interface.</p>"},{"location":"control/pid_longitudinal_controller/#design-inner-workings-algorithms","title":"Design / Inner-workings / Algorithms","text":""},{"location":"control/pid_longitudinal_controller/#states","title":"States","text":"<p>This module has four state transitions as shown below in order to handle special processing in a specific situation.</p> <ul> <li>DRIVE<ul> <li>Executes target velocity tracking by PID control.</li> <li>It also applies the delay compensation and slope compensation.</li> </ul> </li> <li>STOPPING<ul> <li>Controls the motion just before stopping.</li> <li>Special sequence is performed to achieve accurate and smooth stopping.</li> </ul> </li> <li>STOPPED<ul> <li>Performs operations in the stopped state (e.g. brake hold)</li> </ul> </li> <li>EMERGENCY.<ul> <li>Enters an emergency state when certain conditions are met (e.g., when the vehicle has crossed a certain distance of a stop line).</li> <li>The recovery condition (whether or not to keep emergency state until the vehicle completely stops) or the deceleration in the emergency state are defined by parameters.</li> </ul> </li> </ul> <p>The state transition diagram is shown below.</p> <p></p>"},{"location":"control/pid_longitudinal_controller/#logics","title":"Logics","text":""},{"location":"control/pid_longitudinal_controller/#control-block-diagram","title":"Control Block Diagram","text":""},{"location":"control/pid_longitudinal_controller/#feedforward-ff","title":"FeedForward (FF)","text":"<p>The reference acceleration set in the trajectory and slope compensation terms are output as a feedforward. Under ideal conditions with no modeling error, this FF term alone should be sufficient for velocity tracking.</p> <p>Tracking errors causing modeling or discretization errors are removed by the feedback control (now using PID).</p>"},{"location":"control/pid_longitudinal_controller/#brake-keeping","title":"Brake keeping","text":"<p>From the viewpoint of ride comfort, stopping with 0 acceleration is important because it reduces the impact of braking. However, if the target acceleration when stopping is 0, the vehicle may cross over the stop line or accelerate a little in front of the stop line due to vehicle model error or gradient estimation error.</p> <p>For reliable stopping, the target acceleration calculated by the FeedForward system is limited to a negative acceleration when stopping.</p> <p></p>"},{"location":"control/pid_longitudinal_controller/#slope-compensation","title":"Slope compensation","text":"<p>Based on the slope information, a compensation term is added to the target acceleration.</p> <p>There are two sources of the slope information, which can be switched by a parameter.</p> <ul> <li>Pitch of the estimated ego-pose (default)<ul> <li>Calculates the current slope from the pitch angle of the estimated ego-pose</li> <li>Pros: Easily available</li> <li>Cons: Cannot extract accurate slope information due to the influence of vehicle vibration.</li> </ul> </li> <li>Z coordinate on the trajectory<ul> <li>Calculates the road slope from the difference of z-coordinates between the front and rear wheel positions in the target trajectory</li> <li>Pros: More accurate than pitch information, if the z-coordinates of the route are properly maintained</li> <li>Pros: Can be used in combination with delay compensation (not yet implemented)</li> <li>Cons: z-coordinates of high-precision map is needed.</li> <li>Cons: Does not support free space planning (for now)</li> </ul> </li> </ul>"},{"location":"control/pid_longitudinal_controller/#pid-control","title":"PID control","text":"<p>For deviations that cannot be handled by FeedForward control, such as model errors, PID control is used to construct a feedback system.</p> <p>This PID control calculates the target acceleration from the deviation between the current ego-velocity and the target velocity.</p> <p>This PID logic has a maximum value for the output of each term. This is to prevent the following:</p> <ul> <li>Large integral terms may cause unintended behavior by users.</li> <li>Unintended noise may cause the output of the derivative term to be very large.</li> </ul> <p>Also, the integral term is not accumulated when the vehicle is stopped. This is to prevent unintended accumulation of the integral term in cases such as Autoware assumes that the vehicle is engaged, but an external system has locked the vehicle to start. On the other hand, if the vehicle gets stuck in a depression in the road surface when starting, the vehicle will not start forever, which is currently being addressed by developers.</p> <p>At present, PID control is implemented from the viewpoint of trade-off between development/maintenance cost and performance. This may be replaced by a higher performance controller (adaptive control or robust control) in future development.</p>"},{"location":"control/pid_longitudinal_controller/#time-delay-compensation","title":"Time delay compensation","text":"<p>At high speeds, the delay of actuator systems such as gas pedals and brakes has a significant impact on driving accuracy. Depending on the actuating principle of the vehicle, the mechanism that physically controls the gas pedal and brake typically has a delay of about a hundred millisecond.</p> <p>In this controller, the predicted ego-velocity and the target velocity after the delay time are calculated and used for the feedback to address the time delay problem.</p>"},{"location":"control/pid_longitudinal_controller/#slope-compensation_1","title":"Slope compensation","text":"<p>Based on the slope information, a compensation term is added to the target acceleration.</p> <p>There are two sources of the slope information, which can be switched by a parameter.</p> <ul> <li>Pitch of the estimated ego-pose (default)<ul> <li>Calculates the current slope from the pitch angle of the estimated ego-pose</li> <li>Pros: Easily available</li> <li>Cons: Cannot extract accurate slope information due to the influence of vehicle vibration.</li> </ul> </li> <li>Z coordinate on the trajectory<ul> <li>Calculates the road slope from the difference of z-coordinates between the front and rear wheel positions in the target trajectory</li> <li>Pros: More accurate than pitch information, if the z-coordinates of the route are properly maintained</li> <li>Pros: Can be used in combination with delay compensation (not yet implemented)</li> <li>Cons: z-coordinates of high-precision map is needed.</li> <li>Cons: Does not support free space planning (for now)</li> </ul> </li> </ul>"},{"location":"control/pid_longitudinal_controller/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ol> <li>Smoothed target velocity and its acceleration shall be set in the trajectory<ol> <li>The velocity command is not smoothed inside the controller (only noise may be removed).</li> <li>For step-like target signal, tracking is performed as fast as possible.</li> </ol> </li> <li>The vehicle velocity must be an appropriate value<ol> <li>The ego-velocity must be a signed-value corresponding to the forward/backward direction</li> <li>The ego-velocity should be given with appropriate noise processing.</li> <li>If there is a large amount of noise in the ego-velocity, the tracking performance will be significantly reduced.</li> </ol> </li> <li>The output of this controller must be achieved by later modules (e.g. vehicle interface).<ol> <li>If the vehicle interface does not have the target velocity or acceleration interface (e.g., the vehicle only has a gas pedal and brake interface), an appropriate conversion must be done after this controller.</li> </ol> </li> </ol>"},{"location":"control/pid_longitudinal_controller/#inputs-outputs-api","title":"Inputs / Outputs / API","text":""},{"location":"control/pid_longitudinal_controller/#input","title":"Input","text":"<p>Set the following from the controller_node</p> <ul> <li><code>autoware_auto_planning_msgs/Trajectory</code> : reference trajectory to follow.</li> <li><code>nav_msgs/Odometry</code>: current odometry</li> </ul>"},{"location":"control/pid_longitudinal_controller/#output","title":"Output","text":"<p>Return LongitudinalOutput which contains the following to the controller node</p> <ul> <li><code>autoware_auto_control_msgs/LongitudinalCommand</code>: command to control the longitudinal motion of the vehicle. It contains the target velocity and target acceleration.</li> <li>LongitudinalSyncData<ul> <li>velocity convergence(currently not used)</li> </ul> </li> </ul>"},{"location":"control/pid_longitudinal_controller/#pidcontroller-class","title":"PIDController class","text":"<p>The <code>PIDController</code> class is straightforward to use. First, gains and limits must be set (using <code>setGains()</code> and <code>setLimits()</code>) for the proportional (P), integral (I), and derivative (D) components. Then, the velocity can be calculated by providing the current error and time step duration to the <code>calculate()</code> function.</p>"},{"location":"control/pid_longitudinal_controller/#parameter-description","title":"Parameter description","text":"<p>The default parameters defined in <code>param/lateral_controller_defaults.param.yaml</code> are adjusted to the AutonomouStuff Lexus RX 450h for under 40 km/h driving.</p> Name Type Description Default value delay_compensation_time double delay for longitudinal control [s] 0.17 enable_smooth_stop bool flag to enable transition to STOPPING true enable_overshoot_emergency bool flag to enable transition to EMERGENCY when the ego is over the stop line with a certain distance. See <code>emergency_state_overshoot_stop_dist</code>. true enable_large_tracking_error_emergency bool flag to enable transition to EMERGENCY when the closest trajectory point search is failed due to a large deviation between trajectory and ego pose. true enable_slope_compensation bool flag to modify output acceleration for slope compensation. The source of the slope angle can be selected from ego-pose or trajectory angle. See <code>use_trajectory_for_pitch_calculation</code>. true enable_brake_keeping_before_stop bool flag to keep a certain acceleration during DRIVE state before the ego stops. See Brake keeping. false enable_keep_stopped_until_steer_convergence bool flag to keep stopped condition until until the steer converges. true max_acc double max value of output acceleration [m/s^2] 3.0 min_acc double min value of output acceleration [m/s^2] -5.0 max_jerk double max value of jerk of output acceleration [m/s^3] 2.0 min_jerk double min value of jerk of output acceleration [m/s^3] -5.0 use_trajectory_for_pitch_calculation bool If true, the slope is estimated from trajectory z-level. Otherwise the pitch angle of the ego pose is used. false lpf_pitch_gain double gain of low-pass filter for pitch estimation 0.95 max_pitch_rad double max value of estimated pitch [rad] 0.1 min_pitch_rad double min value of estimated pitch [rad] -0.1"},{"location":"control/pid_longitudinal_controller/#state-transition","title":"State transition","text":"Name Type Description Default value drive_state_stop_dist double The state will transit to DRIVE when the distance to the stop point is longer than <code>drive_state_stop_dist</code> + <code>drive_state_offset_stop_dist</code> [m] 0.5 drive_state_offset_stop_dist double The state will transit to DRIVE when the distance to the stop point is longer than <code>drive_state_stop_dist</code> + <code>drive_state_offset_stop_dist</code> [m] 1.0 stopping_state_stop_dist double The state will transit to STOPPING when the distance to the stop point is shorter than <code>stopping_state_stop_dist</code> [m] 0.5 stopped_state_entry_vel double threshold of the ego velocity in transition to the STOPPED state [m/s] 0.01 stopped_state_entry_acc double threshold of the ego acceleration in transition to the STOPPED state [m/s^2] 0.1 emergency_state_overshoot_stop_dist double If <code>enable_overshoot_emergency</code> is true and the ego is <code>emergency_state_overshoot_stop_dist</code>-meter ahead of the stop point, the state will transit to EMERGENCY. [m] 1.5 emergency_state_traj_trans_dev double If the ego's position is <code>emergency_state_traj_tran_dev</code> meter away from the nearest trajectory point, the state will transit to EMERGENCY. [m] 3.0 emergency_state_traj_rot_dev double If the ego's orientation is <code>emergency_state_traj_rot_dev</code> rad away from the nearest trajectory point orientation, the state will transit to EMERGENCY. [rad] 0.784"},{"location":"control/pid_longitudinal_controller/#drive-parameter","title":"DRIVE Parameter","text":"Name Type Description Default value kp double p gain for longitudinal control 1.0 ki double i gain for longitudinal control 0.1 kd double d gain for longitudinal control 0.0 max_out double max value of PID's output acceleration during DRIVE state [m/s^2] 1.0 min_out double min value of PID's output acceleration during DRIVE state [m/s^2] -1.0 max_p_effort double max value of acceleration with p gain 1.0 min_p_effort double min value of acceleration with p gain -1.0 max_i_effort double max value of acceleration with i gain 0.3 min_i_effort double min value of acceleration with i gain -0.3 max_d_effort double max value of acceleration with d gain 0.0 min_d_effort double min value of acceleration with d gain 0.0 lpf_vel_error_gain double gain of low-pass filter for velocity error 0.9 current_vel_threshold_pid_integration double Velocity error is integrated for I-term only when the absolute value of current velocity is larger than this parameter. [m/s] 0.5 brake_keeping_acc double If <code>enable_brake_keeping_before_stop</code> is true, a certain acceleration is kept during DRIVE state before the ego stops [m/s^2] See Brake keeping. 0.2"},{"location":"control/pid_longitudinal_controller/#stopping-parameter-smooth-stop","title":"STOPPING Parameter (smooth stop)","text":"<p>Smooth stop is enabled if <code>enable_smooth_stop</code> is true. In smooth stop, strong acceleration (<code>strong_acc</code>) will be output first to decrease the ego velocity. Then weak acceleration (<code>weak_acc</code>) will be output to stop smoothly by decreasing the ego jerk. If the ego does not stop in a certain time or some-meter over the stop point, weak acceleration to stop right (<code>weak_stop_acc</code>) now will be output. If the ego is still running, strong acceleration (<code>strong_stop_acc</code>) to stop right now will be output.</p> Name Type Description Default value smooth_stop_max_strong_acc double max strong acceleration [m/s^2] -0.5 smooth_stop_min_strong_acc double min strong acceleration [m/s^2] -0.8 smooth_stop_weak_acc double weak acceleration [m/s^2] -0.3 smooth_stop_weak_stop_acc double weak acceleration to stop right now [m/s^2] -0.8 smooth_stop_strong_stop_acc double strong acceleration to be output when the ego is <code>smooth_stop_strong_stop_dist</code>-meter over the stop point. [m/s^2] -3.4 smooth_stop_max_fast_vel double max fast vel to judge the ego is running fast [m/s]. If the ego is running fast, strong acceleration will be output. 0.5 smooth_stop_min_running_vel double min ego velocity to judge if the ego is running or not [m/s] 0.01 smooth_stop_min_running_acc double min ego acceleration to judge if the ego is running or not [m/s^2] 0.01 smooth_stop_weak_stop_time double max time to output weak acceleration [s]. After this, strong acceleration will be output. 0.8 smooth_stop_weak_stop_dist double Weak acceleration will be output when the ego is <code>smooth_stop_weak_stop_dist</code>-meter before the stop point. [m] -0.3 smooth_stop_strong_stop_dist double Strong acceleration will be output when the ego is <code>smooth_stop_strong_stop_dist</code>-meter over the stop point. [m] -0.5"},{"location":"control/pid_longitudinal_controller/#stopped-parameter","title":"STOPPED Parameter","text":"Name Type Description Default value stopped_vel double target velocity in STOPPED state [m/s] 0.0 stopped_acc double target acceleration in STOPPED state [m/s^2] -3.4 stopped_jerk double target jerk in STOPPED state [m/s^3] -5.0"},{"location":"control/pid_longitudinal_controller/#emergency-parameter","title":"EMERGENCY Parameter","text":"Name Type Description Default value emergency_vel double target velocity in EMERGENCY state [m/s] 0.0 emergency_acc double target acceleration in an EMERGENCY state [m/s^2] -5.0 emergency_jerk double target jerk in an EMERGENCY state [m/s^3] -3.0"},{"location":"control/pid_longitudinal_controller/#references-external-links","title":"References / External links","text":""},{"location":"control/pid_longitudinal_controller/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":""},{"location":"control/pid_longitudinal_controller/#related-issues","title":"Related issues","text":""},{"location":"control/shift_decider/","title":"Shift Decider","text":""},{"location":"control/shift_decider/#purpose","title":"Purpose","text":"<p><code>shift_decider</code> is a module to decide shift from ackermann control command.</p>"},{"location":"control/shift_decider/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"control/shift_decider/#flow-chart","title":"Flow chart","text":""},{"location":"control/shift_decider/#algorithms","title":"Algorithms","text":""},{"location":"control/shift_decider/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"control/shift_decider/#input","title":"Input","text":"Name Type Description <code>~/input/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> Control command for vehicle."},{"location":"control/shift_decider/#output","title":"Output","text":"Name Type Description <code>~output/gear_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> Gear for drive forward / backward."},{"location":"control/shift_decider/#parameters","title":"Parameters","text":"<p>none.</p>"},{"location":"control/shift_decider/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"control/trajectory_follower_base/","title":"Trajectory Follower","text":"<p>This is the design document for the <code>trajectory_follower</code> package.</p>"},{"location":"control/trajectory_follower_base/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>This package provides the interface of longitudinal and lateral controllers used by the node of the <code>trajectory_follower_node</code> package. We can implement a detailed controller by deriving the longitudinal and lateral base interfaces.</p>"},{"location":"control/trajectory_follower_base/#design","title":"Design","text":"<p>There are lateral and longitudinal base interface classes and each algorithm inherits from this class to implement. The interface class has the following base functions.</p> <ul> <li><code>isReady()</code>: Check if the control is ready to compute.</li> <li><code>run()</code>: Compute control commands and return to Trajectory Follower Nodes. This must be implemented by inherited algorithms.</li> <li><code>sync()</code>: Input the result of running the other controller.<ul> <li>steer angle convergence<ul> <li>allow keeping stopped until steer is converged.</li> </ul> </li> <li>velocity convergence(currently not used)</li> </ul> </li> </ul> <p>See the Design of Trajectory Follower Nodes for how these functions work in the node.</p>"},{"location":"control/trajectory_follower_base/#separated-lateral-steering-and-longitudinal-velocity-controls","title":"Separated lateral (steering) and longitudinal (velocity) controls","text":"<p>This longitudinal controller assumes that the roles of lateral and longitudinal control are separated as follows.</p> <ul> <li>Lateral control computes a target steering to keep the vehicle on the trajectory, assuming perfect velocity tracking.</li> <li>Longitudinal control computes a target velocity/acceleration to keep the vehicle velocity on the trajectory speed, assuming perfect trajectory tracking.</li> </ul> <p>Ideally, dealing with the lateral and longitudinal control as a single mixed problem can achieve high performance. In contrast, there are two reasons to provide velocity controller as a stand-alone function, described below.</p>"},{"location":"control/trajectory_follower_base/#complex-requirements-for-longitudinal-motion","title":"Complex requirements for longitudinal motion","text":"<p>The longitudinal vehicle behavior that humans expect is difficult to express in a single logic. For example, the expected behavior just before stopping differs depending on whether the ego-position is ahead/behind of the stop line, or whether the current speed is higher/lower than the target speed to achieve a human-like movement.</p> <p>In addition, some vehicles have difficulty measuring the ego-speed at extremely low speeds. In such cases, a configuration that can improve the functionality of the longitudinal control without affecting the lateral control is important.</p> <p>There are many characteristics and needs that are unique to longitudinal control. Designing them separately from the lateral control keeps the modules less coupled and improves maintainability.</p>"},{"location":"control/trajectory_follower_base/#nonlinear-coupling-of-lateral-and-longitudinal-motion","title":"Nonlinear coupling of lateral and longitudinal motion","text":"<p>The lat-lon mixed control problem is very complex and uses nonlinear optimization to achieve high performance. Since it is difficult to guarantee the convergence of the nonlinear optimization, a simple control logic is also necessary for development.</p> <p>Also, the benefits of simultaneous longitudinal and lateral control are small if the vehicle doesn't move at high speed.</p>"},{"location":"control/trajectory_follower_base/#related-issues","title":"Related issues","text":""},{"location":"control/trajectory_follower_node/","title":"Trajectory Follower Nodes","text":""},{"location":"control/trajectory_follower_node/#purpose","title":"Purpose","text":"<p>Generate control commands to follow a given Trajectory.</p>"},{"location":"control/trajectory_follower_node/#design","title":"Design","text":"<p>This is a node of the functionalities implemented in the controller class derived from trajectory_follower_base package. It has instances of those functionalities, gives them input data to perform calculations, and publishes control commands.</p> <p>By default, the controller instance with the <code>Controller</code> class as follows is used.</p> <p></p> <p>The process flow of <code>Controller</code> class is as follows.</p> <pre><code>// 1. create input data\nconst auto input_data = createInputData(*get_clock());\nif (!input_data) {\nreturn;\n}\n\n// 2. check if controllers are ready\nconst bool is_lat_ready = lateral_controller_-&gt;isReady(*input_data);\nconst bool is_lon_ready = longitudinal_controller_-&gt;isReady(*input_data);\nif (!is_lat_ready || !is_lon_ready) {\nreturn;\n}\n\n// 3. run controllers\nconst auto lat_out = lateral_controller_-&gt;run(*input_data);\nconst auto lon_out = longitudinal_controller_-&gt;run(*input_data);\n\n// 4. sync with each other controllers\nlongitudinal_controller_-&gt;sync(lat_out.sync_data);\nlateral_controller_-&gt;sync(lon_out.sync_data);\n\n// 5. publish control command\ncontrol_cmd_pub_-&gt;publish(out);\n</code></pre> <p>Giving the longitudinal controller information about steer convergence allows it to control steer when stopped if following parameters are <code>true</code></p> <ul> <li>lateral controller<ul> <li><code>keep_steer_control_until_converged</code></li> </ul> </li> <li>longitudinal controller<ul> <li><code>enable_keep_stopped_until_steer_convergence</code></li> </ul> </li> </ul>"},{"location":"control/trajectory_follower_node/#inputs-outputs-api","title":"Inputs / Outputs / API","text":""},{"location":"control/trajectory_follower_node/#inputs","title":"Inputs","text":"<ul> <li><code>autoware_auto_planning_msgs/Trajectory</code> : reference trajectory to follow.</li> <li><code>nav_msgs/Odometry</code>: current odometry</li> <li><code>autoware_auto_vehicle_msgs/SteeringReport</code> current steering</li> </ul>"},{"location":"control/trajectory_follower_node/#outputs","title":"Outputs","text":"<ul> <li><code>autoware_auto_control_msgs/AckermannControlCommand</code>: message containing both lateral and longitudinal commands.</li> </ul>"},{"location":"control/trajectory_follower_node/#parameter","title":"Parameter","text":"<ul> <li><code>ctrl_period</code>: control commands publishing period</li> <li><code>timeout_thr_sec</code>: duration in second after which input messages are discarded.<ul> <li>Each time the node receives lateral and longitudinal commands from each controller, it publishes an <code>AckermannControlCommand</code> if the following two conditions are met.<ol> <li>Both commands have been received.</li> <li>The last received commands are not older than defined by <code>timeout_thr_sec</code>.</li> </ol> </li> </ul> </li> <li><code>lateral_controller_mode</code>: <code>mpc_follower</code> or <code>pure_pursuit</code><ul> <li>(currently there is only <code>PID</code> for longitudinal controller)</li> </ul> </li> </ul>"},{"location":"control/trajectory_follower_node/#debugging","title":"Debugging","text":"<p>Debug information are published by the lateral and longitudinal controller using <code>tier4_debug_msgs/Float32MultiArrayStamped</code> messages.</p> <p>A configuration file for PlotJuggler is provided in the <code>config</code> folder which, when loaded, allow to automatically subscribe and visualize information useful for debugging.</p> <p>In addition, the predicted MPC trajectory is published on topic <code>output/lateral/predicted_trajectory</code> and can be visualized in Rviz.</p>"},{"location":"control/trajectory_follower_node/design/simple_trajectory_follower-design/","title":"Simple Trajectory Follower","text":""},{"location":"control/trajectory_follower_node/design/simple_trajectory_follower-design/#purpose","title":"Purpose","text":"<p>Provide a base trajectory follower code that is simple and flexible to use. This node calculates control command based on a reference trajectory and an ego vehicle kinematics.</p>"},{"location":"control/trajectory_follower_node/design/simple_trajectory_follower-design/#design","title":"Design","text":""},{"location":"control/trajectory_follower_node/design/simple_trajectory_follower-design/#inputs-outputs","title":"Inputs / Outputs","text":"<p>Inputs</p> <ul> <li><code>input/reference_trajectory</code> [autoware_auto_planning_msgs::msg::Trajectory] : reference trajectory to follow.</li> <li><code>input/current_kinematic_state</code> [nav_msgs::msg::Odometry] : current state of the vehicle (position, velocity, etc).</li> <li>Output</li> <li><code>output/control_cmd</code> [autoware_auto_control_msgs::msg::AckermannControlCommand] : generated control command.</li> </ul>"},{"location":"control/trajectory_follower_node/design/simple_trajectory_follower-design/#parameters","title":"Parameters","text":"Name Type Description Default value use_external_target_vel bool use external target velocity defined by parameter when true, else follow the velocity on target trajectory points. false external_target_vel float target velocity used when <code>use_external_target_vel</code> is true. 0.0 lateral_deviation float target lateral deviation when following. 0.0"},{"location":"control/vehicle_cmd_gate/","title":"vehicle_cmd_gate","text":""},{"location":"control/vehicle_cmd_gate/#purpose","title":"Purpose","text":"<p><code>vehicle_cmd_gate</code> is the package to get information from emergency handler, planning module, external controller, and send a msg to vehicle.</p>"},{"location":"control/vehicle_cmd_gate/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"control/vehicle_cmd_gate/#input","title":"Input","text":"Name Type Description <code>~/input/steering</code> <code>autoware_auto_vehicle_msgs::msg::SteeringReport</code> steering status <code>~/input/auto/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> command for lateral and longitudinal velocity from planning module <code>~/input/auto/turn_indicators_cmd</code> <code>autoware_auto_vehicle_msgs::msg::TurnIndicatorsCommand</code> turn indicators command from planning module <code>~/input/auto/hazard_lights_cmd</code> <code>autoware_auto_vehicle_msgs::msg::HazardLightsCommand</code> hazard lights command from planning module <code>~/input/auto/gear_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> gear command from planning module <code>~/input/external/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> command for lateral and longitudinal velocity from external <code>~/input/external/turn_indicators_cmd</code> <code>autoware_auto_vehicle_msgs::msg::TurnIndicatorsCommand</code> turn indicators command from external <code>~/input/external/hazard_lights_cmd</code> <code>autoware_auto_vehicle_msgs::msg::HazardLightsCommand</code> hazard lights command from external <code>~/input/external/gear_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> gear command from external <code>~/input/external_emergency_stop_heartbeat</code> <code>tier4_external_api_msgs::msg::Heartbeat</code> heartbeat <code>~/input/gate_mode</code> <code>tier4_control_msgs::msg::GateMode</code> gate mode (AUTO or EXTERNAL) <code>~/input/emergency/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> command for lateral and longitudinal velocity from emergency handler <code>~/input/emergency/hazard_lights_cmd</code> <code>autoware_auto_vehicle_msgs::msg::HazardLightsCommand</code> hazard lights command from emergency handler <code>~/input/emergency/gear_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> gear command from emergency handler <code>~/input/engage</code> <code>autoware_auto_vehicle_msgs::msg::Engage</code> engage signal <code>~/input/operation_mode</code> <code>autoware_adapi_v1_msgs::msg::OperationModeState</code> operation mode of Autoware"},{"location":"control/vehicle_cmd_gate/#output","title":"Output","text":"Name Type Description <code>~/output/vehicle_cmd_emergency</code> <code>autoware_auto_system_msgs::msg::EmergencyState</code> emergency state which was originally in vehicle command <code>~/output/command/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> command for lateral and longitudinal velocity to vehicle <code>~/output/command/turn_indicators_cmd</code> <code>autoware_auto_vehicle_msgs::msg::TurnIndicatorsCommand</code> turn indicators command to vehicle <code>~/output/command/hazard_lights_cmd</code> <code>autoware_auto_vehicle_msgs::msg::HazardLightsCommand</code> hazard lights command to vehicle <code>~/output/command/gear_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> gear command to vehicle <code>~/output/gate_mode</code> <code>tier4_control_msgs::msg::GateMode</code> gate mode (AUTO or EXTERNAL) <code>~/output/engage</code> <code>autoware_auto_vehicle_msgs::msg::Engage</code> engage signal <code>~/output/external_emergency</code> <code>tier4_external_api_msgs::msg::Emergency</code> external emergency signal <code>~/output/operation_mode</code> <code>tier4_system_msgs::msg::OperationMode</code> current operation mode of the vehicle_cmd_gate"},{"location":"control/vehicle_cmd_gate/#parameters","title":"Parameters","text":"Parameter Type Description <code>update_period</code> double update period <code>use_emergency_handling</code> bool true when emergency handler is used <code>check_external_emergency_heartbeat</code> bool true when checking heartbeat for emergency stop <code>system_emergency_heartbeat_timeout</code> double timeout for system emergency <code>external_emergency_stop_heartbeat_timeout</code> double timeout for external emergency <code>stop_hold_acceleration</code> double longitudinal acceleration cmd when vehicle should stop <code>emergency_acceleration</code> double longitudinal acceleration cmd when vehicle stop with emergency <code>nominal.vel_lim</code> double limit of longitudinal velocity (activated in AUTONOMOUS operation mode) <code>nominal.lon_acc_lim</code> double limit of longitudinal acceleration (activated in AUTONOMOUS operation mode) <code>nominal.lon_jerk_lim</code> double limit of longitudinal jerk (activated in AUTONOMOUS operation mode) <code>nominal.lat_acc_lim</code> double limit of lateral acceleration (activated in AUTONOMOUS operation mode) <code>nominal.lat_jerk_lim</code> double limit of lateral jerk (activated in AUTONOMOUS operation mode) <code>on_transition.vel_lim</code> double limit of longitudinal velocity (activated in TRANSITION operation mode) <code>on_transition.lon_acc_lim</code> double limit of longitudinal acceleration (activated in TRANSITION operation mode) <code>on_transition.lon_jerk_lim</code> double limit of longitudinal jerk (activated in TRANSITION operation mode) <code>on_transition.lat_acc_lim</code> double limit of lateral acceleration (activated in TRANSITION operation mode) <code>on_transition.lat_jerk_lim</code> double limit of lateral jerk (activated in TRANSITION operation mode)"},{"location":"control/vehicle_cmd_gate/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The parameter <code>check_external_emergency_heartbeat</code> (true by default) enables an emergency stop request from external modules. This feature requires a <code>~/input/external_emergency_stop_heartbeat</code> topic for health monitoring of the external module, and the vehicle_cmd_gate module will not start without the topic. The <code>check_external_emergency_heartbeat</code> parameter must be false when the \"external emergency stop\" function is not used.</p>"},{"location":"evaluator/kinematic_evaluator/","title":"Kinematic Evaluator","text":"<p>TBD</p>"},{"location":"evaluator/localization_evaluator/","title":"Localization Evaluator","text":"<p>TBD</p>"},{"location":"launch/tier4_autoware_api_launch/","title":"tier4_autoware_api_launch","text":""},{"location":"launch/tier4_autoware_api_launch/#description","title":"Description","text":"<p>This package contains launch files that run nodes to convert Autoware internal topics into consistent API used by external software (e.g., fleet management system, simulator).</p>"},{"location":"launch/tier4_autoware_api_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_autoware_api_launch/#usage","title":"Usage","text":"<p>You can include as follows in <code>*.launch.xml</code> to use <code>autoware_api.launch.xml</code>.</p> <pre><code>  &lt;include file=\"$(find-pkg-share tier4_autoware_api_launch)/launch/autoware_api.launch.xml\"/&gt;\n</code></pre>"},{"location":"launch/tier4_autoware_api_launch/#notes","title":"Notes","text":"<p>For reducing processing load, we use the Component feature in ROS2 (similar to Nodelet in ROS1 )</p>"},{"location":"launch/tier4_control_launch/","title":"tier4_control_launch","text":""},{"location":"launch/tier4_control_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_control_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_control_launch/#usage","title":"Usage","text":"<p>You can include as follows in <code>*.launch.xml</code> to use <code>control.launch.py</code>.</p> <p>Note that you should provide parameter paths as <code>PACKAGE_param_path</code>. The list of parameter paths you should provide is written at the top of <code>planning.launch.xml</code>.</p> <pre><code>&lt;include file=\"$(find-pkg-share tier4_control_launch)/launch/control.launch.py\"&gt;\n&lt;!-- options for lateral_controller_mode: mpc_follower, pure_pursuit --&gt;\n&lt;!-- Parameter files --&gt;\n&lt;arg name=\"FOO_NODE_param_path\" value=\"...\"/&gt;\n&lt;arg name=\"BAR_NODE_param_path\" value=\"...\"/&gt;\n...\n  &lt;arg name=\"lateral_controller_mode\" value=\"mpc_follower\" /&gt;\n&lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_control_launch/#notes","title":"Notes","text":"<p>For reducing processing load, we use the Component feature in ROS2 (similar to Nodelet in ROS1 )</p>"},{"location":"launch/tier4_localization_launch/","title":"tier4_localization_launch","text":""},{"location":"launch/tier4_localization_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_localization_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_localization_launch/#usage","title":"Usage","text":"<p>Include <code>localization.launch.xml</code> in other launch files as follows.</p> <p>Note that you should provide parameter paths as <code>PACKAGE_param_path</code>. The list of parameter paths you should provide is written at the top of <code>localization.launch.xml</code>.</p> <pre><code>  &lt;include file=\"$(find-pkg-share tier4_localization_launch)/launch/localization.launch.xml\"&gt;\n&lt;!-- Parameter files --&gt;\n&lt;arg name=\"FOO_param_path\" value=\"...\"/&gt;\n&lt;arg name=\"BAR_param_path\" value=\"...\"/&gt;\n...\n  &lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_map_launch/","title":"tier4_map_launch","text":""},{"location":"launch/tier4_map_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_map_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_map_launch/#usage","title":"Usage","text":"<p>You can include as follows in <code>*.launch.xml</code> to use <code>map.launch.py</code>.</p> <p>Note that you should provide parameter paths as <code>PACKAGE_param_path</code>. The list of parameter paths you should provide is written at the top of <code>map.launch.xml</code>.</p> <pre><code>&lt;arg name=\"map_path\" description=\"point cloud and lanelet2 map directory path\"/&gt;\n&lt;arg name=\"lanelet2_map_file\" default=\"lanelet2_map.osm\" description=\"lanelet2 map file name\"/&gt;\n&lt;arg name=\"pointcloud_map_file\" default=\"pointcloud_map.pcd\" description=\"pointcloud map file name\"/&gt;\n\n&lt;include file=\"$(find-pkg-share tier4_map_launch)/launch/map.launch.py\"&gt;\n&lt;arg name=\"lanelet2_map_path\" value=\"$(var map_path)/$(var lanelet2_map_file)\" /&gt;\n&lt;arg name=\"pointcloud_map_path\" value=\"$(var map_path)/$(var pointcloud_map_file)\"/&gt;\n\n&lt;!-- Parameter files --&gt;\n&lt;arg name=\"FOO_param_path\" value=\"...\"/&gt;\n&lt;arg name=\"BAR_param_path\" value=\"...\"/&gt;\n...\n&lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_map_launch/#notes","title":"Notes","text":"<p>For reducing processing load, we use the Component feature in ROS2 (similar to Nodelet in ROS1 )</p>"},{"location":"launch/tier4_perception_launch/","title":"tier4_perception_launch","text":""},{"location":"launch/tier4_perception_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_perception_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_perception_launch/#usage","title":"Usage","text":"<p>You can include as follows in <code>*.launch.xml</code> to use <code>perception.launch.xml</code>.</p> <p>Note that you should provide parameter paths as <code>PACKAGE_param_path</code>. The list of parameter paths you should provide is written at the top of <code>perception.launch.xml</code>.</p> <pre><code>  &lt;include file=\"$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml\"&gt;\n&lt;!-- options for mode: camera_lidar_fusion, lidar, camera --&gt;\n&lt;arg name=\"mode\" value=\"lidar\" /&gt;\n\n&lt;!-- Parameter files --&gt;\n&lt;arg name=\"FOO_param_path\" value=\"...\"/&gt;\n&lt;arg name=\"BAR_param_path\" value=\"...\"/&gt;\n...\n  &lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_planning_launch/","title":"tier4_planning_launch","text":""},{"location":"launch/tier4_planning_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_planning_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_planning_launch/#usage","title":"Usage","text":"<p>Note that you should provide parameter paths as <code>PACKAGE_param_path</code>. The list of parameter paths you should provide is written at the top of <code>planning.launch.xml</code>.</p> <pre><code>&lt;include file=\"$(find-pkg-share tier4_planning_launch)/launch/planning.launch.xml\"&gt;\n&lt;!-- Parameter files --&gt;\n&lt;arg name=\"FOO_NODE_param_path\" value=\"...\"/&gt;\n&lt;arg name=\"BAR_NODE_param_path\" value=\"...\"/&gt;\n...\n&lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_sensing_launch/","title":"tier4_sensing_launch","text":""},{"location":"launch/tier4_sensing_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_sensing_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_sensing_launch/#usage","title":"Usage","text":"<p>You can include as follows in <code>*.launch.xml</code> to use <code>sensing.launch.xml</code>.</p> <pre><code>  &lt;include file=\"$(find-pkg-share tier4_sensing_launch)/launch/sensing.launch.xml\"&gt;\n&lt;arg name=\"launch_driver\" value=\"true\"/&gt;\n&lt;arg name=\"sensor_model\" value=\"$(var sensor_model)\"/&gt;\n&lt;arg name=\"vehicle_param_file\" value=\"$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml\"/&gt;\n&lt;arg name=\"vehicle_mirror_param_file\" value=\"$(find-pkg-share $(var vehicle_model)_description)/config/mirror.param.yaml\"/&gt;\n&lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_sensing_launch/#launch-directory-structure","title":"Launch Directory Structure","text":"<p>This package finds sensor settings of specified sensor model in <code>launch</code>.</p> <pre><code>launch/\n\u251c\u2500\u2500 aip_x1 # Sensor model name\n\u2502   \u251c\u2500\u2500 camera.launch.xml # Camera\n\u2502   \u251c\u2500\u2500 gnss.launch.xml # GNSS\n\u2502   \u251c\u2500\u2500 imu.launch.xml # IMU\n\u2502   \u251c\u2500\u2500 lidar.launch.xml # LiDAR\n\u2502   \u2514\u2500\u2500 pointcloud_preprocessor.launch.py # for preprocessing pointcloud\n...\n</code></pre>"},{"location":"launch/tier4_sensing_launch/#notes","title":"Notes","text":"<p>This package finds settings with variables.</p> <p>ex.)</p> <pre><code>&lt;include file=\"$(find-pkg-share tier4_sensing_launch)/launch/$(var sensor_model)/lidar.launch.xml\"&gt;\n</code></pre>"},{"location":"launch/tier4_simulator_launch/","title":"tier4_simulator_launch","text":""},{"location":"launch/tier4_simulator_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_simulator_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_simulator_launch/#usage","title":"Usage","text":"<pre><code>  &lt;include file=\"$(find-pkg-share tier4_simulator_launch)/launch/simulator.launch.xml\"&gt;\n&lt;arg name=\"vehicle_info_param_file\" value=\"VEHICLE_INFO_PARAM_FILE\" /&gt;\n&lt;arg name=\"vehicle_model\" value=\"VEHICLE_MODEL\"/&gt;\n&lt;/include&gt;\n</code></pre> <p>The simulator model used in simple_planning_simulator is loaded from \"config/simulator_model.param.yaml\" in the \"<code>VEHICLE_MODEL</code>_description\" package.</p>"},{"location":"launch/tier4_system_launch/","title":"tier4_system_launch","text":""},{"location":"launch/tier4_system_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_system_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_system_launch/#usage","title":"Usage","text":"<p>Note that you should provide parameter paths as <code>PACKAGE_param_path</code>. The list of parameter paths you should provide is written at the top of <code>system.launch.xml</code>.</p> <pre><code>  &lt;include file=\"$(find-pkg-share tier4_system_launch)/launch/system.launch.xml\"&gt;\n&lt;arg name=\"run_mode\" value=\"online\"/&gt;\n&lt;arg name=\"sensor_model\" value=\"SENSOR_MODEL\"/&gt;\n\n&lt;!-- Parameter files --&gt;\n&lt;arg name=\"FOO_param_path\" value=\"...\"/&gt;\n&lt;arg name=\"BAR_param_path\" value=\"...\"/&gt;\n...\n  &lt;/include&gt;\n</code></pre> <p>The sensing configuration parameters used in system_error_monitor are loaded from \"config/diagnostic_aggregator/sensor_kit.param.yaml\" in the \"<code>SENSOR_MODEL</code>_description\" package.</p>"},{"location":"launch/tier4_vehicle_launch/","title":"tier4_vehicle_launch","text":""},{"location":"launch/tier4_vehicle_launch/#structure","title":"Structure","text":""},{"location":"launch/tier4_vehicle_launch/#package-dependencies","title":"Package Dependencies","text":"<p>Please see <code>&lt;exec_depend&gt;</code> in <code>package.xml</code>.</p>"},{"location":"launch/tier4_vehicle_launch/#usage","title":"Usage","text":"<p>You can include as follows in <code>*.launch.xml</code> to use <code>vehicle.launch.xml</code>.</p> <pre><code>  &lt;arg name=\"vehicle_model\" default=\"sample_vehicle\" description=\"vehicle model name\"/&gt;\n&lt;arg name=\"sensor_model\" default=\"sample_sensor_kit\" description=\"sensor model name\"/&gt;\n\n&lt;include file=\"$(find-pkg-share tier4_vehicle_launch)/launch/vehicle.launch.xml\"&gt;\n&lt;arg name=\"vehicle_model\" value=\"$(var vehicle_model)\"/&gt;\n&lt;arg name=\"sensor_model\" value=\"$(var sensor_model)\"/&gt;\n&lt;/include&gt;\n</code></pre>"},{"location":"launch/tier4_vehicle_launch/#notes","title":"Notes","text":"<p>This package finds some external packages and settings with variables and package names.</p> <p>ex.)</p> <pre><code>&lt;let name=\"vehicle_model_pkg\" value=\"$(find-pkg-share $(var vehicle_model)_description)\"/&gt;\n</code></pre> <pre><code>&lt;arg name=\"config_dir\" default=\"$(find-pkg-share individual_params)/config/$(var vehicle_id)/$(var sensor_model)\"/&gt;\n</code></pre>"},{"location":"launch/tier4_vehicle_launch/#vehiclexacro","title":"vehicle.xacro","text":""},{"location":"launch/tier4_vehicle_launch/#arguments","title":"Arguments","text":"Name Type Description Default sensor_model String sensor model name \"\" vehicle_model String vehicle model name \"\""},{"location":"launch/tier4_vehicle_launch/#usage_1","title":"Usage","text":"<p>You can write as follows in <code>*.launch.xml</code>.</p> <pre><code>  &lt;arg name=\"vehicle_model\" default=\"sample_vehicle\" description=\"vehicle model name\"/&gt;\n&lt;arg name=\"sensor_model\" default=\"sample_sensor_kit\" description=\"sensor model name\"/&gt;\n&lt;arg name=\"model\" default=\"$(find-pkg-share tier4_vehicle_launch)/urdf/vehicle.xacro\"/&gt;\n\n&lt;node name=\"robot_state_publisher\" pkg=\"robot_state_publisher\" exec=\"robot_state_publisher\"&gt;\n&lt;param name=\"robot_description\" value=\"$(command 'xacro $(var model) vehicle_model:=$(var vehicle_model) sensor_model:=$(var sensor_model)')\"/&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"localization/ekf_localizer/","title":"Overview","text":"<p>The Extend Kalman Filter Localizer estimates robust and less noisy robot pose and twist by integrating the 2D vehicle dynamics model with input ego-pose and ego-twist messages. The algorithm is designed especially for fast-moving robots such as autonomous driving systems.</p>"},{"location":"localization/ekf_localizer/#flowchart","title":"Flowchart","text":"<p>The overall flowchart of the ekf_localizer is described below.</p> <p> </p>"},{"location":"localization/ekf_localizer/#features","title":"Features","text":"<p>This package includes the following features:</p> <ul> <li>Time delay compensation for input messages, which enables proper integration of input information with varying time delays. This is important especially for high-speed moving robots, such as autonomous driving vehicles. (see the following figure).</li> <li>Automatic estimation of yaw bias prevents modeling errors caused by sensor mounting angle errors, which can improve estimation accuracy.</li> <li>Mahalanobis distance gate enables probabilistic outlier detection to determine which inputs should be used or ignored.</li> <li>Smooth update, the Kalman Filter measurement update is typically performed when a measurement is obtained, but it can cause large changes in the estimated value, especially for low-frequency measurements. Since the algorithm can consider the measurement time, the measurement data can be divided into multiple pieces and integrated smoothly while maintaining consistency (see the following figure).</li> </ul> <p> </p> <p> </p>"},{"location":"localization/ekf_localizer/#launch","title":"Launch","text":"<p>The <code>ekf_localizer</code> starts with the default parameters with the following command.</p> <pre><code>roslaunch ekf_localizer ekf_localizer.launch\n</code></pre> <p>The parameters and input topic names can be set in the <code>ekf_localizer.launch</code> file.</p>"},{"location":"localization/ekf_localizer/#node","title":"Node","text":""},{"location":"localization/ekf_localizer/#subscribed-topics","title":"Subscribed Topics","text":"<ul> <li> <p>measured_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped)</p> <p>Input pose source with the measurement covariance matrix.</p> </li> </ul> <ul> <li> <p>measured_twist_with_covariance (geometry_msgs/TwistWithCovarianceStamped)</p> <p>Input twist source with the measurement covariance matrix.</p> </li> </ul> <ul> <li> <p>initialpose (geometry_msgs/PoseWithCovarianceStamped)</p> <p>Initial pose for EKF. The estimated pose is initialized with zeros at the start. It is initialized with this message whenever published.</p> </li> </ul>"},{"location":"localization/ekf_localizer/#published-topics","title":"Published Topics","text":"<ul> <li> <p>ekf_odom (nav_msgs/Odometry)</p> <p>Estimated odometry.</p> </li> </ul> <ul> <li> <p>ekf_pose (geometry_msgs/PoseStamped)</p> <p>Estimated pose.</p> </li> </ul> <ul> <li> <p>ekf_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped)</p> <p>Estimated pose with covariance.</p> </li> </ul> <ul> <li> <p>ekf_biased_pose (geometry_msgs/PoseStamped)</p> <p>Estimated pose including the yaw bias</p> </li> </ul> <ul> <li> <p>ekf_biased_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped)</p> <p>Estimated pose with covariance including the yaw bias</p> </li> </ul> <ul> <li> <p>ekf_twist (geometry_msgs/TwistStamped)</p> <p>Estimated twist.</p> </li> </ul> <ul> <li> <p>ekf_twist_with_covariance (geometry_msgs/TwistWithCovarianceStamped)</p> <p>The estimated twist with covariance.</p> </li> </ul>"},{"location":"localization/ekf_localizer/#published-tf","title":"Published TF","text":"<ul> <li> <p>base_link</p> <p>TF from \"map\" coordinate to estimated pose.</p> </li> </ul>"},{"location":"localization/ekf_localizer/#functions","title":"Functions","text":""},{"location":"localization/ekf_localizer/#predict","title":"Predict","text":"<p>The current robot state is predicted from previously estimated data using a given prediction model. This calculation is called at a constant interval (<code>predict_frequency [Hz]</code>). The prediction equation is described at the end of this page.</p>"},{"location":"localization/ekf_localizer/#measurement-update","title":"Measurement Update","text":"<p>Before the update, the Mahalanobis distance is calculated between the measured input and the predicted state, the measurement update is not performed for inputs where the Mahalanobis distance exceeds the given threshold.</p> <p>The predicted state is updated with the latest measured inputs, measured_pose, and measured_twist. The updates are performed with the same frequency as prediction, usually at a high frequency, in order to enable smooth state estimation.</p>"},{"location":"localization/ekf_localizer/#parameter-description","title":"Parameter description","text":"<p>The parameters are set in <code>launch/ekf_localizer.launch</code> .</p>"},{"location":"localization/ekf_localizer/#for-node","title":"For Node","text":"Name Type Description Default value show_debug_info bool Flag to display debug info false predict_frequency double Frequency for filtering and publishing [Hz] 50.0 tf_rate double Frequency for tf broadcasting [Hz] 10.0 extend_state_step int Max delay step which can be dealt with in EKF. Large number increases computational cost. 50 enable_yaw_bias_estimation bool Flag to enable yaw bias estimation true"},{"location":"localization/ekf_localizer/#for-pose-measurement","title":"For pose measurement","text":"Name Type Description Default value pose_additional_delay double Additional delay time for pose measurement [s] 0.0 pose_measure_uncertainty_time double Measured time uncertainty used for covariance calculation [s] 0.01 pose_smoothing_steps int A value for smoothing steps 5 pose_gate_dist double Limit of Mahalanobis distance used for outliers detection 10000.0"},{"location":"localization/ekf_localizer/#for-twist-measurement","title":"For twist measurement","text":"Name Type Description Default value twist_additional_delay double Additional delay time for twist [s] 0.0 twist_smoothing_steps int A value for smoothing steps 2 twist_gate_dist double Limit of Mahalanobis distance used for outliers detection 10000.0"},{"location":"localization/ekf_localizer/#for-process-noise","title":"For process noise","text":"Name Type Description Default value proc_stddev_vx_c double Standard deviation of process noise in time differentiation expression of linear velocity x, noise for d_vx = 0 2.0 proc_stddev_wz_c double Standard deviation of process noise in time differentiation expression of angular velocity z, noise for d_wz = 0 0.2 proc_stddev_yaw_c double Standard deviation of process noise in time differentiation expression of yaw, noise for d_yaw = omega 0.005 proc_stddev_yaw_bias_c double Standard deviation of process noise in time differentiation expression of yaw_bias, noise for d_yaw_bias = 0 0.001 <p>note: process noise for positions x &amp; y are calculated automatically from nonlinear dynamics.</p>"},{"location":"localization/ekf_localizer/#how-to-tune-ekf-parameters","title":"How to tune EKF parameters","text":""},{"location":"localization/ekf_localizer/#0-preliminaries","title":"0. Preliminaries","text":"<ul> <li>Check header time in pose and twist message is set to sensor time appropriately, because time delay is calculated from this value. If it is difficult to set an appropriate time due to the timer synchronization problem, use <code>twist_additional_delay</code> and <code>pose_additional_delay</code> to correct the time.</li> <li>Check if the relation between measurement pose and twist is appropriate (whether the derivative of the pose has a similar value to twist). This discrepancy is caused mainly by unit error (such as confusing radian/degree) or bias noise, and it causes large estimation errors.</li> </ul>"},{"location":"localization/ekf_localizer/#1-tune-sensor-parameters","title":"1. Tune sensor parameters","text":"<p>Set standard deviation for each sensor. The <code>pose_measure_uncertainty_time</code> is for the uncertainty of the header timestamp data. You can also tune a number of steps for smoothing for each observed sensor data by tuning <code>*_smoothing_steps</code>. Increasing the number will improve the smoothness of the estimation, but may have an adverse effect on the estimation performance.</p> <ul> <li><code>pose_measure_uncertainty_time</code></li> <li><code>pose_smoothing_steps</code></li> <li><code>twist_smoothing_steps</code></li> </ul>"},{"location":"localization/ekf_localizer/#2-tune-process-model-parameters","title":"2. Tune process model parameters","text":"<ul> <li><code>proc_stddev_vx_c</code> : set to maximum linear acceleration</li> <li><code>proc_stddev_wz_c</code> : set to maximum angular acceleration</li> <li><code>proc_stddev_yaw_c</code> : This parameter describes the correlation between the yaw and yawrate. A large value means the change in yaw does not correlate to the estimated yawrate. If this is set to 0, it means the change in estimated yaw is equal to yawrate. Usually, this should be set to 0.</li> <li><code>proc_stddev_yaw_bias_c</code> : This parameter is the standard deviation for the rate of change in yaw bias. In most cases, yaw bias is constant, so it can be very small, but must be non-zero.</li> </ul>"},{"location":"localization/ekf_localizer/#kalman-filter-model","title":"Kalman Filter Model","text":""},{"location":"localization/ekf_localizer/#kinematics-model-in-update-function","title":"kinematics model in update function","text":"<p>where <code>b_k</code> is the yawbias.</p>"},{"location":"localization/ekf_localizer/#time-delay-model","title":"time delay model","text":"<p>The measurement time delay is handled by an augmented state [1] (See, Section 7.3 FIXED-LAG SMOOTHING).</p> <p></p> <p>Note that, although the dimension gets larger since the analytical expansion can be applied based on the specific structures of the augmented states, the computational complexity does not significantly change.</p>"},{"location":"localization/ekf_localizer/#test-result-with-autoware-ndt","title":"Test Result with Autoware NDT","text":""},{"location":"localization/ekf_localizer/#known-issues","title":"Known issues","text":"<ul> <li>In the presence of multiple inputs with yaw estimation, yaw bias <code>b_k</code> in the current EKF state would not make any sense, since it is intended to capture the extrinsic parameter's calibration error of a sensor. Thus, future work includes introducing yaw bias for each sensor with yaw estimation.</li> </ul>"},{"location":"localization/ekf_localizer/#reference","title":"reference","text":"<p>[1] Anderson, B. D. O., &amp; Moore, J. B. (1979). Optimal filtering. Englewood Cliffs, NJ: Prentice-Hall.</p>"},{"location":"localization/gyro_odometer/","title":"gyro_odometer","text":""},{"location":"localization/gyro_odometer/#purpose","title":"Purpose","text":"<p><code>gyro_odometer</code> is the package to estimate twist by combining imu and vehicle speed.</p>"},{"location":"localization/gyro_odometer/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/gyro_odometer/#input","title":"Input","text":"Name Type Description <code>vehicle/twist_with_covariance</code> <code>geometry_msgs::msg::TwistWithCovarianceStamped</code> twist with covariance from vehicle <code>imu</code> <code>sensor_msgs::msg::Imu</code> imu from sensor"},{"location":"localization/gyro_odometer/#output","title":"Output","text":"Name Type Description <code>twist_with_covariance</code> <code>geometry_msgs::msg::TwistWithCovarianceStamped</code> estimated twist with covariance"},{"location":"localization/gyro_odometer/#parameters","title":"Parameters","text":"Parameter Type Description <code>output_frame</code> String output's frame id <code>message_timeout_sec</code> Double delay tolerance time for message"},{"location":"localization/gyro_odometer/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>[Assumption] The frame_id of input twist message must be set to base_link.</li> </ul> <ul> <li>[Assumption] The covariance in the input messages must be properly assigned.</li> </ul> <ul> <li>[Assumption] The angular velocity is set to zero if both the longitudinal vehicle velocity and the angular velocity around the yaw axis are sufficiently small. This is for suppression of the IMU angular velocity bias. Without this process, we misestimate the vehicle status when stationary.</li> </ul> <ul> <li>[Limitation] The frequency of the output messages depends on the frequency of the input IMU message.</li> </ul> <ul> <li>[Limitation] We cannot produce reliable values for the lateral and vertical velocities. Therefore we assign large values to the corresponding elements in the output covariance matrix.</li> </ul>"},{"location":"localization/initial_pose_button_panel/","title":"initial_pose_button_panel","text":""},{"location":"localization/initial_pose_button_panel/#role","title":"Role","text":"<p><code>initial_pose_button_panel</code> is the package to send a request to the localization module to calculate the current ego pose.</p> <p>It starts calculating the current ego pose by pushing the button on Rviz, implemented as an Rviz plugin. You can see the button on the right bottom of Rviz.</p> <p></p>"},{"location":"localization/initial_pose_button_panel/#input-output","title":"Input / Output","text":""},{"location":"localization/initial_pose_button_panel/#input-topics","title":"Input topics","text":"Name Type Description <code>/sensing/gnss/pose_with_covariance</code> (default) geometry_msgs::msg::PoseWithCovarianceStamped initial pose with covariance to calculate the current ego pose"},{"location":"localization/localization_error_monitor/","title":"localization_error_monitor","text":""},{"location":"localization/localization_error_monitor/#purpose","title":"Purpose","text":"<p>localization_error_monitor is a package for diagnosing localization errors by monitoring uncertainty of the localization results. The package monitors the following two values:</p> <ul> <li>size of long radius of confidence ellipse</li> <li>size of confidence ellipse along lateral direction (body-frame)</li> </ul>"},{"location":"localization/localization_error_monitor/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/localization_error_monitor/#input","title":"Input","text":"Name Type Description <code>input/pose_with_cov</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> localization result"},{"location":"localization/localization_error_monitor/#output","title":"Output","text":"Name Type Description <code>debug/ellipse_marker</code> <code>visualization_msgs::msg::Marker</code> ellipse marker <code>diagnostics</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> diagnostics outputs"},{"location":"localization/localization_error_monitor/#parameters","title":"Parameters","text":"Name Type Description <code>scale</code> double scale factor for monitored values (default: 3.0) <code>error_ellipse_size</code> double error threshold for long radius of confidence ellipse [m] (default: 1.0) <code>warn_ellipse_size</code> double warning threshold for long radius of confidence ellipse [m] (default: 0.8) <code>error_ellipse_size_lateral_direction</code> double error threshold for size of confidence ellipse along lateral direction [m] (default: 0.3) <code>warn_ellipse_size_lateral_direction</code> double warning threshold for size of confidence ellipse along lateral direction [m] (default: 0.2)"},{"location":"localization/ndt_scan_matcher/","title":"ndt_scan_matcher","text":""},{"location":"localization/ndt_scan_matcher/#purpose","title":"Purpose","text":"<p>ndt_scan_matcher is a package for position estimation using the NDT scan matching method.</p> <p>There are two main functions in this package:</p> <ul> <li>estimate position by scan matching</li> <li>estimate initial position via the ROS service using the Monte Carlo method</li> </ul> <p>One optional function is regularization. Please see the regularization chapter in the back for details. It is disabled by default.</p>"},{"location":"localization/ndt_scan_matcher/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/ndt_scan_matcher/#input","title":"Input","text":"Name Type Description <code>ekf_pose_with_covariance</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> initial pose <code>pointcloud_map</code> <code>sensor_msgs::msg::PointCloud2</code> map pointcloud <code>points_raw</code> <code>sensor_msgs::msg::PointCloud2</code> sensor pointcloud <code>sensing/gnss/pose_with_covariance</code> <code>sensor_msgs::msg::PoseWithCovarianceStamped</code> base position for regularization term <p><code>sensing/gnss/pose_with_covariance</code> is required only when regularization is enabled.</p>"},{"location":"localization/ndt_scan_matcher/#output","title":"Output","text":"Name Type Description <code>ndt_pose</code> <code>geometry_msgs::msg::PoseStamped</code> estimated pose <code>ndt_pose_with_covariance</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> estimated pose with covariance <code>/diagnostics</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> diagnostics <code>points_aligned</code> <code>sensor_msgs::msg::PointCloud2</code> [debug topic] pointcloud aligned by scan matching <code>points_aligned_no_ground</code> <code>sensor_msgs::msg::PointCloud2</code> [debug topic] de-grounded pointcloud aligned by scan matching <code>initial_pose_with_covariance</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> [debug topic] initial pose used in scan matching <code>exe_time_ms</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> [debug topic] execution time for scan matching [ms] <code>transform_probability</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> [debug topic] score of scan matching <code>no_ground_transform_probability</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> [debug topic] score of scan matching based on de-grounded LiDAR scan <code>iteration_num</code> <code>tier4_debug_msgs::msg::Int32Stamped</code> [debug topic] number of scan matching iterations <code>initial_to_result_distance</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> [debug topic] distance difference between the initial point and the convergence point [m] <code>initial_to_result_distance_old</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> [debug topic] distance difference between the older of the two initial points used in linear interpolation and the convergence point [m] <code>initial_to_result_distance_new</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> [debug topic] distance difference between the newer of the two initial points used in linear interpolation and the convergence point [m] <code>ndt_marker</code> <code>visualization_msgs::msg::MarkerArray</code> [debug topic] markers for debugging <code>monte_carlo_initial_pose_marker</code> <code>visualization_msgs::msg::MarkerArray</code> [debug topic] particles used in initial position estimation"},{"location":"localization/ndt_scan_matcher/#service","title":"Service","text":"Name Type Description <code>ndt_align_srv</code> <code>autoware_localization_srvs::srv::PoseWithCovarianceStamped</code> service to estimate initial pose"},{"location":"localization/ndt_scan_matcher/#parameters","title":"Parameters","text":""},{"location":"localization/ndt_scan_matcher/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>base_frame</code> string Vehicle reference frame <code>input_sensor_points_queue_size</code> int Subscriber queue size <code>trans_epsilon</code> double The maximum difference between two consecutive transformations in order to consider convergence <code>step_size</code> double The newton line search maximum step length <code>resolution</code> double The ND voxel grid resolution [m] <code>max_iterations</code> int The number of iterations required to calculate alignment <code>converged_param_type</code> int The type of indicators for scan matching score (0: TP, 1: NVTL) <code>converged_param_transform_probability</code> double Threshold for deciding whether to trust the estimation result <code>num_threads</code> int Number of threads used for parallel computing <p>(TP: Transform Probability, NVTL: Nearest Voxel Transform Probability)</p>"},{"location":"localization/ndt_scan_matcher/#regularization","title":"Regularization","text":""},{"location":"localization/ndt_scan_matcher/#abstract","title":"Abstract","text":"<p>This is a function that adds the regularization term to the NDT optimization problem as follows.</p>  \\begin{align}     \\min_{\\mathbf{R},\\mathbf{t}}     \\mathrm{NDT}(\\mathbf{R},\\mathbf{t})     +\\mathrm{scale\\ factor}\\cdot \\left|         \\mathbf{R}^\\top         (\\mathbf{t_{base}-\\mathbf{t}})         \\cdot         \\begin{pmatrix}             1\\\\             0\\\\             0         \\end{pmatrix}         \\right|^2 \\end{align}  <p>, where t_base is base position measured by GNSS or other means. NDT(R,t) stands for the pure NDT cost function. The regularization term shifts the optimal solution to the base position in the longitudinal direction of the vehicle. Only errors along the longitudinal direction with respect to the base position are considered; errors along Z-axis and lateral-axis error are not considered.</p> <p>Although the regularization term has rotation as a parameter, the gradient and hessian associated with it is not computed to stabilize the optimization. Specifically, the gradients are computed as follows.</p>  \\begin{align}     &amp;g_x=\\nabla_x \\mathrm{NDT}(\\mathbf{R},\\mathbf{t}) + 2 \\mathrm{scale\\ factor} \\cos\\theta_z\\cdot e_{\\mathrm{longitudinal}}     \\\\     &amp;g_y=\\nabla_y \\mathrm{NDT}(\\mathbf{R},\\mathbf{t}) + 2 \\mathrm{scale\\ factor} \\sin\\theta_z\\cdot e_{\\mathrm{longitudinal}}     \\\\     &amp;g_z=\\nabla_z \\mathrm{NDT}(\\mathbf{R},\\mathbf{t})     \\\\     &amp;g_\\mathbf{R}=\\nabla_\\mathbf{R} \\mathrm{NDT}(\\mathbf{R},\\mathbf{t}) \\end{align}   \\begin{align}     &amp;g_x=\\nabla_x \\mathrm{NDT}(\\mathbf{R},\\mathbf{t}) + 2 \\mathrm{scale\\ factor} \\cos\\theta_z\\cdot e_{\\mathrm{longitudinal}}     \\\\     &amp;g_y=\\nabla_y \\mathrm{NDT}(\\mathbf{R},\\mathbf{t}) + 2 \\mathrm{scale\\ factor} \\sin\\theta_z\\cdot e_{\\mathrm{longitudinal}}     \\\\     &amp;g_z=\\nabla_z \\mathrm{NDT}(\\mathbf{R},\\mathbf{t})     \\\\     &amp;g_\\mathbf{R}=\\nabla_\\mathbf{R} \\mathrm{NDT}(\\mathbf{R},\\mathbf{t}) \\end{align}  <p>Regularization is disabled by default. If you wish to use it, please edit the following parameters to enable it.</p>"},{"location":"localization/ndt_scan_matcher/#where-is-regularization-available","title":"Where is regularization available","text":"<p>This feature is effective on feature-less roads where GNSS is available, such as</p> <ul> <li>bridges</li> <li>highways</li> <li>farm roads</li> </ul> <p>By remapping the base position topic to something other than GNSS, as described below, it can be valid outside of these.</p>"},{"location":"localization/ndt_scan_matcher/#using-other-base-position","title":"Using other base position","text":"<p>Other than GNSS, you can give other global position topics obtained from magnetic markers, visual markers or etc. if they are available in your environment. (Currently Autoware does not provide a node that gives such pose.) To use your topic for regularization, you need to remap the <code>input_regularization_pose_topic</code> with your topic in <code>ndt_scan_matcher.launch.xml</code>. By default, it is remapped with <code>/sensing/gnss/pose_with_covariance</code>.</p>"},{"location":"localization/ndt_scan_matcher/#limitations","title":"Limitations","text":"<p>Since this function determines the base position by linear interpolation from the recently subscribed poses, topics that are published at a low frequency relative to the driving speed cannot be used. Inappropriate linear interpolation may result in bad optimization results.</p> <p>When using GNSS for base location, the regularization can have negative effects in tunnels, indoors, and near skyscrapers. This is because if the base position is far off from the true value, NDT scan matching may converge to inappropriate optimal position.</p>"},{"location":"localization/ndt_scan_matcher/#parameters_1","title":"Parameters","text":"Name Type Description <code>regularization_enabled</code> bool Flag to add regularization term to NDT optimization (FALSE by default) <code>regularization_scale_factor</code> double Coefficient of the regularization term. <p>Regularization is disabled by default because GNSS is not always accurate enough to serve the appropriate base position in any scenes.</p> <p>If the scale_factor is too large, the NDT will be drawn to the base position and scan matching may fail. Conversely, if it is too small, the regularization benefit will be lost.</p> <p>Note that setting scale_factor to 0 is equivalent to disabling regularization.</p>"},{"location":"localization/ndt_scan_matcher/#example","title":"Example","text":"<p>The following figures show tested maps.</p> <ul> <li>The left is a map with enough features that NDT can successfully localize.</li> <li>The right is a map with so few features that the NDT cannot localize well.</li> </ul> <p> </p> <p>The following figures show the trajectories estimated on the feature-less map with standard NDT and regularization-enabled NDT, respectively. The color of the trajectory indicates the error (meter) from the reference trajectory, which is computed with the feature-rich map.</p> <ul> <li>The left figure shows that the pure NDT causes a longitudinal error in the bridge and is not able to recover.</li> <li>The right figure shows that the regularization suppresses the longitudinal error.</li> </ul> <p> </p>"},{"location":"localization/ndt_scan_matcher/#dynamic-map-loading","title":"Dynamic map loading","text":"<p>Autoware supports dynamic map loading feature for <code>ndt_scan_matcher</code>. Using this feature, NDT dynamically requests for the surrounding pointcloud map to <code>pointcloud_map_loader</code>, and then receive and preprocess the map in an online fashion.</p> <p>Using the feature, <code>ndt_scan_matcher</code> can theoretically handle any large size maps in terms of memory usage. (Note that it is still possible that there exists a limitation due to other factors, e.g. floating-point error)</p> <p></p>"},{"location":"localization/ndt_scan_matcher/#additional-interfaces","title":"Additional interfaces","text":""},{"location":"localization/ndt_scan_matcher/#additional-inputs","title":"Additional inputs","text":"Name Type Description <code>input_ekf_odom</code> <code>nav_msgs::msg::Odometry</code> Vehicle localization results (used for map update decision)"},{"location":"localization/ndt_scan_matcher/#additional-outputs","title":"Additional outputs","text":"Name Type Description <code>debug/loaded_pointcloud_map</code> <code>sensor_msgs::msg::PointCloud2</code> pointcloud maps used for localization (for debug)"},{"location":"localization/ndt_scan_matcher/#additional-client","title":"Additional client","text":"Name Type Description <code>client_map_loader</code> <code>autoware_map_msgs::srv::GetDifferentialPointCloudMap</code> map loading client"},{"location":"localization/ndt_scan_matcher/#parameters_2","title":"Parameters","text":"Name Type Description <code>use_dynamic_map_loading</code> bool Flag to enable dynamic map loading feature for NDT (TRUE by default) <code>dynamic_map_loading_update_distance</code> double Distance traveled to load new map(s) <code>dynamic_map_loading_map_radius</code> double Map loading radius for every update <code>lidar_radius</code> double LiDAR radius used for localization (only used for diagnosis)"},{"location":"localization/ndt_scan_matcher/#enabling-the-dynamic-map-loading-feature","title":"Enabling the dynamic map loading feature","text":"<p>To use dynamic map loading feature for <code>ndt_scan_matcher</code>, you also need to appropriately configure some other settings outside of this node. Follow the next two instructions.</p> <ol> <li>enable dynamic map loading interface in <code>pointcloud_map_loader</code> (by setting <code>enable_differential_load</code> to true in the package)</li> <li>split the PCD files into grids (recommended size: 20[m] x 20[m])</li> </ol> <p>Note that the dynamic map loading may FAIL if the map is split into two or more large size map (e.g. 1000[m] x 1000[m]). Please provide either of</p> <ul> <li>one PCD map file</li> <li>multiple PCD map files divided into small size (~20[m])</li> </ul> <p>Here is a split PCD map for <code>sample-map-rosbag</code> from Autoware tutorial: <code>sample-map-rosbag_split.zip</code></p> PCD files <code>use_dynamic_map_loading</code> <code>enable_differential_load</code> How NDT loads map(s) single file true true at once (standard) single file true false does NOT work single file false true/false at once (standard) splitted true true dynamically splitted true false does NOT work splitted false true/false at once (standard)"},{"location":"localization/ndt_scan_matcher/#scan-matching-score-based-on-de-grounded-lidar-scan","title":"Scan matching score based on de-grounded LiDAR scan","text":""},{"location":"localization/ndt_scan_matcher/#abstract_1","title":"Abstract","text":"<p>This is a function that using de-grounded LiDAR scan estimate scan matching score.This score can more accurately reflect the current localization performance. related issue.</p>"},{"location":"localization/ndt_scan_matcher/#parameters_3","title":"Parameters","text":"Name Type Description <code>estimate_scores_for_degrounded_scan</code> bool Flag for using scan matching score based on de-grounded LiDAR scan (FALSE by default) <code>z_margin_for_ground_removal</code> double Z-value margin for removal ground points"},{"location":"localization/pose2twist/","title":"pose2twist","text":""},{"location":"localization/pose2twist/#purpose","title":"Purpose","text":"<p>This <code>pose2twist</code> calculates the velocity from the input pose history. In addition to the computed twist, this node outputs the linear-x and angular-z components as a float message to simplify debugging.</p> <p>The <code>twist.linear.x</code> is calculated as <code>sqrt(dx * dx + dy * dy + dz * dz) / dt</code>, and the values in the <code>y</code> and <code>z</code> fields are zero. The <code>twist.angular</code> is calculated as <code>d_roll / dt</code>, <code>d_pitch / dt</code> and <code>d_yaw / dt</code> for each field.</p>"},{"location":"localization/pose2twist/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/pose2twist/#input","title":"Input","text":"Name Type Description pose geometry_msgs::msg::PoseStamped pose source to used for the velocity calculation."},{"location":"localization/pose2twist/#output","title":"Output","text":"Name Type Description twist geometry_msgs::msg::TwistStamped twist calculated from the input pose history. linear_x tier4_debug_msgs::msg::Float32Stamped linear-x field of the output twist. angular_z tier4_debug_msgs::msg::Float32Stamped angular-z field of the output twist."},{"location":"localization/pose2twist/#parameters","title":"Parameters","text":"<p>none.</p>"},{"location":"localization/pose2twist/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>none.</p>"},{"location":"localization/pose_initializer/","title":"pose_initializer","text":"<ul> <li>pose_initializer</li> <li>map_height_fitter</li> </ul>"},{"location":"localization/pose_initializer/docs/map_height_fitter/","title":"map_height_fitter","text":""},{"location":"localization/pose_initializer/docs/map_height_fitter/#purpose","title":"Purpose","text":"<p>This node provides a service to fit a pose height to a map. Use this service as preprocessing for <code>pose_initializer</code> when using a initial poses with inaccurate height such as RViz and GNSS. This service replaces the Z value of the input pose with the lowest point of the map point cloud within a cylinder of XY-radius. If no point is found in this range, returns the input pose without changes.</p> <p>Note that this package supports partial map loading interface, which is disabled by default. The interface is intended to be enabled when the pointcloud map is too large to handle. By using the interface, the node will request for a partial map around the requested position instead of loading whole map by subscription interface. To use this interface,</p> <ol> <li>Set <code>enable_partial_map_load</code> in this node to <code>true</code></li> <li>Set <code>enable_partial_load</code> in <code>pointcloud_map_loader</code> to <code>true</code></li> </ol>"},{"location":"localization/pose_initializer/docs/map_height_fitter/#interfaces","title":"Interfaces","text":""},{"location":"localization/pose_initializer/docs/map_height_fitter/#parameters","title":"Parameters","text":"Name Type Description <code>enable_partial_map_load</code> bool If true, use partial map load interface. If false, use topic subscription interaface. false"},{"location":"localization/pose_initializer/docs/map_height_fitter/#services","title":"Services","text":"Name Type Description <code>/localization/util/fit_map_height</code> tier4_localization_msgs::srv::PoseWithCovarianceStamped pose fitting service"},{"location":"localization/pose_initializer/docs/map_height_fitter/#subscriptions","title":"Subscriptions","text":"Name Type Description <code>/map/pointcloud_map</code> sensor_msgs::msg::PointCloud2 pointcloud map"},{"location":"localization/pose_initializer/docs/map_height_fitter/#clients","title":"Clients","text":"Name Type Description <code>/map/get_partial_pointcloud_map</code> autoware_map_msgs::srv::GetPartialPointCloudMap client for requesting partial pointcloud map"},{"location":"localization/pose_initializer/docs/pose_initializer/","title":"pose_initializer","text":""},{"location":"localization/pose_initializer/docs/pose_initializer/#purpose","title":"Purpose","text":"<p><code>pose_initializer</code> is the package to send an initial pose to <code>ekf_localizer</code>. It receives roughly estimated initial pose from GNSS/user. Passing the pose to <code>ndt_scan_matcher</code>, and it gets a calculated ego pose from <code>ndt_scan_matcher</code> via service. Finally, it publishes the initial pose to <code>ekf_localizer</code>.</p>"},{"location":"localization/pose_initializer/docs/pose_initializer/#interfaces","title":"Interfaces","text":""},{"location":"localization/pose_initializer/docs/pose_initializer/#parameters","title":"Parameters","text":"Name Type Description <code>ndt_enabled</code> bool If true, the pose will be estimated by NDT scan matcher, otherwise it is passed through. <code>stop_check_enabled</code> bool If true, initialization is accepted only when the vehicle is stopped. <code>stop_check_duration</code> bool The duration used for the stop check above. <code>gnss_enabled</code> bool If true, use the GNSS pose when no pose is specified. <code>gnss_pose_timeout</code> bool The duration that the GNSS pose is valid."},{"location":"localization/pose_initializer/docs/pose_initializer/#services","title":"Services","text":"Name Type Description <code>/localization/initialize</code> autoware_adapi_v1_msgs::srv::InitializeLocalization initial pose from api"},{"location":"localization/pose_initializer/docs/pose_initializer/#clients","title":"Clients","text":"Name Type Description <code>/localization/pose_estimator/ndt_align_srv</code> tier4_localization_msgs::srv::PoseWithCovarianceStamped pose estimation service"},{"location":"localization/pose_initializer/docs/pose_initializer/#subscriptions","title":"Subscriptions","text":"Name Type Description <code>/sensing/gnss/pose_with_covariance</code> geometry_msgs::msg::PoseWithCovarianceStamped pose from gnss <code>/sensing/vehicle_velocity_converter/twist_with_covariance</code> geometry_msgs::msg::TwistStamped twist for stop check"},{"location":"localization/pose_initializer/docs/pose_initializer/#publications","title":"Publications","text":"Name Type Description <code>/localization/initialization_state</code> autoware_adapi_v1_msgs::msg::LocalizationInitializationState pose initialization state <code>/initialpose3d</code> geometry_msgs::msg::PoseWithCovarianceStamped calculated initial ego pose"},{"location":"localization/pose_initializer/docs/pose_initializer/#connection-with-default-ad-api","title":"Connection with Default AD API","text":"<p>This <code>pose_initializer</code> is used via default AD API. For detailed description of the API description, please refer to the description of <code>default_ad_api</code>.</p> <p></p>"},{"location":"localization/stop_filter/","title":"stop_filter","text":""},{"location":"localization/stop_filter/#purpose","title":"Purpose","text":"<p>When this function did not exist, each node used a different criterion to determine whether the vehicle is stopping or not, resulting that some nodes were in operation of stopping the vehicle and some nodes continued running in the drive mode. This node aims to:</p> <ul> <li>apply a uniform stopping decision criterion to several nodes.</li> <li>suppress the control noise by overwriting the velocity and angular velocity with zero.</li> </ul>"},{"location":"localization/stop_filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/stop_filter/#input","title":"Input","text":"Name Type Description <code>input/odom</code> <code>nav_msgs::msg::Odometry</code> localization odometry"},{"location":"localization/stop_filter/#output","title":"Output","text":"Name Type Description <code>output/odom</code> <code>nav_msgs::msg::Odometry</code> odometry with suppressed longitudinal and yaw twist <code>debug/stop_flag</code> <code>tier4_debug_msgs::msg::BoolStamped</code> flag to represent whether the vehicle is stopping or not"},{"location":"localization/stop_filter/#parameters","title":"Parameters","text":"Name Type Description <code>vx_threshold</code> double longitudinal velocity threshold to determine if the vehicle is stopping [m/s] (default: 0.01) <code>wz_threshold</code> double yaw velocity threshold to determine if the vehicle is stopping [rad/s] (default: 0.01)"},{"location":"localization/twist2accel/","title":"twist2accel","text":""},{"location":"localization/twist2accel/#purpose","title":"Purpose","text":"<p>This package is responsible for estimating acceleration using the output of <code>ekf_localizer</code>. It uses lowpass filter to mitigate the noise.</p>"},{"location":"localization/twist2accel/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/twist2accel/#input","title":"Input","text":"Name Type Description <code>input/odom</code> <code>nav_msgs::msg::Odometry</code> localization odometry <code>input/twist</code> <code>geometry_msgs::msg::TwistWithCovarianceStamped</code> twist"},{"location":"localization/twist2accel/#output","title":"Output","text":"Name Type Description <code>output/accel</code> <code>geometry_msgs::msg::AccelWithCovarianceStamped</code> estimated acceleration"},{"location":"localization/twist2accel/#parameters","title":"Parameters","text":"Name Type Description <code>use_odom</code> bool use odometry if true, else use twist input (default: true) <code>accel_lowpass_gain</code> double lowpass gain for lowpass filter in estimating acceleration (default: 0.9)"},{"location":"localization/twist2accel/#future-work","title":"Future work","text":"<p>Future work includes integrating acceleration into the EKF state.</p>"},{"location":"map/map_loader/","title":"map_loader package","text":"<p>This package provides the features of loading various maps.</p>"},{"location":"map/map_loader/#pointcloud_map_loader","title":"pointcloud_map_loader","text":""},{"location":"map/map_loader/#feature","title":"Feature","text":"<p><code>pointcloud_map_loader</code> provides pointcloud maps to the other Autoware nodes in various configurations. Currently, it supports the following two types:</p> <ul> <li>Publish raw pointcloud map</li> <li>Publish downsampled pointcloud map</li> <li>Send partial pointcloud map loading via ROS 2 service</li> <li>Send differential pointcloud map loading via ROS 2 service</li> </ul>"},{"location":"map/map_loader/#publish-raw-pointcloud-map-ros-2-topic","title":"Publish raw pointcloud map (ROS 2 topic)","text":"<p>The node publishes the raw pointcloud map loaded from the <code>.pcd</code> file(s).</p>"},{"location":"map/map_loader/#publish-downsampled-pointcloud-map-ros-2-topic","title":"Publish downsampled pointcloud map (ROS 2 topic)","text":"<p>The node publishes the downsampled pointcloud map loaded from the <code>.pcd</code> file(s). You can specify the downsample resolution by changing the <code>leaf_size</code> parameter.</p>"},{"location":"map/map_loader/#send-partial-pointcloud-map-ros-2-service","title":"Send partial pointcloud map (ROS 2 service)","text":"<p>Here, we assume that the pointcloud maps are divided into grids.</p> <p>Given a query from a client node, the node sends a set of pointcloud maps that overlaps with the queried area. Please see the description of <code>GetPartialPointCloudMap.srv</code> for details.</p>"},{"location":"map/map_loader/#send-differential-pointcloud-map-ros-2-service","title":"Send differential pointcloud map (ROS 2 service)","text":"<p>Here, we assume that the pointcloud maps are divided into grids.</p> <p>Given a query and set of map IDs, the node sends a set of pointcloud maps that overlap with the queried area and are not included in the set of map IDs. Please see the description of <code>GetDifferentialPointCloudMap.srv</code> for details.</p>"},{"location":"map/map_loader/#parameters","title":"Parameters","text":"Name Type Description Default value enable_whole_load bool A flag to enable raw pointcloud map publishing true enable_downsampled_whole_load bool A flag to enable downsampled pointcloud map publishing false enable_partial_load bool A flag to enable partial pointcloud map server false enable_differential_load bool A flag to enable differential pointcloud map server false leaf_size float Downsampling leaf size (only used when enable_downsampled_whole_load is set true) 3.0"},{"location":"map/map_loader/#interfaces","title":"Interfaces","text":"<ul> <li><code>output/pointcloud_map</code> (sensor_msgs/msg/PointCloud2) : Raw pointcloud map</li> <li><code>output/debug/downsampled_pointcloud_map</code> (sensor_msgs/msg/PointCloud2) : Downsampled pointcloud map</li> <li><code>service/get_partial_pcd_map</code> (autoware_map_msgs/srv/GetPartialPointCloudMap) : Partial pointcloud map</li> <li><code>service/get_differential_pcd_map</code> (autoware_map_msgs/srv/GetDifferentialPointCloudMap) : Differential pointcloud map</li> </ul>"},{"location":"map/map_loader/#lanelet2_map_loader","title":"lanelet2_map_loader","text":""},{"location":"map/map_loader/#feature_1","title":"Feature","text":"<p>lanelet2_map_loader loads Lanelet2 file and publishes the map data as autoware_auto_mapping_msgs/HADMapBin message. The node projects lan/lon coordinates into MGRS coordinates.</p>"},{"location":"map/map_loader/#how-to-run","title":"How to run","text":"<p><code>ros2 run map_loader lanelet2_map_loader --ros-args -p lanelet2_map_path:=path/to/map.osm</code></p>"},{"location":"map/map_loader/#published-topics","title":"Published Topics","text":"<ul> <li>~output/lanelet2_map (autoware_auto_mapping_msgs/HADMapBin) : Binary data of loaded Lanelet2 Map</li> </ul>"},{"location":"map/map_loader/#lanelet2_map_visualization","title":"lanelet2_map_visualization","text":""},{"location":"map/map_loader/#feature_2","title":"Feature","text":"<p>lanelet2_map_visualization visualizes autoware_auto_mapping_msgs/HADMapBin messages into visualization_msgs/MarkerArray.</p>"},{"location":"map/map_loader/#how-to-run_1","title":"How to Run","text":"<p><code>ros2 run map_loader lanelet2_map_visualization</code></p>"},{"location":"map/map_loader/#subscribed-topics","title":"Subscribed Topics","text":"<ul> <li>~input/lanelet2_map (autoware_auto_mapping_msgs/HADMapBin) : binary data of Lanelet2 Map</li> </ul>"},{"location":"map/map_loader/#published-topics_1","title":"Published Topics","text":"<ul> <li>~output/lanelet2_map_marker (visualization_msgs/MarkerArray) : visualization messages for RViz</li> </ul>"},{"location":"map/map_tf_generator/Readme/","title":"map_tf_generator","text":""},{"location":"map/map_tf_generator/Readme/#purpose","title":"Purpose","text":"<p>The nodes in this package broadcast the <code>viewer</code> frame for visualization of the map in RViz.</p> <p>Note that there is no module to need the <code>viewer</code> frame and this is used only for visualization.</p> <p>The following are the supported methods to calculate the position of the <code>viewer</code> frame:</p> <ul> <li><code>pcd_map_tf_generator_node</code> outputs the geometric center of all points in the PCD.</li> <li><code>vector_map_tf_generator_node</code> outputs the geometric center of all points in the point layer.</li> </ul>"},{"location":"map/map_tf_generator/Readme/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"map/map_tf_generator/Readme/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"map/map_tf_generator/Readme/#input","title":"Input","text":""},{"location":"map/map_tf_generator/Readme/#pcd_map_tf_generator","title":"pcd_map_tf_generator","text":"Name Type Description <code>/map/pointcloud_map</code> <code>sensor_msgs::msg::PointCloud2</code> Subscribe pointcloud map to calculate position of <code>viewer</code> frames"},{"location":"map/map_tf_generator/Readme/#vector_map_tf_generator","title":"vector_map_tf_generator","text":"Name Type Description <code>/map/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> Subscribe vector map to calculate position of <code>viewer</code> frames"},{"location":"map/map_tf_generator/Readme/#output","title":"Output","text":"Name Type Description <code>/tf_static</code> <code>tf2_msgs/msg/TFMessage</code> Broadcast <code>viewer</code> frames"},{"location":"map/map_tf_generator/Readme/#parameters","title":"Parameters","text":""},{"location":"map/map_tf_generator/Readme/#node-parameters","title":"Node Parameters","text":"<p>None</p>"},{"location":"map/map_tf_generator/Readme/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Explanation <code>viewer_frame</code> string viewer Name of <code>viewer</code> frame <code>map_frame</code> string map The parent frame name of viewer frame"},{"location":"map/map_tf_generator/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"perception/compare_map_segmentation/","title":"compare_map_segmentation","text":""},{"location":"perception/compare_map_segmentation/#purpose","title":"Purpose","text":"<p>The <code>compare_map_segmentation</code> is a node that filters the ground points from the input pointcloud by using map info (e.g. pcd, elevation map).</p>"},{"location":"perception/compare_map_segmentation/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/compare_map_segmentation/#compare-elevation-map-filter","title":"Compare Elevation Map Filter","text":"<p>Compare the z of the input points with the value of elevation_map. The height difference is calculated by the binary integration of neighboring cells. Remove points whose height difference is below the <code>height_diff_thresh</code>.</p> <p> </p>"},{"location":"perception/compare_map_segmentation/#distance-based-compare-map-filter","title":"Distance Based Compare Map Filter","text":"<p>WIP</p>"},{"location":"perception/compare_map_segmentation/#voxel-based-approximate-compare-map-filter","title":"Voxel Based Approximate Compare Map Filter","text":"<p>WIP</p>"},{"location":"perception/compare_map_segmentation/#voxel-based-compare-map-filter","title":"Voxel Based Compare Map Filter","text":"<p>WIP</p>"},{"location":"perception/compare_map_segmentation/#voxel-distance-based-compare-map-filter","title":"Voxel Distance based Compare Map Filter","text":"<p>WIP</p>"},{"location":"perception/compare_map_segmentation/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/compare_map_segmentation/#compare-elevation-map-filter_1","title":"Compare Elevation Map Filter","text":""},{"location":"perception/compare_map_segmentation/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/elevation_map</code> <code>grid_map::msg::GridMap</code> elevation map"},{"location":"perception/compare_map_segmentation/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"perception/compare_map_segmentation/#other-filters","title":"Other Filters","text":""},{"location":"perception/compare_map_segmentation/#input_1","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/map</code> <code>grid_map::msg::GridMap</code> map"},{"location":"perception/compare_map_segmentation/#output_1","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"perception/compare_map_segmentation/#parameters","title":"Parameters","text":""},{"location":"perception/compare_map_segmentation/#core-parameters","title":"Core Parameters","text":"Name Type Description Default value <code>map_layer_name</code> string elevation map layer name elevation <code>map_frame</code> float frame_id of the map that is temporarily used before elevation_map is subscribed map <code>height_diff_thresh</code> float Remove points whose height difference is below this value [m] 0.15"},{"location":"perception/compare_map_segmentation/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/compare_map_segmentation/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/compare_map_segmentation/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/compare_map_segmentation/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/compare_map_segmentation/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/crosswalk_traffic_light_estimator/","title":"crosswalk_traffic_light_estimator","text":""},{"location":"perception/crosswalk_traffic_light_estimator/#purpose","title":"Purpose","text":"<p><code>crosswalk_traffic_light_estimator</code> is a module that estimates pedestrian traffic signals from HDMap and detected vehicle traffic signals.</p>"},{"location":"perception/crosswalk_traffic_light_estimator/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/crosswalk_traffic_light_estimator/#input","title":"Input","text":"Name Type Description <code>~/input/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> vector map <code>~/input/route</code> <code>autoware_planning_msgs::msg::LaneletRoute</code> route <code>~/input/classified/traffic_signals</code> <code>autoware_auto_perception_msgs::msg::TrafficSignalArray</code> classified signals"},{"location":"perception/crosswalk_traffic_light_estimator/#output","title":"Output","text":"Name Type Description <code>~/output/traffic_signals</code> <code>autoware_auto_perception_msgs::msg::TrafficSignalArray</code> output that contains estimated pedestrian traffic signals"},{"location":"perception/crosswalk_traffic_light_estimator/#parameters","title":"Parameters","text":"Name Type Description Default value <code>use_last_detect_color</code> <code>bool</code> If this parameter is <code>true</code>, this module estimates pedestrian's traffic signal as RED not only when vehicle's traffic signal is detected as GREEN but also when detection results change GREEN to UNKNOWN. (If detection results change RED or AMBER to UNKNOWN, this module estimates pedestrian's traffic signal as UNKNOWN.) If this parameter is <code>false</code>, this module use only latest detection results for estimation. (Only when the detection result is GREEN, this module estimates pedestrian's traffic signal as RED.) <code>true</code>"},{"location":"perception/crosswalk_traffic_light_estimator/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>If traffic between pedestrians and vehicles is controlled by traffic signals, the crosswalk traffic signal maybe RED in order to prevent pedestrian from crossing when the following conditions are satisfied.</p>"},{"location":"perception/crosswalk_traffic_light_estimator/#situation1","title":"Situation1","text":"<ul> <li>crosswalk conflicts STRAIGHT lanelet</li> <li>the lanelet refers GREEN traffic signal</li> </ul>"},{"location":"perception/crosswalk_traffic_light_estimator/#situation2","title":"Situation2","text":"<ul> <li>crosswalk conflicts different turn direction lanelets (STRAIGHT and LEFT, LEFT and RIGHT, RIGHT and STRAIGHT)</li> <li>the lanelets refer GREEN traffic signal</li> </ul>"},{"location":"perception/crosswalk_traffic_light_estimator/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/crosswalk_traffic_light_estimator/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":""},{"location":"perception/detected_object_feature_remover/","title":"detected_object_feature_remover","text":""},{"location":"perception/detected_object_feature_remover/#purpose","title":"Purpose","text":"<p>The <code>detected_object_feature_remover</code> is a package to convert topic-type from <code>DetectedObjectWithFeatureArray</code> to <code>DetectedObjects</code>.</p>"},{"location":"perception/detected_object_feature_remover/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/detected_object_feature_remover/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/detected_object_feature_remover/#input","title":"Input","text":"Name Type Description <code>~/input</code> <code>tier4_perception_msgs::msg::DetectedObjectWithFeatureArray</code> detected objects with feature field"},{"location":"perception/detected_object_feature_remover/#output","title":"Output","text":"Name Type Description <code>~/output</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects"},{"location":"perception/detected_object_feature_remover/#parameters","title":"Parameters","text":"<p>None</p>"},{"location":"perception/detected_object_feature_remover/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/detected_object_validation/","title":"detected_object_validation","text":""},{"location":"perception/detected_object_validation/#purpose","title":"Purpose","text":"<p>The purpose of this package is to eliminate obvious false positives of DetectedObjects.</p>"},{"location":"perception/detected_object_validation/#referencesexternal-links","title":"References/External links","text":"<ul> <li>Obstacle pointcloud based validator</li> <li>Occupancy grid based validator</li> <li>Object lanelet filter</li> <li>Object position filter</li> </ul>"},{"location":"perception/detected_object_validation/object-lanelet-filter/","title":"object_lanelet_filter","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#purpose","title":"Purpose","text":"<p>The <code>object_lanelet_filter</code> is a node that filters detected object by using vector map. The objects only inside of the vector map will be published.</p>"},{"location":"perception/detected_object_validation/object-lanelet-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#input","title":"Input","text":"Name Type Description <code>input/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> vector map <code>input/object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> input detected objects"},{"location":"perception/detected_object_validation/object-lanelet-filter/#output","title":"Output","text":"Name Type Description <code>output/object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> filtered detected objects"},{"location":"perception/detected_object_validation/object-lanelet-filter/#parameters","title":"Parameters","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>filter_target_label.UNKNOWN</code> bool false If true, unknown objects are filtered. <code>filter_target_label.CAR</code> bool false If true, car objects are filtered. <code>filter_target_label.TRUCK</code> bool false If true, truck objects are filtered. <code>filter_target_label.BUS</code> bool false If true, bus objects are filtered. <code>filter_target_label.TRAILER</code> bool false If true, trailer objects are filtered. <code>filter_target_label.MOTORCYCLE</code> bool false If true, motorcycle objects are filtered. <code>filter_target_label.BICYCLE</code> bool false If true, bicycle objects are filtered. <code>filter_target_label.PEDESTRIAN</code> bool false If true, pedestrian objects are filtered."},{"location":"perception/detected_object_validation/object-lanelet-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Filtering is performed based on the shape polygon of the object.</p>"},{"location":"perception/detected_object_validation/object-lanelet-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/detected_object_validation/object-lanelet-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/detected_object_validation/object-position-filter/","title":"object_position_filter","text":""},{"location":"perception/detected_object_validation/object-position-filter/#purpose","title":"Purpose","text":"<p>The <code>object_position_filter</code> is a node that filters detected object based on x,y values. The objects only inside of the x, y bound will be published.</p>"},{"location":"perception/detected_object_validation/object-position-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/detected_object_validation/object-position-filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/detected_object_validation/object-position-filter/#input","title":"Input","text":"Name Type Description <code>input/object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> input detected objects"},{"location":"perception/detected_object_validation/object-position-filter/#output","title":"Output","text":"Name Type Description <code>output/object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> filtered detected objects"},{"location":"perception/detected_object_validation/object-position-filter/#parameters","title":"Parameters","text":""},{"location":"perception/detected_object_validation/object-position-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>filter_target_label.UNKNOWN</code> bool false If true, unknown objects are filtered. <code>filter_target_label.CAR</code> bool false If true, car objects are filtered. <code>filter_target_label.TRUCK</code> bool false If true, truck objects are filtered. <code>filter_target_label.BUS</code> bool false If true, bus objects are filtered. <code>filter_target_label.TRAILER</code> bool false If true, trailer objects are filtered. <code>filter_target_label.MOTORCYCLE</code> bool false If true, motorcycle objects are filtered. <code>filter_target_label.BICYCLE</code> bool false If true, bicycle objects are filtered. <code>filter_target_label.PEDESTRIAN</code> bool false If true, pedestrian objects are filtered. <code>upper_bound_x</code> float 100.00 Bound for filtering. Only used if filter_by_xy_position is true <code>lower_bound_x</code> float 0.00 Bound for filtering. Only used if filter_by_xy_position is true <code>upper_bound_y</code> float 50.00 Bound for filtering. Only used if filter_by_xy_position is true <code>lower_bound_y</code> float -50.00 Bound for filtering. Only used if filter_by_xy_position is true"},{"location":"perception/detected_object_validation/object-position-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Filtering is performed based on the center position of the object.</p>"},{"location":"perception/detected_object_validation/object-position-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/detected_object_validation/object-position-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/detected_object_validation/object-position-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/detected_object_validation/object-position-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/","title":"obstacle pointcloud based validator","text":""},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>If the number of obstacle point groups in the DetectedObjects is small, it is considered a false positive and removed. The obstacle point cloud can be a point cloud after compare map filtering or a ground filtered point cloud.</p> <p></p> <p>In the debug image above, the red DetectedObject is the validated object. The blue object is the deleted object.</p>"},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/#input","title":"Input","text":"Name Type Description <code>~/input/detected_objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> DetectedObjects <code>~/input/obstacle_pointcloud</code> <code>sensor_msgs::msg::PointCloud2</code> Obstacle point cloud of dynamic objects"},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/#output","title":"Output","text":"Name Type Description <code>~/output/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> validated DetectedObjects"},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/#parameters","title":"Parameters","text":"Name Type Description <code>min_pointcloud_num</code> float Threshold for the minimum number of obstacle point clouds in DetectedObjects <code>enable_debugger</code> bool Whether to create debug topics or not?"},{"location":"perception/detected_object_validation/obstacle-pointcloud-based-validator/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Currently, only represented objects as BoundingBox or Cylinder are supported.</p>"},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/","title":"occupancy grid based validator","text":""},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Compare the occupancy grid map with the DetectedObject, and if a larger percentage of obstacles are in freespace, delete them.</p> <p></p> <p>Basically, it takes an occupancy grid map as input and generates a binary image of freespace or other.</p> <p>A mask image is generated for each DetectedObject and the average value (percentage) in the mask image is calculated. If the percentage is low, it is deleted.</p>"},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/#input","title":"Input","text":"Name Type Description <code>~/input/detected_objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> DetectedObjects <code>~/input/occupancy_grid_map</code> <code>nav_msgs::msg::OccupancyGrid</code> OccupancyGrid with no time series calculation is preferred."},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/#output","title":"Output","text":"Name Type Description <code>~/output/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> validated DetectedObjects"},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/#parameters","title":"Parameters","text":"Name Type Description <code>mean_threshold</code> float The percentage threshold of allowed non-freespace. <code>enable_debug</code> bool Whether to display debug images or not?"},{"location":"perception/detected_object_validation/occupancy-grid-based-validator/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Currently, only vehicle represented as BoundingBox are supported.</p>"},{"location":"perception/detection_by_tracker/","title":"detection_by_tracker","text":""},{"location":"perception/detection_by_tracker/#purpose","title":"Purpose","text":"<p>This package feeds back the tracked objects to the detection module to keep it stable and keep detecting objects. </p> <p>The detection by tracker takes as input an unknown object containing a cluster of points and a tracker. The unknown object is optimized to fit the size of the tracker so that it can continue to be detected.</p>"},{"location":"perception/detection_by_tracker/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The detection by tracker receives an unknown object containing a point cloud and a tracker, where the unknown object is mainly shape-fitted using euclidean clustering. Shape fitting using euclidean clustering and other methods has a problem called under segmentation and over segmentation.</p> <p> Adapted from [3]</p> <p>Simply looking at the overlap between the unknown object and the tracker does not work. We need to take measures for under segmentation and over segmentation.</p>"},{"location":"perception/detection_by_tracker/#policy-for-dealing-with-over-segmentation","title":"Policy for dealing with over segmentation","text":"<ol> <li>Merge the unknown objects in the tracker as a single object.</li> <li>Shape fitting using the tracker information such as angle and size as reference information.</li> </ol>"},{"location":"perception/detection_by_tracker/#policy-for-dealing-with-under-segmentation","title":"Policy for dealing with under segmentation","text":"<ol> <li>Compare the tracker and unknown objects, and determine that those with large recall and small precision are under segmented objects.</li> <li>In order to divide the cluster of under segmented objects, it iterate the parameters to make small clusters.</li> <li>Adjust the parameters several times and adopt the one with the highest IoU.</li> </ol>"},{"location":"perception/detection_by_tracker/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/detection_by_tracker/#input","title":"Input","text":"Name Type Description <code>~/input/initial_objects</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> unknown objects <code>~/input/tracked_objects</code> <code>tier4_perception_msgs::msg::TrackedObjects</code> trackers"},{"location":"perception/detection_by_tracker/#output","title":"Output","text":"Name Type Description <code>~/output</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> objects"},{"location":"perception/detection_by_tracker/#parameters","title":"Parameters","text":""},{"location":"perception/detection_by_tracker/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/detection_by_tracker/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/detection_by_tracker/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/detection_by_tracker/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>[1] M. Himmelsbach, et al. \"Tracking and classification of arbitrary objects with bottom-up/top-down detection.\" (2012).</p> <p>[2] Arya Senna Abdul Rachman, Arya. \"3D-LIDAR Multi Object Tracking for Autonomous Driving: Multi-target Detection and Tracking under Urban Road Uncertainties.\" (2017).</p> <p>[3] David Held, et al. \"A Probabilistic Framework for Real-time 3D Segmentation using Spatial, Temporal, and Semantic Cues.\" (2016).</p>"},{"location":"perception/detection_by_tracker/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/elevation_map_loader/","title":"elevation_map_loader","text":""},{"location":"perception/elevation_map_loader/#purpose","title":"Purpose","text":"<p>This package provides elevation map for compare_map_segmentation.</p>"},{"location":"perception/elevation_map_loader/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Generate elevation_map from subscribed pointcloud_map and vector_map and publish it. Save the generated elevation_map locally and load it from next time.</p> <p>The elevation value of each cell is the average value of z of the points of the lowest cluster. Cells with No elevation value can be inpainted using the values of neighboring cells.</p> <p> </p>"},{"location":"perception/elevation_map_loader/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/elevation_map_loader/#input","title":"Input","text":"Name Type Description <code>input/pointcloud_map</code> <code>sensor_msgs::msg::PointCloud2</code> The point cloud map <code>input/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> (Optional) The binary data of lanelet2 map"},{"location":"perception/elevation_map_loader/#output","title":"Output","text":"Name Type Description <code>output/elevation_map</code> <code>grid_map_msgs::msg::GridMap</code> The elevation map <code>output/elevation_map_cloud</code> <code>sensor_msgs::msg::PointCloud2</code> (Optional) The point cloud generated from the value of elevation map"},{"location":"perception/elevation_map_loader/#parameters","title":"Parameters","text":""},{"location":"perception/elevation_map_loader/#node-parameters","title":"Node parameters","text":"Name Type Description Default value map_layer_name std::string elevation_map layer name elevation param_file_path std::string GridMap parameters config path_default elevation_map_file_path std::string elevation_map file (bag2) path_default map_frame std::string map_frame when loading elevation_map file map use_inpaint bool Whether to inpaint empty cells true inpaint_radius float Radius of a circular neighborhood of each point inpainted that is considered by the algorithm [m] 0.3 use_elevation_map_cloud_publisher bool Whether to publish <code>output/elevation_map_cloud</code> false use_lane_filter bool Whether to filter elevation_map with vector_map false lane_margin float Value of how much to expand the range of vector_map [m] 0.5 lane_height_diff_thresh float Only point clouds in the height range of this value from vector_map are used to generate elevation_map [m] 1.0 lane_filter_voxel_size_x float Voxel size x for calculating point clouds in vector_map [m] 0.04 lane_filter_voxel_size_y float Voxel size y for calculating point clouds in vector_map [m] 0.04 lane_filter_voxel_size_z float Voxel size z for calculating point clouds in vector_map [m] 0.04"},{"location":"perception/elevation_map_loader/#gridmap-parameters","title":"GridMap parameters","text":"<p>The parameters are described on <code>config/elevation_map_parameters.yaml</code>.</p>"},{"location":"perception/elevation_map_loader/#general-parameters","title":"General parameters","text":"Name Type Description Default value pcl_grid_map_extraction/num_processing_threads int Number of threads for processing grid map cells. Filtering of the raw input point cloud is not parallelized. 12"},{"location":"perception/elevation_map_loader/#grid-map-parameters","title":"Grid map parameters","text":"<p>See: https://github.com/ANYbotics/grid_map/tree/ros2/grid_map_pcl</p> <p>Resulting grid map parameters.</p> Name Type Description Default value pcl_grid_map_extraction/grid_map/min_num_points_per_cell int Minimum number of points in the point cloud that have to fall within any of the grid map cells. Otherwise the cell elevation will be set to NaN. 3 pcl_grid_map_extraction/grid_map/resolution float Resolution of the grid map. Width and length are computed automatically. 0.3 pcl_grid_map_extraction/grid_map/height_type int The parameter that determine the elevation of a cell <code>0: Smallest value among the average values of each cluster</code>, <code>1: Mean value of the cluster with the most points</code> 1 pcl_grid_map_extraction/grid_map/height_thresh float Height range from the smallest cluster (Only for height_type 1) 1.0"},{"location":"perception/elevation_map_loader/#point-cloud-pre-processing-parameters","title":"Point Cloud Pre-processing Parameters","text":""},{"location":"perception/elevation_map_loader/#rigid-body-transform-parameters","title":"Rigid body transform parameters","text":"<p>Rigid body transform that is applied to the point cloud before computing elevation.</p> Name Type Description Default value pcl_grid_map_extraction/cloud_transform/translation float Translation (xyz) that is applied to the input point cloud before computing elevation. 0.0 pcl_grid_map_extraction/cloud_transform/rotation float Rotation (intrinsic rotation, convention X-Y'-Z'') that is applied to the input point cloud before computing elevation. 0.0"},{"location":"perception/elevation_map_loader/#cluster-extraction-parameters","title":"Cluster extraction parameters","text":"<p>Cluster extraction is based on pcl algorithms. See https://pointclouds.org/documentation/tutorials/cluster_extraction.html for more details.</p> Name Type Description Default value pcl_grid_map_extraction/cluster_extraction/cluster_tolerance float Distance between points below which they will still be considered part of one cluster. 0.2 pcl_grid_map_extraction/cluster_extraction/min_num_points int Min number of points that a cluster needs to have (otherwise it will be discarded). 3 pcl_grid_map_extraction/cluster_extraction/max_num_points int Max number of points that a cluster can have (otherwise it will be discarded). 1000000"},{"location":"perception/elevation_map_loader/#outlier-removal-parameters","title":"Outlier removal parameters","text":"<p>See https://pointclouds.org/documentation/tutorials/statistical_outlier.html for more explanation on outlier removal.</p> Name Type Description Default value pcl_grid_map_extraction/outlier_removal/is_remove_outliers float Whether to perform statistical outlier removal. false pcl_grid_map_extraction/outlier_removal/mean_K float Number of neighbours to analyze for estimating statistics of a point. 10 pcl_grid_map_extraction/outlier_removal/stddev_threshold float Number of standard deviations under which points are considered to be inliers. 1.0"},{"location":"perception/elevation_map_loader/#subsampling-parameters","title":"Subsampling parameters","text":"<p>See https://pointclouds.org/documentation/tutorials/voxel_grid.html for more explanation on point cloud downsampling.</p> Name Type Description Default value pcl_grid_map_extraction/downsampling/is_downsample_cloud bool Whether to perform downsampling or not. false pcl_grid_map_extraction/downsampling/voxel_size float Voxel sizes (xyz) in meters. 0.02"},{"location":"perception/euclidean_cluster/","title":"euclidean_cluster","text":""},{"location":"perception/euclidean_cluster/#purpose","title":"Purpose","text":"<p>euclidean_cluster is a package for clustering points into smaller parts to classify objects.</p> <p>This package has two clustering methods: <code>euclidean_cluster</code> and <code>voxel_grid_based_euclidean_cluster</code>.</p>"},{"location":"perception/euclidean_cluster/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/euclidean_cluster/#euclidean_cluster_1","title":"euclidean_cluster","text":"<p><code>pcl::EuclideanClusterExtraction</code> is applied to points. See official document for details.</p>"},{"location":"perception/euclidean_cluster/#voxel_grid_based_euclidean_cluster","title":"voxel_grid_based_euclidean_cluster","text":"<ol> <li>A centroid in each voxel is calculated by <code>pcl::VoxelGrid</code>.</li> <li>The centroids are clustered by <code>pcl::EuclideanClusterExtraction</code>.</li> <li>The input points are clustered based on the clustered centroids.</li> </ol>"},{"location":"perception/euclidean_cluster/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/euclidean_cluster/#input","title":"Input","text":"Name Type Description <code>input</code> <code>sensor_msgs::msg::PointCloud2</code> input pointcloud"},{"location":"perception/euclidean_cluster/#output","title":"Output","text":"Name Type Description <code>output</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> cluster pointcloud <code>debug/clusters</code> <code>sensor_msgs::msg::PointCloud2</code> colored cluster pointcloud for visualization"},{"location":"perception/euclidean_cluster/#parameters","title":"Parameters","text":""},{"location":"perception/euclidean_cluster/#core-parameters","title":"Core Parameters","text":""},{"location":"perception/euclidean_cluster/#euclidean_cluster_2","title":"euclidean_cluster","text":"Name Type Description <code>use_height</code> bool use point.z for clustering <code>min_cluster_size</code> int the minimum number of points that a cluster needs to contain in order to be considered valid <code>max_cluster_size</code> int the maximum number of points that a cluster needs to contain in order to be considered valid <code>tolerance</code> float the spatial cluster tolerance as a measure in the L2 Euclidean space"},{"location":"perception/euclidean_cluster/#voxel_grid_based_euclidean_cluster_1","title":"voxel_grid_based_euclidean_cluster","text":"Name Type Description <code>use_height</code> bool use point.z for clustering <code>min_cluster_size</code> int the minimum number of points that a cluster needs to contain in order to be considered valid <code>max_cluster_size</code> int the maximum number of points that a cluster needs to contain in order to be considered valid <code>tolerance</code> float the spatial cluster tolerance as a measure in the L2 Euclidean space <code>voxel_leaf_size</code> float the voxel leaf size of x and y <code>min_points_number_per_voxel</code> int the minimum number of points for a voxel"},{"location":"perception/euclidean_cluster/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/euclidean_cluster/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/euclidean_cluster/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/euclidean_cluster/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/euclidean_cluster/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":"<p>The <code>use_height</code> option of <code>voxel_grid_based_euclidean_cluster</code> isn't implemented yet.</p>"},{"location":"perception/front_vehicle_velocity_estimator/","title":"front_vehicle_velocity_estimator","text":"<p>This package contains a front vehicle velocity estimation for offline perception module analysis. This package can:</p> <ul> <li>Attach velocity to 3D detections from velocity estimation with LiDAR pointcloud.</li> </ul>"},{"location":"perception/front_vehicle_velocity_estimator/#algorithm","title":"Algorithm","text":"<ul> <li>Processing flow<ol> <li>Choose front vehicle from front area objects.</li> <li>Choose nearest neighbor point within front vehicle.</li> <li>Estimate velocity of front vehicle by using the differentiated value from time series of nearest neighbor point positions.</li> <li>Compensate ego vehicle twist</li> </ol> </li> </ul>"},{"location":"perception/front_vehicle_velocity_estimator/#input","title":"Input","text":"Name Type Description <code>~/input/objects</code> autoware_auto_perception_msgs/msg/DetectedObject.msg 3D detected objects. <code>~/input/pointcloud</code> sensor_msgs/msg/PointCloud2.msg LiDAR pointcloud. <code>~/input/odometry</code> nav_msgs::msg::Odometry.msg Odometry data."},{"location":"perception/front_vehicle_velocity_estimator/#output","title":"Output","text":"Name Type Description <code>~/output/objects</code> autoware_auto_perception_msgs/msg/DetectedObjects.msg 3D detected object with twist. <code>~/debug/nearest_neighbor_pointcloud</code> sensor_msgs/msg/PointCloud2.msg The pointcloud msg of nearest neighbor point."},{"location":"perception/front_vehicle_velocity_estimator/#node-parameter","title":"Node parameter","text":"Name Type Description Default value <code>update_rate_hz</code> double The update rate [hz]. 10.0"},{"location":"perception/front_vehicle_velocity_estimator/#core-parameter","title":"Core parameter","text":"Name Type Description Default value <code>moving_average_num</code> int The moving average number for velocity estimation. 1 <code>threshold_pointcloud_z_high</code> float The threshold for z position value of point when choosing nearest neighbor point within front vehicle [m]. If z &gt; <code>threshold_pointcloud_z_high</code>, the point is considered to noise. 1.0f <code>threshold_pointcloud_z_low</code> float The threshold for z position value of point when choosing nearest neighbor point within front vehicle [m]. If z &lt; <code>threshold_pointcloud_z_low</code>, the point is considered to noise like ground. 0.6f <code>threshold_relative_velocity</code> double The threshold for min and max of estimated relative velocity (v_{re}) [m/s]. If v_{re}v_{re} &lt; - <code>threshold_relative_velocity</code> , then v_{re}v_{re} = - <code>threshold_relative_velocity</code>. If v_{re}v_{re} &gt; <code>threshold_relative_velocity</code>, then v_{re}v_{re} = <code>threshold_relative_velocity</code>. 10.0 <code>threshold_absolute_velocity</code> double The threshold for max of estimated absolute velocity (v_{ae}v_{ae}) [m/s]. If v_{ae}v_{ae} &gt; <code>threshold_absolute_velocity</code>, then v_{ae}v_{ae} = <code>threshold_absolute_velocity</code>. 20.0"},{"location":"perception/ground_segmentation/","title":"ground_segmentation","text":""},{"location":"perception/ground_segmentation/#purpose","title":"Purpose","text":"<p>The <code>ground_segmentation</code> is a node that remove the ground points from the input pointcloud.</p>"},{"location":"perception/ground_segmentation/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Detail description of each ground segmentation algorithm is in the following links.</p> Filter Name Description Detail ray_ground_filter A method of removing the ground based on the geometrical relationship between points lined up on radiation link scan_ground_filter Almost the same method as <code>ray_ground_filter</code>, but with slightly improved performance link ransac_ground_filter A method of removing the ground by approximating the ground to a plane link"},{"location":"perception/ground_segmentation/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/ground_segmentation/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/indices</code> <code>pcl_msgs::msg::Indices</code> reference indices"},{"location":"perception/ground_segmentation/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"perception/ground_segmentation/#parameters","title":"Parameters","text":""},{"location":"perception/ground_segmentation/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>input_frame</code> string \" \" input frame id <code>output_frame</code> string \" \" output frame id <code>max_queue_size</code> int 5 max queue size of input/output topics <code>use_indices</code> bool false flag to use pointcloud indices <code>latched_indices</code> bool false flag to latch pointcloud indices <code>approximate_sync</code> bool false flag to use approximate sync option"},{"location":"perception/ground_segmentation/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p><code>pointcloud_preprocessor::Filter</code> is implemented based on pcl_perception [1] because of this issue.</p>"},{"location":"perception/ground_segmentation/#referencesexternal-links","title":"References/External links","text":"<p>[1] https://github.com/ros-perception/perception_pcl/blob/ros2/pcl_ros/src/pcl_ros/filters/filter.cpp</p>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/","title":"RANSAC Ground Filter","text":""},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#purpose","title":"Purpose","text":"<p>The purpose of this node is that remove the ground points from the input pointcloud.</p>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Apply the input points to the plane, and set the points at a certain distance from the plane as points other than the ground. Normally, whn using this method, the input points is filtered so that it is almost flat before use. Since the drivable area is often flat, there are methods such as filtering by lane.</p>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#parameters","title":"Parameters","text":""},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>base_frame</code> string base_link frame <code>unit_axis</code> string The axis which we need to search ground plane <code>max_iterations</code> int The maximum number of iterations <code>outlier_threshold</code> double The distance threshold to the model [m] <code>plane_slope_threshold</code> double The slope threshold to prevent mis-fitting [deg] <code>voxel_size_x</code> double voxel size x [m] <code>voxel_size_y</code> double voxel size y [m] <code>voxel_size_z</code> double voxel size z [m] <code>height_threshold</code> double The height threshold from ground plane for no ground points [m] <code>debug</code> bool whether to output debug information"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>This method can't handle slopes.</li> <li>The input points is filtered so that it is almost flat.</li> </ul>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#referencesexternal-links","title":"References/External links","text":"<p>https://pcl.readthedocs.io/projects/tutorials/en/latest/planar_segmentation.html</p>"},{"location":"perception/ground_segmentation/docs/ransac-ground-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/ground_segmentation/docs/ray-ground-filter/","title":"Ray Ground Filter","text":""},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#purpose","title":"Purpose","text":"<p>The purpose of this node is that remove the ground points from the input pointcloud.</p>"},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The points is separated radially (Ray), and the ground is classified for each Ray sequentially from the point close to ego-vehicle based on the geometric information such as the distance and angle between the points.</p> <p></p>"},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#parameters","title":"Parameters","text":""},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>input_frame</code> string frame id of input pointcloud <code>output_frame</code> string frame id of output pointcloud <code>general_max_slope</code> double The triangle created by <code>general_max_slope</code> is called the global cone. If the point is outside the global cone, it is judged to be a point that is no on the ground <code>initial_max_slope</code> double Generally, the point where the object first hits is far from ego-vehicle because of sensor blind spot, so resolution is different from that point and thereafter, so this parameter exists to set a separate <code>local_max_slope</code> <code>local_max_slope</code> double The triangle created by <code>local_max_slope</code> is called the local cone. This parameter for classification based on the continuity of points <code>min_height_threshold</code> double This parameter is used instead of <code>height_threshold</code> because it's difficult to determine continuity in the local cone when the points are too close to each other. <code>radial_divider_angle</code> double The angle of ray <code>concentric_divider_distance</code> double Only check points which radius is larger than <code>concentric_divider_distance</code> <code>reclass_distance_threshold</code> double To check if point is to far from previous one, if so classify again <code>min_x</code> double The parameter to set vehicle footprint manually <code>max_x</code> double The parameter to set vehicle footprint manually <code>min_y</code> double The parameter to set vehicle footprint manually <code>max_y</code> double The parameter to set vehicle footprint manually"},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The input_frame is set as parameter but it must be fixed as base_link for the current algorithm.</p>"},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/ground_segmentation/docs/ray-ground-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/ground_segmentation/docs/scan-ground-filter/","title":"Scan Ground Filter","text":""},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#purpose","title":"Purpose","text":"<p>The purpose of this node is that remove the ground points from the input pointcloud.</p>"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>This algorithm works by following steps,</p> <ol> <li>Divide whole pointclouds into groups by horizontal angle and sort by xy-distance.</li> <li>Divide sorted pointclouds of each ray into grids</li> <li>Check the xy distance to previous pointcloud, if the distance is large and previous pointcloud is \"no ground\" and the height level of current point greater than previous point, the current pointcloud is classified as no ground.</li> <li>Check vertical angle of the point compared with previous ground grid</li> <li>Check the height of the point compared with predicted ground level</li> <li>If vertical angle is greater than local_slope_max and related height to predicted ground level is greater than \"non ground height threshold\", the point is classified as \"non ground\"</li> <li>If the vertical angle is in range of [-local_slope_max, local_slope_max] or related height to predicted ground level is smaller than non_ground_height_threshold, the point is classified as \"ground\"</li> <li>If the vertical angle is lower than -local_slope_max or the related height to ground level is greater than detection_range_z_max, the point will be classified as out of range</li> </ol>"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#parameters","title":"Parameters","text":""},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>input_frame</code> string \"base_link\" frame id of input pointcloud <code>output_frame</code> string \"base_link\" frame id of output pointcloud <code>global_slope_max_angle_deg</code> double 8.0 The global angle to classify as the ground or object [deg] <code>local_slope_max_angle_deg</code> double 10.0 The local angle to classify as the ground or object [deg] <code>radial_divider_angle_deg</code> double 1.0 The angle which divide the whole pointcloud to sliced group [deg] <code>split_points_distance_tolerance</code> double 0.2 The xy-distance threshold to to distinguishing far and near [m] <code>split_height_distance</code> double 0.2 The height threshold to distinguishing far and near [m] <code>use_virtual_ground_point</code> bool true whether to use the ground center of front wheels as the virtual ground point. <code>detection_range_z_max</code> float 2.5 Maximum height of detection range [m], applied only for elevation_grid_mode <code>center_pcl_shift</code> float 0.0 The x-axis offset of addition LiDARs from vehicle center of mass [m],  recommended to use only for additional LiDARs in elevation_grid_mode <code>non_ground_height_threshold</code> float 0.2 Height threshold of non ground objects [m], applied only for elevation_grid_mode <code>grid_mode_switch_radius</code> float 20.0 The distance where grid division mode change from by distance to by vertical angle [m], applied only for elevation_grid_mode <code>grid_size_m</code> float 0.5 The first grid size [m], applied only for elevation_grid_mode <code>gnd_grid_buffer_size</code> uint16 4 Number of grids using to estimate local ground slope, applied only for elevation_grid_mode <code>low_priority_region_x</code> float -20.0 The non-zero x threshold in back side from which small objects detection is low priority [m] <code>elevation_grid_mode</code> bool true Elevation grid scan mode option"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The input_frame is set as parameter but it must be fixed as base_link for the current algorithm.</p>"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>The elevation grid idea is referred from \"Shen Z, Liang H, Lin L, Wang Z, Huang W, Yu J. Fast Ground Segmentation for 3D LiDAR Point Cloud Based on Jump-Convolution-Process. Remote Sensing. 2021; 13(16):3239. https://doi.org/10.3390/rs13163239\"</p>"},{"location":"perception/ground_segmentation/docs/scan-ground-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":"<ul> <li>Horizontal check for classification is not implemented yet.</li> <li>Output ground visibility for diagnostic is not implemented yet.</li> </ul>"},{"location":"perception/heatmap_visualizer/","title":"heatmap_visualizer","text":""},{"location":"perception/heatmap_visualizer/#purpose","title":"Purpose","text":"<p>heatmap_visualizer is a package for visualizing heatmap of detected 3D objects' positions on the BEV space.</p> <p>This package is used for qualitative evaluation and trend analysis of the detector, it means, for instance, the heatmap shows \"This detector performs good for near around of our vehicle, but far is bad\".</p>"},{"location":"perception/heatmap_visualizer/#how-to-run","title":"How to run","text":"<pre><code>ros2 launch heatmap_visualizer heatmap_visualizer.launch.xml input/objects:=&lt;DETECTED_OBJECTS_TOPIC&gt;\n</code></pre>"},{"location":"perception/heatmap_visualizer/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>In this implementation, create heatmap of the center position of detected objects for each classes, for instance, CAR, PEDESTRIAN, etc, and publish them as occupancy grid maps.</p> <p></p> <p>In the above figure, the pink represents high detection frequency area and blue one is low, or black represents there is no detection.</p> <p></p> <p>As inner-workings, add center positions of detected objects to index of each corresponding grid map cell in a buffer. The created heatmap will be published by each specific frame, which can be specified with <code>frame_count</code>. Note that the buffer to be add the positions is not reset per publishing. When publishing, firstly these values are normalized to [0, 1] using maximum and minimum values in the buffer. Secondly, they are scaled to integer in [0, 100] because <code>nav_msgs::msg::OccupancyGrid</code> only allow the value in [0, 100].</p>"},{"location":"perception/heatmap_visualizer/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/heatmap_visualizer/#input","title":"Input","text":"Name Type Description <code>~/input/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects"},{"location":"perception/heatmap_visualizer/#output","title":"Output","text":"Name Type Description <code>~/output/objects/&lt;CLASS_NAME&gt;</code> <code>nav_msgs::msg::OccupancyGrid</code> visualized heatmap"},{"location":"perception/heatmap_visualizer/#parameters","title":"Parameters","text":""},{"location":"perception/heatmap_visualizer/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>frame_count</code> int <code>50</code> The number of frames to publish heatmap <code>map_frame</code> string <code>base_link</code> the frame of heatmap to be respected <code>map_length</code> float <code>200.0</code> the length of map in meter <code>map_resolution</code> float <code>0.8</code> the resolution of map <code>use_confidence</code> bool <code>false</code> the flag if use confidence score as heatmap value <code>rename_car_to_truck_and_bus</code> bool <code>true</code> the flag if rename car to truck or bus"},{"location":"perception/heatmap_visualizer/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The heatmap depends on the data to be used, so if the objects in data are sparse the heatmap will be sparse.</p>"},{"location":"perception/heatmap_visualizer/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/heatmap_visualizer/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/heatmap_visualizer/#referencesexternal-links","title":"References/External links","text":""},{"location":"perception/heatmap_visualizer/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/image_projection_based_fusion/","title":"image_projection_based_fusion","text":""},{"location":"perception/image_projection_based_fusion/#purpose","title":"Purpose","text":"<p>The <code>image_projection_based_fusion</code> is a package to fuse detected obstacles (bounding box or segmentation) from image and 3d pointcloud or obstacles (bounding box, cluster or segmentation).</p>"},{"location":"perception/image_projection_based_fusion/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Detail description of each fusion's algorithm is in the following links.</p> Fusion Name Description Detail roi_cluster_fusion Overwrite a classification label of clusters by that of ROIs from a 2D object detector. link roi_detected_object_fusion Overwrite a classification label of detected objects by that of ROIs from a 2D object detector. link"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/","title":"pointpainting_fusion","text":""},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#purpose","title":"Purpose","text":"<p>The <code>pointpainting_fusion</code> is a package for utilizing the class information detected by a 2D object detection in 3D object detection.</p>"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The lidar points are projected onto the output of an image-only 2d object detection network and the class scores are appended to each point. The painted point cloud can then be fed to the centerpoint network.</p> <p></p>"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#input","title":"Input","text":"Name Type Description <code>input</code> <code>sensor_msgs::msg::PointCloud2</code> pointcloud <code>input/camera_info[0-7]</code> <code>sensor_msgs::msg::CameraInfo</code> camera information to project 3d points onto image planes <code>input/rois[0-7]</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> ROIs from each image <code>input/image_raw[0-7]</code> <code>sensor_msgs::msg::Image</code> images for visualization"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#output","title":"Output","text":"Name Type Description <code>output</code> <code>sensor_msgs::msg::PointCloud2</code> painted pointcloud <code>~/output/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects <code>~/debug/image_raw[0-7]</code> <code>sensor_msgs::msg::Image</code> images for visualization"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#parameters","title":"Parameters","text":""},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>score_threshold</code> float <code>0.4</code> detected objects with score less than threshold are ignored <code>densification_world_frame_id</code> string <code>map</code> the world frame id to fuse multi-frame pointcloud <code>densification_num_past_frames</code> int <code>0</code> the number of past frames to fuse with the current frame <code>trt_precision</code> string <code>fp16</code> TensorRT inference precision: <code>fp32</code> or <code>fp16</code> <code>encoder_onnx_path</code> string <code>\"\"</code> path to VoxelFeatureEncoder ONNX file <code>encoder_engine_path</code> string <code>\"\"</code> path to VoxelFeatureEncoder TensorRT Engine file <code>head_onnx_path</code> string <code>\"\"</code> path to DetectionHead ONNX file <code>head_engine_path</code> string <code>\"\"</code> path to DetectionHead TensorRT Engine file"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>The multi-frame painting is not implemented yet.</li> </ul>"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#referencesexternal-links","title":"References/External links","text":"<p>[1] Vora, Sourabh, et al. \"PointPainting: Sequential fusion for 3d object detection.\" Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2020.</p> <p>[2] CVPR'20 Workshop on Scalability in Autonomous Driving] Waymo Open Dataset Challenge: https://youtu.be/9g9GsI33ol8?t=535 Ding, Zhuangzhuang, et al. \"1st Place Solution for Waymo Open Dataset Challenge--3D Detection and Domain Adaptation.\" arXiv preprint arXiv:2006.15505 (2020).</p>"},{"location":"perception/image_projection_based_fusion/docs/pointpainting-fusion/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/","title":"roi_cluster_fusion","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#purpose","title":"Purpose","text":"<p>The <code>roi_cluster_fusion</code> is a package for filtering clusters that are less likely to be objects and overwriting labels of clusters with that of Region Of Interests (ROIs) by a 2D object detector.</p>"},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The clusters are projected onto image planes, and then if the ROIs of clusters and ROIs by a detector are overlapped, the labels of clusters are overwritten with that of ROIs by detector. Intersection over Union (IoU) is used to determine if there are overlaps between them.</p> <p></p>"},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#input","title":"Input","text":"Name Type Description <code>input</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> clustered pointcloud <code>input/camera_info[0-7]</code> <code>sensor_msgs::msg::CameraInfo</code> camera information to project 3d points onto image planes <code>input/rois[0-7]</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> ROIs from each image <code>input/image_raw[0-7]</code> <code>sensor_msgs::msg::Image</code> images for visualization"},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#output","title":"Output","text":"Name Type Description <code>output</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> labeled cluster pointcloud <code>~/debug/image_raw[0-7]</code> <code>sensor_msgs::msg::Image</code> images for visualization"},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#parameters","title":"Parameters","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>use_iou_x</code> bool calculate IoU only along x-axis <code>use_iou_y</code> bool calculate IoU only along y-axis <code>use_iou</code> bool calculate IoU both along x-axis and y-axis <code>use_cluster_semantic_type</code> bool if <code>false</code>, the labels of clusters are overwritten by <code>UNKNOWN</code> before fusion <code>iou_threshold</code> float the IoU threshold to overwrite a label of clusters with a label of roi <code>rois_number</code> int the number of input rois <code>debug_mode</code> bool If <code>true</code>, subscribe and publish images for visualization."},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-cluster-fusion/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/","title":"roi_detected_object_fusion","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#purpose","title":"Purpose","text":"<p>The <code>roi_detected_object_fusion</code> is a package to overwrite labels of detected objects with that of Region Of Interests (ROIs) by a 2D object detector.</p>"},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>In what follows, we describe the algorithm utilized by <code>roi_detected_object_fusion</code> (the meaning of each parameter can be found in the <code>Parameters</code> section):</p> <ol> <li>If the <code>existence_probability</code> of a detected object is greater than the threshold, it is accepted without any further processing and published in <code>output</code>.</li> <li>The remaining detected objects are projected onto image planes, and if the resulting ROIs overlap with the ones from the 2D detector, they are published as fused objects in <code>output</code>. The Intersection over Union (IoU) is used to determine if there are overlaps between the detections from <code>input</code> and the ROIs from <code>input/rois</code>.</li> </ol> <p>The DetectedObject has three possible shape choices/implementations, where the polygon's vertices for each case are defined as follows:</p> <ul> <li><code>BOUNDING_BOX</code>: The 8 corners of a bounding box.</li> <li><code>CYLINDER</code>: The circle is approximated by a hexagon.</li> <li><code>POLYGON</code>: Not implemented yet.</li> </ul>"},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#input","title":"Input","text":"Name Type Description <code>input</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> input detected objects <code>input/camera_info[0-7]</code> <code>sensor_msgs::msg::CameraInfo</code> camera information to project 3d points onto image planes. <code>input/rois[0-7]</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> ROIs from each image. <code>input/image_raw[0-7]</code> <code>sensor_msgs::msg::Image</code> images for visualization."},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#output","title":"Output","text":"Name Type Description <code>output</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects <code>~/debug/image_raw[0-7]</code> <code>sensor_msgs::msg::Image</code> images for visualization, <code>~/debug/fused_objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> fused detected objects <code>~/debug/ignored_objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> not fused detected objects"},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#parameters","title":"Parameters","text":""},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>rois_number</code> int the number of input rois <code>debug_mode</code> bool If set to <code>true</code>, the node subscribes to the image topic and publishes an image with debug drawings. <code>min_iou_threshold</code> double If the iou between detected objects and rois is greater than <code>min_iou_threshold</code>, the objects are classified as fused. <code>passthrough_lower_bound_probability_threshold</code> double If the <code>existence_probability</code> of a detected object is greater than the threshold, it is published in output. <code>use_roi_probability</code> float If set to <code>true</code>, the algorithm uses <code>existence_probability</code> of ROIs to match with the that of detected objects. <code>roi_probability_threshold</code> double If the <code>existence_probability</code> of ROIs is greater than the threshold, matched detected objects are published in <code>output</code>."},{"location":"perception/image_projection_based_fusion/docs/roi-detected-object-fusion/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p><code>POLYGON</code>, which is a shape of a detected object, isn't supported yet.</p>"},{"location":"perception/lidar_apollo_instance_segmentation/","title":"lidar_apollo_instance_segmentation","text":""},{"location":"perception/lidar_apollo_instance_segmentation/#purpose","title":"Purpose","text":"<p>This node segments 3D pointcloud data from lidar sensors into obstacles, e.g., cars, trucks, bicycles, and pedestrians based on CNN based model and obstacle clustering method.</p>"},{"location":"perception/lidar_apollo_instance_segmentation/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>See the original design by Apollo.</p>"},{"location":"perception/lidar_apollo_instance_segmentation/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/lidar_apollo_instance_segmentation/#input","title":"Input","text":"Name Type Description <code>input/pointcloud</code> <code>sensor_msgs/PointCloud2</code> Pointcloud data from lidar sensors"},{"location":"perception/lidar_apollo_instance_segmentation/#output","title":"Output","text":"Name Type Description <code>output/labeled_clusters</code> <code>tier4_perception_msgs/DetectedObjectsWithFeature</code> Detected objects with labeled pointcloud cluster. <code>debug/instance_pointcloud</code> <code>sensor_msgs/PointCloud2</code> Segmented pointcloud for visualization."},{"location":"perception/lidar_apollo_instance_segmentation/#parameters","title":"Parameters","text":""},{"location":"perception/lidar_apollo_instance_segmentation/#node-parameters","title":"Node Parameters","text":"<p>None</p>"},{"location":"perception/lidar_apollo_instance_segmentation/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>score_threshold</code> double 0.8 If the score of a detected object is lower than this value, the object is ignored. <code>range</code> int 60 Half of the length of feature map sides. [m] <code>width</code> int 640 The grid width of feature map. <code>height</code> int 640 The grid height of feature map. <code>engine_file</code> string \"vls-128.engine\" The name of TensorRT engine file for CNN model. <code>prototxt_file</code> string \"vls-128.prototxt\" The name of prototxt file for CNN model. <code>caffemodel_file</code> string \"vls-128.caffemodel\" The name of caffemodel file for CNN model. <code>use_intensity_feature</code> bool true The flag to use intensity feature of pointcloud. <code>use_constant_feature</code> bool false The flag to use direction and distance feature of pointcloud. <code>target_frame</code> string \"base_link\" Pointcloud data is transformed into this frame. <code>z_offset</code> int 2 z offset from target frame. [m]"},{"location":"perception/lidar_apollo_instance_segmentation/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>There is no training code for CNN model.</p>"},{"location":"perception/lidar_apollo_instance_segmentation/#note","title":"Note","text":"<p>This package makes use of three external codes. The trained files are provided by apollo. The trained files are automatically downloaded when you build.</p> <p>Original URL</p> <ul> <li>VLP-16 :   https://github.com/ApolloAuto/apollo/raw/88bfa5a1acbd20092963d6057f3a922f3939a183/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne16/deploy.caffemodel</li> <li>HDL-64 :   https://github.com/ApolloAuto/apollo/raw/88bfa5a1acbd20092963d6057f3a922f3939a183/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne64/deploy.caffemodel</li> <li>VLS-128 :   https://github.com/ApolloAuto/apollo/raw/91844c80ee4bd0cc838b4de4c625852363c258b5/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne128/deploy.caffemodel</li> </ul> <p>Supported lidars are velodyne 16, 64 and 128, but you can also use velodyne 32 and other lidars with good accuracy.</p> <ol> <li> <p>apollo 3D Obstacle Perception description</p> <pre><code>/******************************************************************************\n* Copyright 2017 The Apollo Authors. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*****************************************************************************/\n</code></pre> </li> <li> <p>tensorRTWrapper :    It is used under the lib directory.</p> <pre><code>MIT License\n\nCopyright (c) 2018 lewes6369\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre> </li> <li> <p>autoware_perception description</p> <pre><code>/*\n* Copyright 2018-2019 Autoware Foundation. All rights reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n</code></pre> </li> </ol>"},{"location":"perception/lidar_apollo_instance_segmentation/#special-thanks","title":"Special thanks","text":"<ul> <li>Apollo Project</li> <li>lewes6369</li> <li>Autoware Foundation</li> <li>Kosuke Takeuchi (TierIV Part timer)</li> </ul>"},{"location":"perception/lidar_apollo_instance_segmentation/lib/","title":"Index","text":""},{"location":"perception/lidar_apollo_instance_segmentation/lib/#note","title":"Note","text":"<p>This library is customized. Original repository : https://github.com/lewes6369/tensorRTWrapper</p> <pre><code>MIT License\n\nCopyright (c) 2018 lewes6369\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"perception/lidar_apollo_segmentation_tvm/design/lidar-segmentation-design/","title":"Macro Syntax Error","text":"<p>Line 1 in Markdown file: Missing end of comment tag <pre><code># lidar_apollo_segmentation_tvm {#lidar-apollo-segmentation-tvm-design}\n</code></pre></p>"},{"location":"perception/lidar_apollo_segmentation_tvm_nodes/design/lidar-segmentation-nodes-design/","title":"Macro Syntax Error","text":"<p>Line 1 in Markdown file: Missing end of comment tag <pre><code># lidar_apollo_segmentation_tvm_nodes {#lidar-apollo-segmentation-tvm-nodes-design}\n</code></pre></p>"},{"location":"perception/lidar_centerpoint/","title":"lidar_centerpoint","text":""},{"location":"perception/lidar_centerpoint/#purpose","title":"Purpose","text":"<p>lidar_centerpoint is a package for detecting dynamic 3D objects.</p>"},{"location":"perception/lidar_centerpoint/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>In this implementation, CenterPoint [1] uses a PointPillars-based [2] network to inference with TensorRT.</p> <p>We trained the models using https://github.com/open-mmlab/mmdetection3d.</p>"},{"location":"perception/lidar_centerpoint/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/lidar_centerpoint/#input","title":"Input","text":"Name Type Description <code>~/input/pointcloud</code> <code>sensor_msgs::msg::PointCloud2</code> input pointcloud"},{"location":"perception/lidar_centerpoint/#output","title":"Output","text":"Name Type Description <code>~/output/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects <code>debug/cyclic_time_ms</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> cyclic time (msg) <code>debug/processing_time_ms</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> processing time (ms)"},{"location":"perception/lidar_centerpoint/#parameters","title":"Parameters","text":""},{"location":"perception/lidar_centerpoint/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>score_threshold</code> float <code>0.4</code> detected objects with score less than threshold are ignored <code>densification_world_frame_id</code> string <code>map</code> the world frame id to fuse multi-frame pointcloud <code>densification_num_past_frames</code> int <code>1</code> the number of past frames to fuse with the current frame <code>trt_precision</code> string <code>fp16</code> TensorRT inference precision: <code>fp32</code> or <code>fp16</code> <code>encoder_onnx_path</code> string <code>\"\"</code> path to VoxelFeatureEncoder ONNX file <code>encoder_engine_path</code> string <code>\"\"</code> path to VoxelFeatureEncoder TensorRT Engine file <code>head_onnx_path</code> string <code>\"\"</code> path to DetectionHead ONNX file <code>head_engine_path</code> string <code>\"\"</code> path to DetectionHead TensorRT Engine file <code>nms_iou_target_class_names</code> list[string] - target classes for IoU-based Non Maximum Suppression <code>nms_iou_search_distance_2d</code> double - If two objects are farther than the value, NMS isn't applied. <code>nms_iou_threshold</code> double - IoU threshold for the IoU-based Non Maximum Suppression"},{"location":"perception/lidar_centerpoint/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>The <code>object.existence_probability</code> is stored the value of classification confidence of a DNN, not probability.</li> </ul>"},{"location":"perception/lidar_centerpoint/#trained-models","title":"Trained Models","text":"<p>You can download the onnx format of trained models by clicking on the links below.</p> <ul> <li>Centerpoint : pts_voxel_encoder_centerpoint.onnx, pts_backbone_neck_head_centerpoint.onnx</li> <li>Centerpoint tiny: pts_voxel_encoder_centerpoint_tiny.onnx, pts_backbone_neck_head_centerpoint_tiny.onnx</li> </ul> <p><code>Centerpoint</code> was trained in <code>nuScenes</code> (~110k lidar frames) [8] and TIER IV's internal database (~11k lidar frames) for 60 epochs. <code>Centerpoint tiny</code> was trained in <code>Argoverse 2</code> (~28k lidar frames) [9] and TIER IV's internal database (~11k lidar frames) for 20 epochs.</p>"},{"location":"perception/lidar_centerpoint/#standalone-inference-and-visualization","title":"Standalone inference and visualization","text":"<p>In addition to its use as a standard ROS node, <code>lidar_centerpoint</code> can also be used to perform inferences in an isolated manner. To do so, execute the following launcher, where <code>pcd_path</code> is the path of the pointcloud to be used for inference.</p> <pre><code>ros2 launch lidar_centerpoint single_inference_lidar_centerpoint.launch.xml pcd_path:=test_pointcloud.pcd detections_path:=test_detections.ply\n</code></pre> <p><code>lidar_centerpoint</code> generates a <code>ply</code> file in the provided <code>detections_path</code>, which contains the detections as triangle meshes. These detections can be visualized by most 3D tools, but we also integrate a visualization UI using <code>Open3D</code> which is launched alongside <code>lidar_centerpoint</code>.</p>"},{"location":"perception/lidar_centerpoint/#changelog","title":"Changelog","text":""},{"location":"perception/lidar_centerpoint/#v1-20220706","title":"v1 (2022/07/06)","text":"Name URLs Description <code>centerpoint</code> pts_voxel_encoder pts_backbone_neck_head There is a single change due to the limitation in the implementation of this package. <code>num_filters=[32, 32]</code> of <code>PillarFeatureNet</code> <code>centerpoint_tiny</code> pts_voxel_encoder pts_backbone_neck_head The same model as <code>default</code> of <code>v0</code>. <p>These changes are compared with this configuration.</p>"},{"location":"perception/lidar_centerpoint/#v0-20211203","title":"v0 (2021/12/03)","text":"Name URLs Description <code>default</code> pts_voxel_encoder pts_backbone_neck_head There are two changes from the original CenterPoint architecture. <code>num_filters=[32]</code> of <code>PillarFeatureNet</code> and <code>ds_layer_strides=[2, 2, 2]</code> of <code>RPN</code>"},{"location":"perception/lidar_centerpoint/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/lidar_centerpoint/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/lidar_centerpoint/#referencesexternal-links","title":"References/External links","text":"<p>[1] Yin, Tianwei, Xingyi Zhou, and Philipp Kr\u00e4henb\u00fchl. \"Center-based 3d object detection and tracking.\" arXiv preprint arXiv:2006.11275 (2020).</p> <p>[2] Lang, Alex H., et al. \"Pointpillars: Fast encoders for object detection from point clouds.\" Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2019.</p> <p>[3] https://github.com/tianweiy/CenterPoint</p> <p>[4] https://github.com/open-mmlab/mmdetection3d</p> <p>[5] https://github.com/open-mmlab/OpenPCDet</p> <p>[6] https://github.com/yukkysaito/autoware_perception</p> <p>[7] https://github.com/NVIDIA-AI-IOT/CUDA-PointPillars</p> <p>[8] https://www.nuscenes.org/nuscenes</p> <p>[9] https://www.argoverse.org/av2.html</p>"},{"location":"perception/lidar_centerpoint/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/","title":"Run lidar_centerpoint and lidar_centerpoint-tiny simultaneously","text":"<p>This tutorial is for showing <code>centerpoint</code> and <code>centerpoint_tiny</code>models\u2019 results simultaneously, making it easier to visualize and compare the performance.</p>"},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#setup-development-environment","title":"Setup Development Environment","text":"<p>Follow the steps in the Source Installation (link) in Autoware doc.</p> <p>If you fail to build autoware environment according to lack of memory, then it is recommended to build autoware sequentially.</p> <p>Source the ROS 2 Galactic setup script.</p> <pre><code>source /opt/ros/galactic/setup.bash\n</code></pre> <p>Build the entire autoware repository.</p> <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release --parallel-workers=1\n</code></pre> <p>Or you can use a constrained number of CPU to build only one package.</p> <pre><code>export MAKEFLAGS=\"-j 4\" &amp;&amp; MAKE_JOBS=4 colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release --parallel-workers 1 --packages-select PACKAGE_NAME\n</code></pre> <p>Source the package.</p> <pre><code>source install/setup.bash\n</code></pre>"},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#data-preparation","title":"Data Preparation","text":""},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#using-rosbag-dataset","title":"Using rosbag dataset","text":"<pre><code>ros2 bag play /YOUR/ROSBAG/PATH/ --clock 100\n</code></pre> <p>Don't forget to add <code>clock</code> inorder to sync between two rviz display.</p> <p>You can also use the sample rosbag provided by autoware here.</p> <p>If you want to merge several rosbags into one, you can refer to this tool.</p>"},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#using-realtime-lidar-dataset","title":"Using realtime LiDAR dataset","text":"<p>Set up your Ethernet connection according to 1.1 - 1.3 in this website.</p> <p>Download Velodyne ROS driver</p> <pre><code>git clone -b ros2 https://github.com/ros-drivers/velodyne.git\n</code></pre> <p>Source the ROS 2 Galactic setup script.</p> <pre><code>source /opt/ros/galactic/setup.bash\n</code></pre> <p>Compile Velodyne driver</p> <pre><code>cd velodyne\nrosdep install -y --from-paths . --ignore-src --rosdistro $ROS_DISTRO\ncolcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release\n</code></pre> <p>Edit the configuration file. Specify the LiDAR device IP address in <code>./velodyne_driver/config/VLP32C-velodyne_driver_node-params.yaml</code></p> <pre><code>velodyne_driver_node:\nros__parameters:\ndevice_ip: 192.168.1.201 //change to your LiDAR device IP address\ngps_time: false\ntime_offset: 0.0\nenabled: true\nread_once: false\nread_fast: false\nrepeat_delay: 0.0\nframe_id: velodyne\nmodel: 32C\nrpm: 600.0\nport: 2368\n</code></pre> <p>Launch the velodyne driver.</p> <pre><code># Terminal 1\nros2 launch velodyne_driver velodyne_driver_node-VLP32C-launch.py\n</code></pre> <p>Launch the velodyne_pointcloud.</p> <pre><code># Terminal 2\nros2 launch velodyne_pointcloud velodyne_convert_node-VLP32C-launch.py\n</code></pre> <p>Point Cloud data will be available on topic <code>/velodyne_points</code>. You can check with <code>ros2 topic echo /velodyne_points</code>.</p> <p>Check this website if there is any unexpected issue.</p>"},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#launch-file-setting","title":"Launch file setting","text":"<p>Several fields to check in <code>centerpoint_vs_centerpoint-tiny.launch.xml</code> before running lidar centerpoint.</p> <ul> <li><code>input/pointcloud</code> : set to the topic with input data you want to subscribe.</li> <li><code>model_path</code> : set to the path of the model.</li> <li><code>model_param_path</code> : set to the path of model's config file.</li> </ul>"},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#run-centerpoint-and-centerpoint-tiny-simultaneously","title":"Run CenterPoint and CenterPoint-tiny simultaneously","text":"<p>Run</p> <pre><code>ros2 launch lidar_centerpoint centerpoint_vs_centerpoint-tiny.launch.xml\n</code></pre> <p>Then you will see two rviz window show immediately. On the left is the result for lidar centerpoint tiny, and on the right is the result for lidar centerpoint.</p> <p></p>"},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#troubleshooting","title":"Troubleshooting","text":""},{"location":"perception/lidar_centerpoint/launch/centerpoint_vs_centerpoint-tiny/#bounding-box-blink-on-rviz","title":"Bounding Box blink on rviz","text":"<p>To avoid Bounding Boxs blinking on rviz, you can extend bbox marker lifetime.</p> <p>Set <code>marker_ptr-&gt;lifetime</code> and <code>marker.lifetime</code> to a longer lifetime.</p> <ul> <li><code>marker_ptr-&gt;lifetime</code> are in <code>PATH/autoware/src/universe/autoware.universe/common/autoware_auto_perception_rviz_plugin/src/object_detection/object_polygon_detail.cpp</code></li> <li><code>marker.lifetime</code> are in <code>PATH/autoware/src/universe/autoware.universe/common/tier4_autoware_utils/include/tier4_autoware_utils/ros/marker_helper.hpp</code></li> </ul> <p>Make sure to rebuild packages after any change.</p>"},{"location":"perception/lidar_centerpoint_tvm/","title":"lidar_centerpoint_tvm","text":""},{"location":"perception/lidar_centerpoint_tvm/#design","title":"Design","text":""},{"location":"perception/lidar_centerpoint_tvm/#usage","title":"Usage","text":"<p>lidar_centerpoint_tvm is a package for detecting dynamic 3D objects using TVM compiled centerpoint module for different backends. To use this package, replace <code>lidar_centerpoint</code> with <code>lidar_centerpoint_tvm</code> in perception launch files(for example, <code>lidar_based_detection.launch.xml</code> is lidar based detection is chosen.).</p>"},{"location":"perception/lidar_centerpoint_tvm/#neural-network","title":"Neural network","text":"<p>This package will not build without a neural network for its inference. The network is provided by the <code>tvm_utility</code> package. See its design page for more information on how to enable downloading pre-compiled networks (by setting the <code>DOWNLOAD_ARTIFACTS</code> cmake variable), or how to handle user-compiled networks.</p>"},{"location":"perception/lidar_centerpoint_tvm/#backend","title":"Backend","text":"<p>The backend used for the inference can be selected by setting the <code>lidar_centerpoint_tvm_BACKEND</code> cmake variable. The current available options are <code>llvm</code> for a CPU backend, and <code>vulkan</code> or <code>opencl</code> for a GPU backend. It defaults to <code>llvm</code>.</p>"},{"location":"perception/lidar_centerpoint_tvm/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/lidar_centerpoint_tvm/#input","title":"Input","text":"Name Type Description <code>~/input/pointcloud</code> <code>sensor_msgs::msg::PointCloud2</code> input pointcloud"},{"location":"perception/lidar_centerpoint_tvm/#output","title":"Output","text":"Name Type Description <code>~/output/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects <code>debug/cyclic_time_ms</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> cyclic time (msg) <code>debug/processing_time_ms</code> <code>tier4_debug_msgs::msg::Float64Stamped</code> processing time (ms)"},{"location":"perception/lidar_centerpoint_tvm/#parameters","title":"Parameters","text":""},{"location":"perception/lidar_centerpoint_tvm/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>score_threshold</code> float <code>0.1</code> detected objects with score less than threshold are ignored <code>densification_world_frame_id</code> string <code>map</code> the world frame id to fuse multi-frame pointcloud <code>densification_num_past_frames</code> int <code>1</code> the number of past frames to fuse with the current frame"},{"location":"perception/lidar_centerpoint_tvm/#bounding-box","title":"Bounding Box","text":"<p>The lidar segmentation node establishes a bounding box for the detected obstacles. The <code>L-fit</code> method of fitting a bounding box to a cluster is used for that.</p>"},{"location":"perception/lidar_centerpoint_tvm/#limitation-and-known-issue","title":"Limitation and Known Issue","text":"<p>Due to an accuracy issue of <code>centerpoint</code> model, <code>vulkan</code> cannot be used at the moment. As for 'llvm' backend, real-time performance cannot be achieved.</p>"},{"location":"perception/lidar_centerpoint_tvm/#scatter-implementation","title":"Scatter Implementation","text":"<p>Scatter function can be implemented using either TVMScript or C++. For C++ implementation, please refer to https://github.com/angry-crab/autoware.universe/blob/c020419fe52e359287eccb1b77e93bdc1a681e24/perception/lidar_centerpoint_tvm/lib/network/scatter.cpp#L65</p>"},{"location":"perception/lidar_centerpoint_tvm/#reference","title":"Reference","text":"<p>[1] Yin, Tianwei, Xingyi Zhou, and Philipp Kr\u00e4henb\u00fchl. \"Center-based 3d object detection and tracking.\" arXiv preprint arXiv:2006.11275 (2020).</p> <p>[2] Lang, Alex H., et al. \"Pointpillars: Fast encoders for object detection from point clouds.\" Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2019.</p> <p>[3] https://github.com/tianweiy/CenterPoint</p> <p>[4] https://github.com/Abraham423/CenterPoint</p> <p>[5] https://github.com/open-mmlab/OpenPCDet</p>"},{"location":"perception/lidar_centerpoint_tvm/#related-issues","title":"Related issues","text":""},{"location":"perception/lidar_centerpoint_tvm/#908-run-lidar-centerpoint-with-tvm","title":"908: Run Lidar Centerpoint with TVM","text":""},{"location":"perception/map_based_prediction/","title":"map_based_prediction","text":""},{"location":"perception/map_based_prediction/#role","title":"Role","text":"<p><code>map_based_prediction</code> is a module to predict the future paths (and their probabilities) of other vehicles and pedestrians according to the shape of the map and the surrounding environment.</p>"},{"location":"perception/map_based_prediction/#assumptions","title":"Assumptions","text":"<ul> <li>The following information about the target obstacle is needed<ul> <li>Label (type of person, car, etc.)</li> <li>The object position in the current time and predicted position in the future time.</li> </ul> </li> <li>The following information about the surrounding environment is needed<ul> <li>Road network information with Lanelet2 format</li> </ul> </li> </ul>"},{"location":"perception/map_based_prediction/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/map_based_prediction/#flow-chart","title":"Flow chart","text":""},{"location":"perception/map_based_prediction/#path-prediction-for-road-users","title":"Path prediction for road users","text":""},{"location":"perception/map_based_prediction/#remove-old-object-history","title":"Remove old object history","text":"<p>Store time-series data of objects to determine the vehicle's route and to detect lane change for several duration. Object Data contains the object's position, speed, and time information.</p>"},{"location":"perception/map_based_prediction/#get-current-lanelet-and-update-object-history","title":"Get current lanelet and update Object history","text":"<p>Search one or more lanelets satisfying the following conditions for each target object and store them in the ObjectData.</p> <ul> <li>The CoG of the object must be inside the lanelet.</li> <li>The centerline of the lanelet must have two or more points.</li> <li>The angle difference between the lanelet and the direction of the object must be within the threshold given by the parameters.<ul> <li>The angle flip is allowed, the condition is <code>diff_yaw &lt; threshold or diff_yaw &gt; pi - threshold</code>.</li> </ul> </li> <li>The lanelet must be reachable from the lanelet recorded in the past history.</li> </ul>"},{"location":"perception/map_based_prediction/#get-predicted-reference-path","title":"Get predicted reference path","text":"<ul> <li>Get reference path<ul> <li>Create a reference path for the object from the associated lanelet.</li> </ul> </li> <li>Predict Object Maneuver<ul> <li>Generate predicted paths for the object.</li> <li>The probability is assigned to each maneuver of <code>Lane Follow</code>, <code>Left Lane Change</code>, and <code>Right Lane Chagne</code> based on the object history and the reference path obtained in the first step.</li> <li>The following information is used to determine the maneuver.<ul> <li>The distance between the current center of gravity of the object and the left and right boundaries of the lane</li> <li>The lateral velocity (distance moved to the lateral direction in <code>t</code> seconds)</li> </ul> </li> </ul> </li> </ul> <p>The conditions for the lane change detection then becomes</p> <pre><code>//  Left Lane Change Detection\n(d_current_left / d_lane) &gt; dl_ratio_threshold &amp;&amp;\n(d_current_left - d_previous_left) &gt; ddl_threshold\n\n// Right Lane Change Detection\n(d_current_right / d_lane) &lt; dr_ratio_threshold &amp;&amp;\n(d_current_right - d_previous_right) &lt; ddr_threshold\n</code></pre> <p>where the parameter is explained in the picture below. An example of how to tune the parameters is described later.</p> <p></p> <ul> <li>Calculate Object Probability<ul> <li>The path probability obtained above is calculated based on the current position and angle of the object.</li> </ul> </li> <li>Refine predicted paths for smooth movement<ul> <li>The generated predicted paths are recomputed to take the vehicle dynamics into account.</li> <li>The path is calculated with minimum jerk trajectory implemented by 4th/5th order spline for lateral/longitudinal motion.\u5f15\u304f\u3002</li> </ul> </li> </ul>"},{"location":"perception/map_based_prediction/#lane-change-detection-logic","title":"Lane change detection logic","text":"<p>This is an example to tune the parameters for lane change detection. The default parameters are set so that the lane change can be detected 1 second before the vehicle crosses the lane boundary. Here, 15 data in the lane change / non lane change cases are plotted.</p> <p></p> <p>On the top plot, blue dots are the distance from the lane boundary one second before the lane change, and red dots are the average distance from the lane boundary when driving straight. From this plot, the most conservative value where lane change can be detected for all of these data can be seen as <code>-1.1</code>. Note that the larger number makes the decision conservative (lane change may not be detected) and the lower number makes the decision aggressive (many false positive occurs).</p> <p>On the bottom plot, blue dots are the lateral velocity one second before the lane change, and red dots are the average of the (absolute) lateral velocity when driving straight. In the same policy above, the parameter can be set as <code>0.5</code>.</p>"},{"location":"perception/map_based_prediction/#limitations","title":"Limitations","text":"<ul> <li>This plot shows only for one environment data. The parameter/algorithm must consider lane width. (The default parameters are set roughly considering the generalization of the lane width for other environments.)</li> </ul>"},{"location":"perception/map_based_prediction/#path-prediction-for-crosswalk-users","title":"Path prediction for crosswalk users","text":"<p>This module treats Pedestrians and Bicycles as objects using the crosswalk, and outputs prediction path based on map and estimated object's velocity, assuming the object has intention to cross the crosswalk, if the objects satisfies at least one of the following conditions:</p> <ul> <li>move toward the crosswalk</li> <li>stop near the crosswalk</li> </ul> <p>If there are a reachable crosswalk entry points within the <code>prediction_time_horizon</code> and the objects satisfies above condition, this module outputs additional predicted path to cross the opposite side via the crosswalk entry point.</p> <p>If the target object is inside the road or crosswalk, this module outputs one or two additional prediction path(s) to reach exit point of the crosswalk. The number of prediction paths are depend on whether object is moving or not. If the object is moving, this module outputs one prediction path toward an exit point that existed in the direction of object's movement. One the other hand, if the object has stopped, it is impossible to infer which exit points the object want to go, so this module outputs two prediction paths toward both side exit point.</p>"},{"location":"perception/map_based_prediction/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/map_based_prediction/#input","title":"Input","text":"Name Type Description <code>~/perception/object_recognition/tracking/objects</code> <code>autoware_auto_perception_msgs::msg::TrackedObjects</code> tracking objects without predicted path. <code>~/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> binary data of Lanelet2 Map."},{"location":"perception/map_based_prediction/#output","title":"Output","text":"Name Type Description <code>~/objects</code> <code>autoware_auto_perception_msgs::msg::PredictedObjects</code> tracking objects with predicted path. <code>~/objects_path_markers</code> <code>visualization_msgs::msg::MarkerArray</code> marker for visualization."},{"location":"perception/map_based_prediction/#parameters","title":"Parameters","text":"Parameter Type Description <code>enable_delay_compensation</code> bool flag to enable the time delay compensation for the position of the object <code>prediction_time_horizon</code> double predict time duration for predicted path [s] <code>prediction_sampling_delta_time</code> double sampling time for points in predicted path [s] <code>min_velocity_for_map_based_prediction</code> double apply map-based prediction to the objects with higher velocity than this value <code>min_crosswalk_user_velocity</code> double minimum velocity use in path prediction for crosswalk users <code>dist_threshold_for_searching_lanelet</code> double The threshold of the angle used when searching for the lane to which the object belongs [rad] <code>delta_yaw_threshold_for_searching_lanelet</code> double The threshold of the distance used when searching for the lane to which the object belongs [m] <code>sigma_lateral_offset</code> double Standard deviation for lateral position of objects [m] <code>sigma_yaw_angle</code> double Standard deviation yaw angle of objects [rad] <code>object_buffer_time_length</code> double Time span of object history to store the information [s] <code>history_time_length</code> double Time span of object information used for prediction [s] <code>dist_ratio_threshold_to_left_bound</code> double Conditions for using lane change detection of objects. Distance to the left bound of lanelet. <code>dist_ratio_threshold_to_right_bound</code> double Conditions for using lane change detection of objects. Distance to the right bound of lanelet. <code>diff_dist_threshold_to_left_bound</code> double Conditions for using lane change detection of objects. Differential value of horizontal position of objects. <code>diff_dist_threshold_to_right_bound</code> double Conditions for using lane change detection of objects. Differential value of horizontal position of objects."},{"location":"perception/map_based_prediction/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>For object types of passenger car, bus, and truck<ul> <li>The predicted path of the object follows the road structure.</li> <li>For the object not being on any roads, the predicted path is generated by just a straight line prediction.</li> <li>For the object on a lanelet but moving in a different direction of the road, the predicted path is just straight.</li> <li>Vehicle dynamics may not be properly considered in the predicted path.</li> </ul> </li> <li>For object types of person and motorcycle<ul> <li>The predicted path is generated by just a straight line in all situations except for \"around crosswalk\".</li> </ul> </li> <li>For all obstacles<ul> <li>In the prediction, the vehicle motion is assumed to be a constant velocity due to a lack of acceleration information.</li> </ul> </li> </ul>"},{"location":"perception/map_based_prediction/#reference","title":"Reference","text":"<ol> <li>M. Werling, J. Ziegler, S. Kammel, and S. Thrun, \u201cOptimal trajectory generation for dynamic street scenario in a frenet frame,\u201d IEEE International Conference on Robotics and Automation, Anchorage, Alaska, USA, May 2010.</li> <li>A. Houenou, P. Bonnifait, V. Cherfaoui, and Wen Yao, \u201cVehicle trajectory prediction based on motion model and maneuver recognition,\u201d in 2013 IEEE/RSJ International Conference on Intelligent Robots and Systems. IEEE, nov 2013, pp. 4363-4369.</li> </ol>"},{"location":"perception/multi_object_tracker/","title":"multi_object_tracker","text":""},{"location":"perception/multi_object_tracker/#purpose","title":"Purpose","text":"<p>The results of the detection are processed by a time series. The main purpose is to give ID and estimate velocity.</p>"},{"location":"perception/multi_object_tracker/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>This multi object tracker consists of data association and EKF.</p> <p></p>"},{"location":"perception/multi_object_tracker/#data-association","title":"Data association","text":"<p>The data association performs maximum score matching, called min cost max flow problem. In this package, mussp[1] is used as solver. In addition, when associating observations to tracers, data association have gates such as the area of the object from the BEV, Mahalanobis distance, and maximum distance, depending on the class label.</p>"},{"location":"perception/multi_object_tracker/#ekf-tracker","title":"EKF Tracker","text":"<p>Models for pedestrians, bicycles (motorcycles), cars and unknown are available. The pedestrian or bicycle tracker is running at the same time as the respective EKF model in order to enable the transition between pedestrian and bicycle tracking. For big vehicles such as trucks and buses, we have separate models for passenger cars and large vehicles because they are difficult to distinguish from passenger cars and are not stable. Therefore, separate models are prepared for passenger cars and big vehicles, and these models are run at the same time as the respective EKF models to ensure stability.</p>"},{"location":"perception/multi_object_tracker/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/multi_object_tracker/#input","title":"Input","text":"Name Type Description <code>~/input</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> obstacles"},{"location":"perception/multi_object_tracker/#output","title":"Output","text":"Name Type Description <code>~/output</code> <code>autoware_auto_perception_msgs::msg::TrackedObjects</code> modified obstacles"},{"location":"perception/multi_object_tracker/#parameters","title":"Parameters","text":""},{"location":"perception/multi_object_tracker/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>can_assign_matrix</code> double Assignment table for data association <code>max_dist_matrix</code> double Maximum distance table for data association <code>max_area_matrix</code> double Maximum area table for data association <code>min_area_matrix</code> double Minimum area table for data association <code>max_rad_matrix</code> double Maximum angle table for data association <code>world_frame_id</code> double tracking frame <code>enable_delay_compensation</code> bool Estimate obstacles at current time considering detection delay <code>publish_rate</code> double if enable_delay_compensation is true, how many hertz to output"},{"location":"perception/multi_object_tracker/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/multi_object_tracker/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/multi_object_tracker/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/multi_object_tracker/#evaluation-of-mussp","title":"Evaluation of muSSP","text":"<p>According to our evaluation, muSSP is faster than normal SSP when the matrix size is more than 100.</p> <p>Execution time for varying matrix size at 95% sparsity. In real data, the sparsity was often around 95%. </p> <p>Execution time for varying the sparsity with matrix size 100. </p>"},{"location":"perception/multi_object_tracker/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>This package makes use of external code.</p> Name License Original Repository muSSP Apache-2.0 https://github.com/yu-lab-vt/muSSP <p>[1] C. Wang, Y. Wang, Y. Wang, C.-t. Wu, and G. Yu, \u201cmuSSP: Efficient Min-cost Flow Algorithm for Multi-object Tracking,\u201d NeurIPS, 2019</p>"},{"location":"perception/multi_object_tracker/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/object_merger/","title":"object_merger","text":""},{"location":"perception/object_merger/#purpose","title":"Purpose","text":"<p>object_merger is a package for merging detected objects from two methods by data association.</p>"},{"location":"perception/object_merger/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The successive shortest path algorithm is used to solve the data association problem (the minimum-cost flow problem). The cost is calculated by the distance between two objects and gate functions are applied to reset cost, s.t. the maximum distance, the maximum area and the minimum area.</p>"},{"location":"perception/object_merger/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/object_merger/#input","title":"Input","text":"Name Type Description <code>input/object0</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detection objects <code>input/object1</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detection objects"},{"location":"perception/object_merger/#output","title":"Output","text":"Name Type Description <code>output/object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> modified Objects"},{"location":"perception/object_merger/#parameters","title":"Parameters","text":"Name Type Description <code>can_assign_matrix</code> double Assignment table for data association <code>max_dist_matrix</code> double Maximum distance table for data association <code>max_area_matrix</code> double Maximum area table for data association <code>min_area_matrix</code> double Minimum area table for data association <code>max_rad_matrix</code> double Maximum angle table for data association <code>base_link_frame_id</code> double association frame <code>distance_threshold_list</code> <code>std::vector&lt;double&gt;</code> Distance threshold for each class used in judging overlap. The class order depends on ObjectClassification. <code>generalized_iou_threshold</code> double Generalized IoU threshold"},{"location":"perception/object_merger/#tips","title":"Tips","text":"<ul> <li>False Positive Unknown object detected by clustering method sometimes raises the risk of sudden stop and interferes with Planning module. If ML based detector rarely misses objects, you can tune the parameter of object_merger and make Perception module ignore unknown objects.<ul> <li>If you want to remove unknown object close to large vehicle,<ul> <li>use HIGH <code>distance_threshold_list</code><ul> <li>However, this causes high computational load</li> </ul> </li> <li>use LOW <code>precision_threshold_to_judge_overlapped</code></li> <li>use LOW <code>generalized_iou_threshold</code><ul> <li>However, these 2 params raise the risk of overlooking object close to known object.</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"perception/object_merger/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/object_merger/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/object_merger/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/object_merger/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/object_merger/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":"<p>Data association algorithm was the same as that of multi_object_tracker, but the algorithm of multi_object_tracker was already updated.</p>"},{"location":"perception/object_range_splitter/","title":"object_range_splitter","text":""},{"location":"perception/object_range_splitter/#purpose","title":"Purpose","text":"<p>object_range_splitter is a package to divide detected objects into two messages by the distance from the origin.</p>"},{"location":"perception/object_range_splitter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/object_range_splitter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/object_range_splitter/#input","title":"Input","text":"Name Type Description <code>input/object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects"},{"location":"perception/object_range_splitter/#output","title":"Output","text":"Name Type Description <code>output/long_range_object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> long range detected objects <code>output/short_range_object</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> short range detected objects"},{"location":"perception/object_range_splitter/#parameters","title":"Parameters","text":"Name Type Description <code>split_range</code> float the distance boundary to divide detected objects [m]"},{"location":"perception/object_range_splitter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/object_range_splitter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/object_range_splitter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/object_range_splitter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/object_range_splitter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/","title":"occupancy_grid_map_outlier_filter","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/#purpose","title":"Purpose","text":"<p>This node is an outlier filter based on a occupancy grid map. Depending on the implementation of occupancy grid map, it can be called an outlier filter in time series, since the occupancy grid map expresses the occupancy probabilities in time series.</p>"},{"location":"perception/occupancy_grid_map_outlier_filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<ol> <li> <p>Use the occupancy grid map to separate point clouds into those with low occupancy probability and those with high occupancy probability.</p> </li> <li> <p>The point clouds that belong to the low occupancy probability are not necessarily outliers. In particular, the top of the moving object tends to belong to the low occupancy probability. Therefore, if <code>use_radius_search_2d_filter</code> is true, then apply an radius search 2d outlier filter to the point cloud that is determined to have a low occupancy probability.</p> <ol> <li>For each low occupancy probability point, determine the outlier from the radius (<code>radius_search_2d_filter/search_radius</code>) and the number of point clouds. In this case, the point cloud to be referenced is not only low occupancy probability points, but all point cloud including high occupancy probability points.</li> <li>The number of point clouds can be multiplied by <code>radius_search_2d_filter/min_points_and_distance_ratio</code> and distance from base link. However, the minimum and maximum number of point clouds is limited.</li> </ol> </li> </ol> <p>The following video is a sample. Yellow points are high occupancy probability, green points are low occupancy probability which is not an outlier, and red points are outliers. At around 0:15 and 1:16 in the first video, a bird crosses the road, but it is considered as an outlier.</p> <ul> <li>movie1</li> <li>movie2</li> </ul> <p></p>"},{"location":"perception/occupancy_grid_map_outlier_filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/#input","title":"Input","text":"Name Type Description <code>~/input/pointcloud</code> <code>sensor_msgs/PointCloud2</code> Obstacle point cloud with ground removed. <code>~/input/occupancy_grid_map</code> <code>nav_msgs/OccupancyGrid</code> A map in which the probability of the presence of an obstacle is occupancy probability map"},{"location":"perception/occupancy_grid_map_outlier_filter/#output","title":"Output","text":"Name Type Description <code>~/output/pointcloud</code> <code>sensor_msgs/PointCloud2</code> Point cloud with outliers removed. trajectory <code>~/output/debug/outlier/pointcloud</code> <code>sensor_msgs/PointCloud2</code> Point clouds removed as outliers. <code>~/output/debug/low_confidence/pointcloud</code> <code>sensor_msgs/PointCloud2</code> Point clouds that had a low probability of occupancy in the occupancy grid map. However, it is not considered as an outlier. <code>~/output/debug/high_confidence/pointcloud</code> <code>sensor_msgs/PointCloud2</code> Point clouds that had a high probability of occupancy in the occupancy grid map. trajectory"},{"location":"perception/occupancy_grid_map_outlier_filter/#parameters","title":"Parameters","text":"Name Type Description <code>map_frame</code> string map frame id <code>base_link_frame</code> string base link frame id <code>cost_threshold</code> int Cost threshold of occupancy grid map (0~100). 100 means 100% probability that there is an obstacle, close to 50 means that it is indistinguishable whether it is an obstacle or free space, 0 means that there is no obstacle. <code>enable_debugger</code> bool Whether to output the point cloud for debugging. <code>use_radius_search_2d_filter</code> bool Whether or not to apply density-based outlier filters to objects that are judged to have low probability of occupancy on the occupancy grid map. <code>radius_search_2d_filter/search_radius</code> float Radius when calculating the density <code>radius_search_2d_filter/min_points_and_distance_ratio</code> float Threshold value of the number of point clouds per radius when the distance from baselink is 1m, because the number of point clouds varies with the distance from baselink. <code>radius_search_2d_filter/min_points</code> int Minimum number of point clouds per radius <code>radius_search_2d_filter/max_points</code> int Maximum number of point clouds per radius"},{"location":"perception/occupancy_grid_map_outlier_filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/occupancy_grid_map_outlier_filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/probabilistic_occupancy_grid_map/","title":"probabilistic_occupancy_grid_map","text":""},{"location":"perception/probabilistic_occupancy_grid_map/#purpose","title":"Purpose","text":"<p>This package outputs the probability of having an obstacle as occupancy grid map. </p>"},{"location":"perception/probabilistic_occupancy_grid_map/#referencesexternal-links","title":"References/External links","text":"<ul> <li>Pointcloud based occupancy grid map</li> <li>Laserscan based occupancy grid map</li> </ul>"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/","title":"laserscan based occupancy grid map","text":""},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The basic idea is to take a 2D laserscan and ray trace it to create a time-series processed occupancy grid map.</p> <ol> <li>the node take a laserscan and make an occupancy grid map with one frame. ray trace is done by Bresenham's line algorithm.    </li> <li> <p>Optionally, obstacle point clouds and raw point clouds can be received and reflected in the occupancy grid map. The reason is that laserscan only uses the most foreground point in the polar coordinate system, so it throws away a lot of information. As a result, the occupancy grid map is almost an UNKNOWN cell.    Therefore, the obstacle point cloud and the raw point cloud are used to reflect what is judged to be the ground and what is judged to be an obstacle in the occupancy grid map.        The black and red dots represent raw point clouds, and the red dots represent obstacle point clouds. In other words, the black points are determined as the ground, and the red point cloud is the points determined as obstacles. The gray cells are represented as UNKNOWN cells.</p> </li> <li> <p>Using the previous occupancy grid map, update the existence probability using a binary Bayesian filter (1). Also, the unobserved cells are time-decayed like the system noise of the Kalman filter (2).</p> </li> </ol> <pre><code>    \\hat{P_{o}} = \\frac{(P_{o} * P_{z})}{(P_{o} * P_{z} + (1 - P_{o}) * \\bar{P_{z}})} \\tag{1}\n</code></pre> <pre><code>    \\hat{P_{o}} = \\frac{(P_{o} + 0.5 * \\frac{1}{ratio})}{(\\frac{1}{ratio} + 1)} \\tag{2}\n</code></pre>"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#input","title":"Input","text":"Name Type Description <code>~/input/laserscan</code> <code>sensor_msgs::LaserScan</code> laserscan <code>~/input/obstacle_pointcloud</code> <code>sensor_msgs::PointCloud2</code> obstacle pointcloud <code>~/input/raw_pointcloud</code> <code>sensor_msgs::PointCloud2</code> The overall point cloud used to input the obstacle point cloud"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#output","title":"Output","text":"Name Type Description <code>~/output/occupancy_grid_map</code> <code>nav_msgs::OccupancyGrid</code> occupancy grid map"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#parameters","title":"Parameters","text":""},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#node-parameters","title":"Node Parameters","text":"Name Type Description <code>map_frame</code> string map frame <code>base_link_frame</code> string base_link frame <code>input_obstacle_pointcloud</code> bool whether to use the optional obstacle point cloud? If this is true, <code>~/input/obstacle_pointcloud</code> topics will be received. <code>input_obstacle_and_raw_pointcloud</code> bool whether to use the optional obstacle and raw point cloud? If this is true, <code>~/input/obstacle_pointcloud</code> and <code>~/input/raw_pointcloud</code> topics will be received. <code>use_height_filter</code> bool whether to height filter for <code>~/input/obstacle_pointcloud</code> and <code>~/input/raw_pointcloud</code>? By default, the height is set to -1~2m. <code>map_length</code> double The length of the map. -100 if it is 50~50[m] <code>map_resolution</code> double The map cell resolution [m]"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>In several places we have modified the external code written in BSD3 license.</p> <ul> <li>occupancy_grid_map.hpp</li> <li>cost_value.hpp</li> <li>occupancy_grid_map.cpp</li> </ul>"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>Bresenham's_line_algorithm</p> <ul> <li>https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm</li> <li>https://web.archive.org/web/20080528040104/http://www.research.ibm.com/journal/sj/041/ibmsjIVRIC.pdf</li> </ul>"},{"location":"perception/probabilistic_occupancy_grid_map/laserscan-based-occupancy-grid-map/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":"<ul> <li>The update probability of the binary Bayesian filter is currently hard-coded and requires a code change to be modified.</li> <li>Since there is no special support for moving objects, the probability of existence is not increased for fast objects.</li> </ul>"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/","title":"pointcloud based occupancy grid map","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#1st-step","title":"1st step","text":"<p>First of all, obstacle and raw pointcloud as input are transformed into a polar coordinate system and divided into bin per angle_increment. At this time, each point belonging to each bin is stored as range data. In addition, the x,y information in the map coordinate is also stored for ray trace on map coordinate. The bin contains the following information for each point</p> <ul> <li>range data from origin of raytrace</li> <li>x on map coordinate</li> <li>y on map coordinate</li> </ul> <p></p> <p>The following figure shows each of the bins from side view. </p>"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#2nd-step","title":"2nd step","text":"<p>The ray trace is performed in three steps for each cell. The ray trace is done by Bresenham's line algorithm. </p> <ol> <li> <p>Initialize freespace to the farthest point of each bin.</p> <p></p> </li> <li> <p>Fill in the unknown cells.    Assume that unknown is behind the obstacle, since the back of the obstacle is a blind spot.    Therefore, the unknown are assumed to be the cells that are more than a distance margin from each obstacle point.</p> <p></p> <p>There are three reasons for setting a distance margin.</p> <ul> <li>It is unlikely that a point on the ground will be immediately behind an obstacle.</li> <li>The obstacle point cloud is processed and may not match the raw pointcloud.</li> <li>The input may be inaccurate and obstacle points may not be determined as obstacles.</li> </ul> </li> <li> <p>Fill in the occupied cells.    Fill in the point where the obstacle point is located with occupied.    In addition, If the distance between obstacle points is less than or equal to the distance margin, it is filled with occupied because the input may be inaccurate and obstacle points may not be determined as obstacles.</p> <p></p> </li> </ol>"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#3rd-step","title":"3rd step","text":"<p>Using the previous occupancy grid map, update the existence probability using a binary Bayesian filter (1). Also, the unobserved cells are time-decayed like the system noise of the Kalman filter (2).</p> <pre><code>    \\hat{P_{o}} = \\frac{(P_{o} * P_{z})}{(P_{o} * P_{z} + (1 - P_{o}) * \\bar{P_{z}})} \\tag{1}\n</code></pre> <pre><code>    \\hat{P_{o}} = \\frac{(P_{o} + 0.5 * \\frac{1}{ratio})}{(\\frac{1}{ratio} + 1)} \\tag{2}\n</code></pre>"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#input","title":"Input","text":"Name Type Description <code>~/input/obstacle_pointcloud</code> <code>sensor_msgs::PointCloud2</code> obstacle pointcloud <code>~/input/raw_pointcloud</code> <code>sensor_msgs::PointCloud2</code> The overall point cloud used to input the obstacle point cloud"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#output","title":"Output","text":"Name Type Description <code>~/output/occupancy_grid_map</code> <code>nav_msgs::OccupancyGrid</code> occupancy grid map"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#parameters","title":"Parameters","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#node-parameters","title":"Node Parameters","text":"Name Type Description <code>map_frame</code> string map frame <code>base_link_frame</code> string base_link frame <code>use_height_filter</code> bool whether to height filter for <code>~/input/obstacle_pointcloud</code> and <code>~/input/raw_pointcloud</code>? By default, the height is set to -1~2m. <code>map_length</code> double The length of the map. -100 if it is 50~50[m] <code>map_resolution</code> double The map cell resolution [m]"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>In several places we have modified the external code written in BSD3 license.</p> <ul> <li>occupancy_grid_map.hpp</li> <li>cost_value.hpp</li> <li>occupancy_grid_map.cpp</li> </ul>"},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/probabilistic_occupancy_grid_map/pointcloud-based-occupancy-grid-map/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":"<ul> <li>The update probability of the binary Bayesian filter is currently hard-coded and requires a code change to be modified.</li> <li>Since there is no special support for moving objects, the probability of existence is not increased for fast objects.</li> </ul>"},{"location":"perception/radar_fusion_to_detected_object/","title":"radar_fusion_to_detected_object","text":"<p>This package contains a sensor fusion module for radar-detected objects and 3D detected objects. The fusion node can:</p> <ul> <li>Attach velocity to 3D detections when successfully matching radar data. The tracking modules use the velocity information to enhance the tracking results while planning modules use it to execute actions like adaptive cruise control.</li> <li>Improve the low confidence 3D detections when corresponding radar detections are found.</li> </ul> <p></p>"},{"location":"perception/radar_fusion_to_detected_object/#core-algorithm","title":"Core algorithm","text":"<p>The document of core algorithm is here</p>"},{"location":"perception/radar_fusion_to_detected_object/#parameters-for-sensor-fusion","title":"Parameters for sensor fusion","text":"Name Type Description Default value bounding_box_margin double The distance to extend the 2D bird's-eye view Bounding Box on each side. This distance is used as a threshold to find radar centroids falling inside the extended box. [m] 2.0 split_threshold_velocity double The object's velocity threshold to decide to split for two objects from radar information (currently not implemented) [m/s] 5.0 threshold_yaw_diff double The yaw orientation threshold. If $ \\vert \\theta {ob} - \\theta {ra} \\vert &lt; thresholdyaw_diff $ attached to radar information include estimated velocity, where $ \\theta $ is yaw angle from 3d detected object, $ \\theta_ {ra} $ is yaw angle from radar object. [rad] 0.35"},{"location":"perception/radar_fusion_to_detected_object/#weight-parameters-for-velocity-estimation","title":"Weight parameters for velocity estimation","text":"<p>To tune these weight parameters, please see document in detail.</p> Name Type Description Default value velocity_weight_average double The twist coefficient of average twist of radar data in velocity estimation. 0.0 velocity_weight_median double The twist coefficient of median twist of radar data in velocity estimation. 0.0 velocity_weight_min_distance double The twist coefficient of radar data nearest to the center of bounding box in velocity estimation. 1.0 velocity_weight_target_value_average double The twist coefficient of target value weighted average in velocity estimation. Target value is amplitude if using radar pointcloud. Target value is probability if using radar objects. 0.0 velocity_weight_target_value_top double The twist coefficient of top target value radar data in velocity estimation. Target value is amplitude if using radar pointcloud. Target value is probability if using radar objects. 0.0"},{"location":"perception/radar_fusion_to_detected_object/#parameters-for-fixed-object-information","title":"Parameters for fixed object information","text":"Name Type Description Default value convert_doppler_to_twist bool Convert doppler velocity to twist using the yaw information of a detected object. false threshold_probability float If the probability of an output object is lower than this parameter, and the output object does not have radar points/objects, then delete the object. 0.4 compensate_probability bool If this parameter is true, compensate probability of objects to threshold probability. false"},{"location":"perception/radar_fusion_to_detected_object/#radar_object_fusion_to_detected_object","title":"radar_object_fusion_to_detected_object","text":"<p>Sensor fusion with radar objects and a detected object.</p> <ul> <li>Calculation cost is O(nm).<ul> <li>n: the number of radar objects.</li> <li>m: the number of objects from 3d detection.</li> </ul> </li> </ul>"},{"location":"perception/radar_fusion_to_detected_object/#how-to-launch","title":"How to launch","text":"<pre><code>ros2 launch radar_fusion_to_detected_object radar_object_to_detected_object.launch.xml\n</code></pre>"},{"location":"perception/radar_fusion_to_detected_object/#input","title":"Input","text":"Name Type Description <code>~/input/objects</code> autoware_auto_perception_msgs/msg/DetectedObject.msg 3D detected objects. <code>~/input/radar_objects</code> autoware_auto_perception_msgs/msg/TrackedObjects.msg Radar objects. Note that frame_id need to be same as <code>~/input/objects</code>"},{"location":"perception/radar_fusion_to_detected_object/#output","title":"Output","text":"Name Type Description <code>~/output/objects</code> autoware_auto_perception_msgs/msg/DetectedObjects.msg 3D detected object with twist. <code>~/debug/low_confidence_objects</code> autoware_auto_perception_msgs/msg/DetectedObjects.msg 3D detected object that doesn't output as <code>~/output/objects</code> because of low confidence"},{"location":"perception/radar_fusion_to_detected_object/#parameters","title":"Parameters","text":"Name Type Description Default value update_rate_hz double The update rate [hz]. 20.0"},{"location":"perception/radar_fusion_to_detected_object/#radar_scan_fusion_to_detected_object-tbd","title":"radar_scan_fusion_to_detected_object (TBD)","text":"<p>TBD</p>"},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/","title":"Algorithm","text":""},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/#common-algorithm","title":"Common Algorithm","text":""},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/#1-link-between-3d-bounding-box-and-radar-data","title":"1. Link between 3d bounding box and radar data","text":"<p>Choose radar pointcloud/objects within 3D bounding box from lidar-base detection with margin space from bird's-eye view.</p> <p></p>"},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/#2-feature-support-split-the-object-going-in-a-different-direction","title":"2. [Feature support] Split the object going in a different direction","text":"<ul> <li>Split two object for the low confidence object that can be estimated to derive two object.</li> </ul>"},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/#3-estimate-twist-of-object","title":"3. Estimate twist of object","text":"<p>Estimate twist from chosen radar pointcloud/objects using twist and target value (Target value is amplitude if using radar pointcloud. Target value is probability if using radar objects). First, the estimation function calculate</p> <ul> <li>Average twist for radar pointcloud/objects.</li> <li>Median twist for radar pointcloud/objects.</li> <li>Twist for radar pointcloud/objects nearest of the center of bounding box in velocity.</li> <li>Weighted average twist with target value of radar pointcloud/objects.</li> <li>Twist with max target value of radar pointcloud/objects.</li> </ul> <p>Second, the estimation function calculate weighted average of these list. Third, twist information of estimated twist is attached to an object.</p> <p></p>"},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/#4-feature-support-option-convert-doppler-velocity-to-twist","title":"4. [Feature support] [Option] Convert doppler velocity to twist","text":"<p>If the twist information of radars is doppler velocity, convert from doppler velocity to twist using yaw angle of DetectedObject. Because radar pointcloud has only doppler velocity information, radar pointcloud fusion should use this feature. On the other hand, because radar objects have twist information, radar object fusion should not use this feature.</p> <p></p>"},{"location":"perception/radar_fusion_to_detected_object/docs/algorithm/#5-delete-objects-with-low-probability","title":"5. Delete objects with low probability","text":"<ul> <li>Delete low confidence objects that do not have some radar points/objects.</li> </ul>"},{"location":"perception/radar_tracks_msgs_converter/","title":"radar_tracks_msgs_converter","text":"<p>This package convert from radar_msgs/msg/RadarTracks into autoware_auto_perception_msgs/msg/TrackedObject.</p> <ul> <li>Calculation cost is O(n).<ul> <li>n: The number of radar objects</li> </ul> </li> </ul>"},{"location":"perception/radar_tracks_msgs_converter/#design","title":"Design","text":""},{"location":"perception/radar_tracks_msgs_converter/#input-output","title":"Input / Output","text":"<ul> <li>Input<ul> <li><code>~/input/radar_objects</code> (radar_msgs/msg/RadarTracks.msg): Input radar topic</li> <li><code>~/input/odometry</code> (nav_msgs/msg/Odometry.msg): Ego vehicle odometry topic</li> </ul> </li> <li>Output<ul> <li><code>~/output/radar_objects</code> (autoware_auto_perception_msgs/msg/TrackedObject.msg): The topic converted to Autoware's message</li> </ul> </li> </ul>"},{"location":"perception/radar_tracks_msgs_converter/#parameters","title":"Parameters","text":"<ul> <li><code>update_rate_hz</code> (double): The update rate [hz].<ul> <li>Default parameter is 20.0</li> </ul> </li> <li><code>new_frame_id</code> (string): The header frame of output topic.<ul> <li>Default parameter is \"base_link\"</li> </ul> </li> <li><code>use_twist_compensation</code> (bool): If the parameter is true, then the twist of output objects' topic is compensated by ego vehicle motion.<ul> <li>Default parameter is \"false\"</li> </ul> </li> </ul>"},{"location":"perception/radar_tracks_msgs_converter/#note","title":"Note","text":"<p>This package convert the label from <code>radar_msgs/msg/RadarTrack.msg</code> to Autoware label. Label id is defined as below.</p> RadarTrack Autoware UNKNOWN 32000 0 CAR 32001 1 TRUCK 32002 2 BUS 32003 3 TRAILER 32004 4 MOTORCYCLE 32005 5 BICYCLE 32006 6 PEDESTRIAN 32007 7 <ul> <li>radar_msgs/msg/RadarTrack.msg: additional vendor-specific classifications are permitted starting from 32000.</li> <li>Autoware objects label</li> </ul>"},{"location":"perception/shape_estimation/","title":"shape_estimation","text":""},{"location":"perception/shape_estimation/#purpose","title":"Purpose","text":"<p>This node calculates a refined object shape (bounding box, cylinder, convex hull) in which a pointcloud cluster fits according to a label.</p>"},{"location":"perception/shape_estimation/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/shape_estimation/#fitting-algorithms","title":"Fitting algorithms","text":"<ul> <li> <p>bounding box</p> <p>L-shape fitting. See reference below for details.</p> </li> </ul> <ul> <li> <p>cylinder</p> <p><code>cv::minEnclosingCircle</code></p> </li> </ul> <ul> <li> <p>convex hull</p> <p><code>cv::convexHull</code></p> </li> </ul>"},{"location":"perception/shape_estimation/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/shape_estimation/#input","title":"Input","text":"Name Type Description <code>input</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> detected objects with labeled cluster"},{"location":"perception/shape_estimation/#output","title":"Output","text":"Name Type Description <code>output/objects</code> <code>autoware_auto_perception_msgs::msg::DetectedObjects</code> detected objects with refined shape"},{"location":"perception/shape_estimation/#parameters","title":"Parameters","text":"Name Type Default Value Description <code>use_corrector</code> bool true The flag to apply rule-based filter <code>use_filter</code> bool true The flag to apply rule-based corrector <code>use_vehicle_reference_yaw</code> bool true The flag to use vehicle reference yaw for corrector"},{"location":"perception/shape_estimation/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD</p>"},{"location":"perception/shape_estimation/#referencesexternal-links","title":"References/External links","text":"<p>L-shape fitting implementation of the paper:</p> <pre><code>@conference{Zhang-2017-26536,\nauthor = {Xiao Zhang and Wenda Xu and Chiyu Dong and John M. Dolan},\ntitle = {Efficient L-Shape Fitting for Vehicle Detection Using Laser Scanners},\nbooktitle = {2017 IEEE Intelligent Vehicles Symposium},\nyear = {2017},\nmonth = {June},\nkeywords = {autonomous driving, laser scanner, perception, segmentation},\n}\n</code></pre>"},{"location":"perception/tensorrt_yolo/","title":"tensorrt_yolo","text":""},{"location":"perception/tensorrt_yolo/#purpose","title":"Purpose","text":"<p>This package detects 2D bounding boxes for target objects e.g., cars, trucks, bicycles, and pedestrians on a image based on YOLO(You only look once) model.</p>"},{"location":"perception/tensorrt_yolo/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/tensorrt_yolo/#cite","title":"Cite","text":"<p>yolov3</p> <p>Redmon, J., &amp; Farhadi, A. (2018). Yolov3: An incremental improvement. arXiv preprint arXiv:1804.02767.</p> <p>yolov4</p> <p>Bochkovskiy, A., Wang, C. Y., &amp; Liao, H. Y. M. (2020). Yolov4: Optimal speed and accuracy of object detection. arXiv preprint arXiv:2004.10934.</p> <p>yolov5</p> <p>Jocher, G., et al. (2021). ultralytics/yolov5: v6.0 - YOLOv5n 'Nano' models, Roboflow integration, TensorFlow export, OpenCV DNN support (v6.0). Zenodo. https://doi.org/10.5281/zenodo.5563715</p>"},{"location":"perception/tensorrt_yolo/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/tensorrt_yolo/#input","title":"Input","text":"Name Type Description <code>in/image</code> <code>sensor_msgs/Image</code> The input image"},{"location":"perception/tensorrt_yolo/#output","title":"Output","text":"Name Type Description <code>out/objects</code> <code>tier4_perception_msgs/DetectedObjectsWithFeature</code> The detected objects with 2D bounding boxes <code>out/image</code> <code>sensor_msgs/Image</code> The image with 2D bounding boxes for visualization"},{"location":"perception/tensorrt_yolo/#parameters","title":"Parameters","text":""},{"location":"perception/tensorrt_yolo/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>anchors</code> double array [10.0, 13.0, 16.0, 30.0, 33.0, 23.0, 30.0, 61.0, 62.0, 45.0, 59.0, 119.0, 116.0, 90.0, 156.0, 198.0, 373.0, 326.0] The anchors to create bounding box candidates <code>scale_x_y</code> double array [1.0, 1.0, 1.0] The scale parameter to eliminate grid sensitivity <code>score_thresh</code> double 0.1 If the objectness score is less than this value, the object is ignored in yolo layer. <code>iou_thresh</code> double 0.45 The iou threshold for NMS method <code>detections_per_im</code> int 100 The maximum detection number for one frame <code>use_darknet_layer</code> bool true The flag to use yolo layer in darknet <code>ignore_thresh</code> double 0.5 If the output score is less than this value, ths object is ignored."},{"location":"perception/tensorrt_yolo/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>onnx_file</code> string \"\" The onnx file name for yolo model <code>engine_file</code> string \"\" The tensorrt engine file name for yolo model <code>label_file</code> string \"\" The label file with label names for detected objects written on it <code>calib_image_directory</code> string \"\" The directory name including calibration images for int8 inference <code>calib_cache_file</code> string \"\" The calibration cache file for int8 inference <code>mode</code> string \"FP32\" The inference mode: \"FP32\", \"FP16\", \"INT8\" <code>gpu_id</code> int 0 GPU device ID that runs the model"},{"location":"perception/tensorrt_yolo/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>This package includes multiple licenses.</p>"},{"location":"perception/tensorrt_yolo/#onnx-model","title":"Onnx model","text":"<p>All YOLO ONNX models are converted from the officially trained model. If you need information about training datasets and conditions, please refer to the official repositories.</p> <p>All models are downloaded automatically when building. When launching the node with a model for the first time, the model is automatically converted to TensorRT, although this may take some time.</p>"},{"location":"perception/tensorrt_yolo/#yolov3","title":"YOLOv3","text":"<p>YOLOv3: Converted from darknet weight file and conf file.</p> <ul> <li>This code is used for converting darknet weight file and conf file to onnx.</li> </ul>"},{"location":"perception/tensorrt_yolo/#yolov4","title":"YOLOv4","text":"<p>YOLOv4: Converted from darknet weight file and conf file.</p> <p>YOLOv4-tiny: Converted from darknet weight file and conf file.</p> <ul> <li>This code is used for converting darknet weight file and conf file to onnx.</li> </ul>"},{"location":"perception/tensorrt_yolo/#yolov5","title":"YOLOv5","text":"<p>Refer to this guide</p> <ul> <li>YOLOv5s</li> </ul> <ul> <li>YOLOv5m</li> </ul> <ul> <li>YOLOv5l</li> </ul> <ul> <li>YOLOv5x</li> </ul>"},{"location":"perception/tensorrt_yolo/#limitations","title":"Limitations","text":"<ul> <li>If you want to run multiple instances of this node for multiple cameras using \"yolo.launch.xml\", first of all, create a TensorRT engine by running the \"tensorrt_yolo.launch.xml\" launch file separately for each GPU. Otherwise, multiple instances of the node trying to create the same TensorRT engine can cause potential problems.</li> </ul>"},{"location":"perception/tensorrt_yolo/#reference-repositories","title":"Reference repositories","text":"<ul> <li>https://github.com/pjreddie/darknet</li> </ul> <ul> <li>https://github.com/AlexeyAB/darknet</li> </ul> <ul> <li>https://github.com/ultralytics/yolov5</li> </ul> <ul> <li>https://github.com/wang-xinyu/tensorrtx</li> </ul> <ul> <li>https://github.com/NVIDIA/retinanet-examples</li> </ul>"},{"location":"perception/tensorrt_yolox/","title":"tensorrt_yolox","text":""},{"location":"perception/tensorrt_yolox/#purpose","title":"Purpose","text":"<p>This package detects target objects e.g., cars, trucks, bicycles, and pedestrians on a image based on YOLOX model.</p>"},{"location":"perception/tensorrt_yolox/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/tensorrt_yolox/#cite","title":"Cite","text":"<p>Zheng Ge, Songtao Liu, Feng Wang, Zeming Li, Jian Sun, \"YOLOX: Exceeding YOLO Series in 2021\", arXiv preprint arXiv:2107.08430, 2021 [ref]</p>"},{"location":"perception/tensorrt_yolox/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/tensorrt_yolox/#input","title":"Input","text":"Name Type Description <code>in/image</code> <code>sensor_msgs/Image</code> The input image"},{"location":"perception/tensorrt_yolox/#output","title":"Output","text":"Name Type Description <code>out/objects</code> <code>tier4_perception_msgs/DetectedObjectsWithFeature</code> The detected objects with 2D bounding boxes <code>out/image</code> <code>sensor_msgs/Image</code> The image with 2D bounding boxes for visualization"},{"location":"perception/tensorrt_yolox/#parameters","title":"Parameters","text":""},{"location":"perception/tensorrt_yolox/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>score_threshold</code> float 0.3 If the objectness score is less than this value, the object is ignored in yolo layer. <code>nms_threshold</code> float 0.7 The IoU threshold for NMS method <p>NOTE: These two parameters are only valid for \"plain\" model (described later).</p>"},{"location":"perception/tensorrt_yolox/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>onnx_file</code> string \"\" The onnx file name for yolo model <code>label_file</code> string \"\" The label file with label names for detected objects written on it <code>mode</code> string \"fp32\" The inference mode: \"fp32\", \"fp16\", \"int8\""},{"location":"perception/tensorrt_yolox/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The label contained in detected 2D bounding boxes (i.e., <code>out/objects</code>) will be either one of the followings:</p> <ul> <li>CAR</li> <li>PEDESTRIAN (\"PERSON\" will also be categorized as \"PEDESTRIAN\")</li> <li>BUS</li> <li>TRUCK</li> <li>BICYCLE</li> <li>MOTORCYCLE</li> </ul> <p>If other labels (case insensitive) are contained in the file specified via the <code>label_file</code> parameter, those are labeled as <code>UNKNOWN</code>, while detected rectangles are drawn in the visualization result (<code>out/image</code>).</p>"},{"location":"perception/tensorrt_yolox/#onnx-model","title":"Onnx model","text":"<p>A sample model (named <code>yolox-tiny.onnx</code>) is downloaded automatically during the build process. To accelerate Non-maximum-suppression (NMS), which is one of the common post-process after object detection inference, <code>EfficientNMS_TRT</code> module is attached after the ordinal YOLOX (tiny) network. The <code>EfficientNMS_TRT</code> module contains fixed values for <code>score_threshold</code> and <code>nms_threshold</code> in it, hence these parameters are ignored when users specify ONNX models including this module.</p> <p>This package accepts both <code>EfficientNMS_TRT</code> attached ONNXs and models published from the official YOLOX repository (we referred to them as \"plain\" models).</p> <p>All models are automatically converted to TensorRT format. These converted files will be saved in the same directory as specified ONNX files with <code>.engine</code> filename extension and reused from the next run. The conversion process may take a while (typically a few minutes) and the inference process is blocked until complete the conversion, so it will take some time until detection results are published on the first run.</p>"},{"location":"perception/tensorrt_yolox/#package-acceptable-model-generation","title":"Package acceptable model generation","text":"<p>To convert users' own model that saved in PyTorch's <code>pth</code> format into ONNX, users can exploit the converter offered by the official repository. For the convenience, only procedures are described below. Please refer the official document for more detail.</p>"},{"location":"perception/tensorrt_yolox/#for-plain-models","title":"For plain models","text":"<ol> <li> <p>Install dependency</p> <pre><code>git clone git@github.com:Megvii-BaseDetection/YOLOX.git\ncd YOLOX\npython3 setup.py develop --user\n</code></pre> </li> <li> <p>Convert pth into ONNX</p> <pre><code>python3 tools/export_onnx.py \\\n--output-name YOUR_YOLOX.onnx \\\n-f YOUR_YOLOX.py \\\n-c YOUR_YOLOX.pth\n</code></pre> </li> </ol>"},{"location":"perception/tensorrt_yolox/#for-efficientnms_trt-embedded-models","title":"For EfficientNMS_TRT embedded models","text":"<ol> <li> <p>Install dependency</p> <pre><code>git clone git@github.com:Megvii-BaseDetection/YOLOX.git\ncd YOLOX\npython3 setup.py develop --user\npip3 install git+ssh://git@github.com/wep21/yolox_onnx_modifier.git --user\n</code></pre> </li> <li> <p>Convert pth into ONNX</p> <pre><code>python3 tools/export_onnx.py \\\n--output-name YOUR_YOLOX.onnx \\\n-f YOUR_YOLOX.py \\\n-c YOUR_YOLOX.pth\n  --decode_in_inference\n</code></pre> </li> <li> <p>Embed <code>EfficientNMS_TRT</code> to the end of YOLOX</p> <pre><code>yolox_onnx_modifier YOUR_YOLOX.onnx -o YOUR_YOLOX_WITH_NMS.onnx\n</code></pre> </li> </ol>"},{"location":"perception/tensorrt_yolox/#label-file","title":"Label file","text":"<p>A sample label file (named <code>label.txt</code>)is also downloaded automatically during the build process (NOTE: This file is incompatible with models that output labels for the COCO dataset (e.g., models from the official YOLOX repository)).</p> <p>This file represents the correspondence between class index (integer outputted from YOLOX network) and class label (strings making understanding easier). This package maps class IDs (incremented from 0) with labels according to the order in this file.</p>"},{"location":"perception/tensorrt_yolox/#reference-repositories","title":"Reference repositories","text":"<ul> <li>https://github.com/Megvii-BaseDetection/YOLOX</li> <li>https://github.com/wep21/yolox_onnx_modifier</li> </ul>"},{"location":"perception/traffic_light_classifier/","title":"traffic_light_classifier","text":""},{"location":"perception/traffic_light_classifier/#purpose","title":"Purpose","text":"<p>traffic_light_classifier is a package for classifying traffic light labels using cropped image around a traffic light. This package has two classifier models: <code>cnn_classifier</code> and <code>hsv_classifier</code>.</p>"},{"location":"perception/traffic_light_classifier/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/traffic_light_classifier/#cnn_classifier","title":"cnn_classifier","text":"<p>Traffic light labels are classified by MobileNetV2. Totally 37600 (26300 for training, 6800 for evaluation and 4500 for test) TIER IV internal images of Japanese traffic lights were used for fine-tuning.</p>"},{"location":"perception/traffic_light_classifier/#hsv_classifier","title":"hsv_classifier","text":"<p>Traffic light colors (green, yellow and red) are classified in HSV model.</p>"},{"location":"perception/traffic_light_classifier/#about-label","title":"About Label","text":"<p>The message type is designed to comply with the unified road signs proposed at the Vienna Convention. This idea has been also proposed in Autoware.Auto.</p> <p>There are rules for naming labels that nodes receive. One traffic light is represented by the following character string separated by commas. <code>color1-shape1, color2-shape2</code> .</p> <p>For example, the simple red and red cross traffic light label must be expressed as \"red-circle, red-cross\".</p> <p>These colors and shapes are assigned to the message as follows: </p>"},{"location":"perception/traffic_light_classifier/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/traffic_light_classifier/#input","title":"Input","text":"Name Type Description <code>~/input/image</code> <code>sensor_msgs::msg::Image</code> input image <code>~/input/rois</code> <code>autoware_auto_perception_msgs::msg::TrafficLightRoiArray</code> rois of traffic lights"},{"location":"perception/traffic_light_classifier/#output","title":"Output","text":"Name Type Description <code>~/output/traffic_signals</code> <code>autoware_auto_perception_msgs::msg::TrafficSignalArray</code> classified signals <code>~/output/debug/image</code> <code>sensor_msgs::msg::Image</code> image for debugging"},{"location":"perception/traffic_light_classifier/#parameters","title":"Parameters","text":""},{"location":"perception/traffic_light_classifier/#node-parameters","title":"Node Parameters","text":"Name Type Description <code>classifier_type</code> int if the value is <code>1</code>, cnn_classifier is used"},{"location":"perception/traffic_light_classifier/#core-parameters","title":"Core Parameters","text":""},{"location":"perception/traffic_light_classifier/#cnn_classifier_1","title":"cnn_classifier","text":"Name Type Description <code>model_file_path</code> str path to the model file <code>label_file_path</code> str path to the label file <code>precision</code> str TensorRT precision, <code>fp16</code> or <code>int8</code> <code>input_c</code> str the channel size of an input image <code>input_h</code> str the height of an input image <code>input_w</code> str the width of an input image"},{"location":"perception/traffic_light_classifier/#hsv_classifier_1","title":"hsv_classifier","text":"Name Type Description <code>green_min_h</code> int the minimum hue of green color <code>green_min_s</code> int the minimum saturation of green color <code>green_min_v</code> int the minimum value (brightness) of green color <code>green_max_h</code> int the maximum hue of green color <code>green_max_s</code> int the maximum saturation of green color <code>green_max_v</code> int the maximum value (brightness) of green color <code>yellow_min_h</code> int the minimum hue of yellow color <code>yellow_min_s</code> int the minimum saturation of yellow color <code>yellow_min_v</code> int the minimum value (brightness) of yellow color <code>yellow_max_h</code> int the maximum hue of yellow color <code>yellow_max_s</code> int the maximum saturation of yellow color <code>yellow_max_v</code> int the maximum value (brightness) of yellow color <code>red_min_h</code> int the minimum hue of red color <code>red_min_s</code> int the minimum saturation of red color <code>red_min_v</code> int the minimum value (brightness) of red color <code>red_max_h</code> int the maximum hue of red color <code>red_max_s</code> int the maximum saturation of red color <code>red_max_v</code> int the maximum value (brightness) of red color"},{"location":"perception/traffic_light_classifier/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/traffic_light_classifier/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/traffic_light_classifier/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/traffic_light_classifier/#referencesexternal-links","title":"References/External links","text":"<p>[1] M. Sandler, A. Howard, M. Zhu, A. Zhmoginov and L. Chen, \"MobileNetV2: Inverted Residuals and Linear Bottlenecks,\" 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, 2018, pp. 4510-4520, doi: 10.1109/CVPR.2018.00474.</p>"},{"location":"perception/traffic_light_classifier/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"perception/traffic_light_map_based_detector/","title":"The <code>traffic_light_map_based_detector</code> Package","text":""},{"location":"perception/traffic_light_map_based_detector/#overview","title":"Overview","text":"<p><code>traffic_light_map_based_detector</code> calculates where the traffic lights will appear in the image based on the HD map.</p> <p>Calibration and vibration errors can be entered as parameters, and the size of the detected RegionOfInterest will change according to the error.</p> <p></p> <p>If the node receives route information, it only looks at traffic lights on that route. If the node receives no route information, it looks at a radius of 200 meters and the angle between the traffic light and the camera is less than 40 degrees.</p>"},{"location":"perception/traffic_light_map_based_detector/#input-topics","title":"Input topics","text":"Name Type Description <code>~input/vector_map</code> autoware_auto_mapping_msgs::HADMapBin vector map <code>~input/camera_info</code> sensor_msgs::CameraInfo target camera parameter <code>~input/route</code> autoware_planning_msgs::LaneletRoute optional: route"},{"location":"perception/traffic_light_map_based_detector/#output-topics","title":"Output topics","text":"Name Type Description <code>~output/rois</code> autoware_auto_perception_msgs::TrafficLightRoiArray location of traffic lights in image corresponding to the camera info <code>~debug/markers</code> visualization_msgs::MarkerArray visualization to debug"},{"location":"perception/traffic_light_map_based_detector/#node-parameters","title":"Node parameters","text":"Parameter Type Description <code>max_vibration_pitch</code> double Maximum error in pitch direction. If -5~+5, it will be 10. <code>max_vibration_yaw</code> double Maximum error in yaw direction. If -5~+5, it will be 10. <code>max_vibration_height</code> double Maximum error in height direction. If -5~+5, it will be 10. <code>max_vibration_width</code> double Maximum error in width direction. If -5~+5, it will be 10. <code>max_vibration_depth</code> double Maximum error in depth direction. If -5~+5, it will be 10."},{"location":"perception/traffic_light_ssd_fine_detector/","title":"traffic_light_ssd_fine_detector","text":""},{"location":"perception/traffic_light_ssd_fine_detector/#purpose","title":"Purpose","text":"<p>It is a package for traffic light detection using MobileNetV2 and SSDLite.</p>"},{"location":"perception/traffic_light_ssd_fine_detector/#training-information","title":"Training Information","text":""},{"location":"perception/traffic_light_ssd_fine_detector/#pretrained-model","title":"Pretrained Model","text":"<p>The model is based on pytorch-ssd and the pretrained model could be downloaded from here.</p>"},{"location":"perception/traffic_light_ssd_fine_detector/#training-data","title":"Training Data","text":"<p>The model was fine-tuned on 1750 TierIV internal images of Japanese traffic lights.</p>"},{"location":"perception/traffic_light_ssd_fine_detector/#trained-onnx-model","title":"Trained Onnx model","text":"<ul> <li>https://drive.google.com/uc?id=1USFDPRH9JrVdGoqt27qHjRgittwc0kcO</li> </ul>"},{"location":"perception/traffic_light_ssd_fine_detector/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Based on the camera image and the global ROI array detected by <code>map_based_detection</code> node, a CNN-based detection method enables highly accurate traffic light detection.</p>"},{"location":"perception/traffic_light_ssd_fine_detector/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/traffic_light_ssd_fine_detector/#input","title":"Input","text":"Name Type Description <code>~/input/image</code> <code>sensor_msgs/Image</code> The full size camera image <code>~/input/rois</code> <code>autoware_auto_perception_msgs::msg::TrafficLightRoiArray</code> The array of ROIs detected by map_based_detector"},{"location":"perception/traffic_light_ssd_fine_detector/#output","title":"Output","text":"Name Type Description <code>~/output/rois</code> <code>autoware_auto_perception_msgs::msg::TrafficLightRoiArray</code> The detected accurate rois <code>~/debug/exe_time_ms</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> The time taken for inference"},{"location":"perception/traffic_light_ssd_fine_detector/#parameters","title":"Parameters","text":""},{"location":"perception/traffic_light_ssd_fine_detector/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>score_thresh</code> double 0.7 If the objectness score is less than this value, the object is ignored <code>mean</code> std::vector [0.5,0.5,0.5] Average value of the normalized values of the image data used for training <code>std</code> std::vector [0.5,0.5,0.5] Standard deviation of the normalized values of the image data used for training"},{"location":"perception/traffic_light_ssd_fine_detector/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>onnx_file</code> string \"./data/mb2-ssd-lite-tlr.onnx\" The onnx file name for yolo model <code>label_file</code> string \"./data/voc_labels_tl.txt\" The label file with label names for detected objects written on it <code>mode</code> string \"FP32\" The inference mode: \"FP32\", \"FP16\", \"INT8\" <code>max_batch_size</code> int 8 The size of the batch processed at one time by inference by TensorRT <code>approximate_sync</code> bool false Flag for whether to ues approximate sync policy"},{"location":"perception/traffic_light_ssd_fine_detector/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/traffic_light_ssd_fine_detector/#reference-repositories","title":"Reference repositories","text":"<p>pytorch-ssd github repository</p> <ul> <li>https://github.com/qfgaohao/pytorch-ssd</li> </ul> <p>MobileNetV2</p> <ul> <li>M. Sandler, A. Howard, M. Zhu, A. Zhmoginov and L. Chen, \"MobileNetV2: Inverted Residuals and Linear Bottlenecks,\" 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, 2018, pp. 4510-4520, doi: 10.1109/CVPR.2018.00474.</li> </ul>"},{"location":"perception/traffic_light_visualization/","title":"traffic_light_visualization","text":""},{"location":"perception/traffic_light_visualization/#purpose","title":"Purpose","text":"<p>The <code>traffic_light_visualization</code> is a package that includes two visualizing nodes:</p> <ul> <li>traffic_light_map_visualizer is a node that shows traffic lights color status and position on rviz as markers.</li> <li>traffic_light_roi_visualizer is a node that draws the result of traffic light recognition nodes (traffic light status, position and classification probability) on the input image as shown in the following figure and publishes it.</li> </ul> <p></p>"},{"location":"perception/traffic_light_visualization/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"perception/traffic_light_visualization/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"perception/traffic_light_visualization/#traffic_light_map_visualizer","title":"traffic_light_map_visualizer","text":""},{"location":"perception/traffic_light_visualization/#input","title":"Input","text":"Name Type Description <code>~/input/tl_state</code> <code>autoware_auto_perception_msgs::msg::TrafficSignalArray</code> status of traffic lights <code>~/input/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> vector map"},{"location":"perception/traffic_light_visualization/#output","title":"Output","text":"Name Type Description <code>~/output/traffic_light</code> <code>visualization_msgs::msg::MarkerArray</code> marker array that indicates status of traffic lights"},{"location":"perception/traffic_light_visualization/#traffic_light_roi_visualizer","title":"traffic_light_roi_visualizer","text":""},{"location":"perception/traffic_light_visualization/#input_1","title":"Input","text":"Name Type Description <code>~/input/tl_state</code> <code>autoware_auto_perception_msgs::msg::TrafficSignalArray</code> status of traffic lights <code>~/input/image</code> <code>sensor_msgs::msg::Image</code> the image captured by perception cameras <code>~/input/rois</code> <code>autoware_auto_perception_msgs::msg::TrafficLightRoiArray</code> the ROIs detected by <code>traffic_light_ssd_fine_detector</code> <code>~/input/rough/rois</code> (option) <code>autoware_auto_perception_msgs::msg::TrafficLightRoiArray</code> the ROIs detected by <code>traffic_light_map_based_detector</code>"},{"location":"perception/traffic_light_visualization/#output_1","title":"Output","text":"Name Type Description <code>~/output/image</code> <code>sensor_msgs::msg::Image</code> output image with ROIs"},{"location":"perception/traffic_light_visualization/#parameters","title":"Parameters","text":""},{"location":"perception/traffic_light_visualization/#traffic_light_map_visualizer_1","title":"traffic_light_map_visualizer","text":"<p>None</p>"},{"location":"perception/traffic_light_visualization/#traffic_light_roi_visualizer_1","title":"traffic_light_roi_visualizer","text":""},{"location":"perception/traffic_light_visualization/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>enable_fine_detection</code> bool false whether to visualize result of the traffic light fine detection"},{"location":"perception/traffic_light_visualization/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"perception/traffic_light_visualization/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"perception/traffic_light_visualization/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"perception/traffic_light_visualization/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"perception/traffic_light_visualization/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"planning/behavior_path_planner/","title":"Behavior Path Planner","text":""},{"location":"planning/behavior_path_planner/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>The <code>behavior_path_planner</code> module is responsible to generate</p> <ol> <li>path based on the traffic situation,</li> <li>drivable area that the vehicle can move (defined in the path msg),</li> <li>turn signal command to be sent to the vehicle interface.</li> </ol> <p>Depending on the situation, a suitable module is selected and executed on the behavior tree system.</p> <p>The following modules are currently supported:</p> <ul> <li>Lane Following: Generate lane centerline from map.</li> <li>Lane Change: Performs a lane change. This module is performed when it is necessary and a collision check with other vehicles is cleared.</li> <li>Obstacle Avoidance: Perform an obstacle avoidance. This module is for avoidance of a vehicle parked on the edge of the lane or overtaking a low-speed obstacle.</li> <li>Pull Over: Performs a pull over. This module is performed when ego-vehicle is in the road lane and goal is in the shoulder lane. ego-vehicle will stop at the goal.</li> <li>Pull Out: Performs a pull out. This module is performed when ego-vehicle is stationary and footprint of ego-vehicle is included in shoulder lane. This module ends when ego-vehicle merges into the road.</li> <li>Side Shift: (For remote control) Shift the path to left or right according to an external instruction.</li> </ul> <p>[WIP]</p> <ul> <li>Free Space: xxx.</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/#design","title":"Design","text":""},{"location":"planning/behavior_path_planner/#inputs-outputs-api","title":"Inputs / Outputs / API","text":""},{"location":"planning/behavior_path_planner/#output","title":"output","text":"<ul> <li>path [<code>autoware_auto_planning_msgs/PathWithLaneId</code>] : The path generated by modules.</li> <li>path_candidate [<code>autoware_auto_planning_msgs/Path</code>] : The path the module is about to take. To be executed as soon as external approval is obtained.</li> <li>turn_indicators_cmd [<code>autoware_auto_vehicle_msgs/TurnIndicatorsCommand</code>] : Turn indicators command.</li> <li>hazard_lights_cmd [<code>autoware_auto_vehicle_msgs/HazardLightsCommand</code>] : Hazard lights command.</li> <li>force_available [<code>tier4_planning_msgs/PathChangeModuleArray</code>] : (For remote control) modules that are force-executable.</li> <li>ready_module [<code>tier4_planning_msgs/PathChangeModule</code>] : (For remote control) modules that are ready to be executed.</li> <li>running_modules [<code>tier4_planning_msgs/PathChangeModuleArray</code>] : (For remote control) Current running module.</li> </ul>"},{"location":"planning/behavior_path_planner/#input","title":"input","text":"<ul> <li>/planning/mission_planning/route [<code>autoware_planning_msgs/LaneletRoute</code>] : Current route from start to goal.</li> <li>/map/vector_map [autoware_auto_mapping_msgs/HADMapBin] : Map information.</li> <li>/perception/object_recognition/objects [<code>autoware_auto_perception_msgs/PredictedObjects</code>] : dynamic objects from perception module.</li> <li>/perception/occupancy_grid_map/map [nav_msgs/msg/OccupancyGrid] : occupancy grid map from perception module. This is used for only Pull Over module</li> <li>/tf [<code>tf2_msgs/TFMessage</code>] : For ego-pose.</li> <li>/localization/kinematic_state [`nav_msgs/Odometry] : For ego-velocity.</li> <li>path_change_approval [<code>std_msgs::Bool</code>] : (For remote control)</li> <li>path_change_force [<code>tier4_planning_msgs::PathChangeModule</code>] : (For remote control)</li> </ul>"},{"location":"planning/behavior_path_planner/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/behavior_path_planner/#parameters-for-drivable-area-expansion","title":"Parameters for drivable area expansion","text":"<p>Optionally, the drivable area can be expanded by a static distance. Expansion parameters are defined for each module of the <code>behavior_path_planner</code> and should be prefixed accordingly (see <code>config/drivable_area_expansion.yaml</code> for an example).</p> Name Unit Type Description Default value drivable_area_right_bound_offset [m] double expansion distance of the right bound 0.0 drivable_area_right_bound_offset [m] double expansion distance of the left bound 0.0 drivable_area_types_to_skip list of strings types of linestrings that are not expanded [road_border]"},{"location":"planning/behavior_path_planner/#behavior-tree","title":"Behavior Tree","text":"<p>In the behavior path planner, the behavior tree mechanism is used to manage which modules are activated in which situations. In general, this \"behavior manager\" like function is expected to become bigger as more and more modules are added in the future. To improve maintainability, we adopted the behavior tree. The behavior tree has the following advantages: easy visualization, easy configuration management (behaviors can be changed by replacing configuration files), and high scalability compared to the state machine.</p> <p>The current behavior tree structure is shown below. Each modules (LaneChange, Avoidance, etc) have Request, Ready, and Plan nodes as a common function.</p> <ul> <li>Request: Check if there is a request from the module (e.g. LaneChange has a request when there are multi-lanes and the vehicle is not on the preferred lane),</li> <li>Ready: Check if it is safe to execute the plan (e.g. LaneChange is ready when the lane_change path does not have any conflicts with other dynamic objects on S-T space).</li> <li>Plan: Calculates path and set it to the output of the BehaviorTree. Until the internal status returns SUCCESS, it will be in running state and will not transit to another module.</li> <li>ForceApproval: A lane change-specific node that overrides the result of Ready when a forced lane change command is given externally.</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/#lane-following","title":"Lane Following","text":"<p>Generate path from center line of the route.</p>"},{"location":"planning/behavior_path_planner/#special-case","title":"special case","text":"<p>In the case of a route that requires a lane change, the path is generated with a specific distance margin (default: <code>12.0 m</code>) from the end of the lane to ensure the minimum distance for lane change. (This function works not only for lane following but also for all modules.)</p> <p></p>"},{"location":"planning/behavior_path_planner/#lane-change","title":"Lane Change","text":"<p>The Lane Change module is activated when lane change is needed and can be safely executed.</p>"},{"location":"planning/behavior_path_planner/#start-lane-change-condition-need-to-meet-all-of-the-conditions-below","title":"start lane change condition (need to meet all of the conditions below)","text":"<ul> <li>lane change request condition<ul> <li>The ego-vehicle isn\u2019t on a <code>preferred_lane</code>.</li> <li>There is neither intersection nor crosswalk on the path of the lane change</li> </ul> </li> <li>lane change ready condition<ul> <li>Path of the lane change doesn\u2019t collide with other objects (see the figure below)</li> <li>Lane change is allowed by an operator</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#finish-lane-change-condition-need-to-meet-any-of-the-conditions-below","title":"finish lane change condition (need to meet any of the conditions below)","text":"<ul> <li>Certain distance (default: <code>3.0 m</code>) have passed after the vehicle move to the target lane.</li> <li>Before the base_link exceeds white dotted line, a collision with the object was predicted (only if <code>enable_abort_lane_change</code> is true.)<ul> <li>However, when current velocity is lower than <code>10km/h</code> and the ego-vehicle is near the lane end, the lane change isn\u2019t aborted and the ego-vehicle plans to stop. Then, after no collision is predicted, the ego-vehicle resume the lane change.</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#collision-prediction-with-obstacles","title":"Collision prediction with obstacles","text":"<ol> <li>Predict each position of the ego-vehicle and other vehicle on the target lane of the lane change at t1, t2,...tn</li> <li>If a distance between the ego-vehicle and other one is lower than the threshold (<code>ego_velocity * stop_time (2s)</code>) at each time, that is judged as a collision</li> </ol>"},{"location":"planning/behavior_path_planner/#path-generation","title":"Path Generation","text":"<p>Path to complete the lane change in <code>n + m</code> seconds under an assumption that a velocity of the ego-vehicle is constant. Once the lane change is executed, the path won\u2019t be updated until the \"finish-lane-change-condition\" is satisfied.</p> <p></p>"},{"location":"planning/behavior_path_planner/#avoidance","title":"Avoidance","text":"<p>The Avoidance module is activated when dynamic objects to be avoided exist and can be safely avoided.</p>"},{"location":"planning/behavior_path_planner/#target-objects","title":"Target objects","text":"<p>Dynamic objects that satisfy the following conditions are considered to be avoidance targets.</p> <ul> <li>Semantics type is <code>CAR</code>, <code>TRUCK</code>, or <code>BUS</code></li> <li>low speed (default: &lt; <code>1.0 m/s</code>)</li> <li>Not being around center line (default: deviation from center &gt; <code>0.5 m</code>)</li> <li>Any footprint of the object in on the detection area (driving lane + <code>1 m</code> margin for lateral direction).</li> <li>Object is not behind ego(default: &gt; -<code>2.0 m</code>) or too far(default: &lt; <code>150.0 m</code>) and object is not behind the path goal.</li> </ul>"},{"location":"planning/behavior_path_planner/#how-to-generate-avoidance-path","title":"How to generate avoidance path","text":"<p>To prevent sudden changes in the vicinity of the ego-position, an avoidance path is generated after a certain distance of straight lane driving. The process of generating the avoidance path is as follows:</p> <ol> <li>detect the target object and calculate the lateral shift distance (default: <code>2.0 m</code> from closest footprint point)</li> <li>calculate the avoidance distance within the constraint of lateral jerk. (default: <code>0.3 ~ 2.0 m/s3</code>)<ol> <li>If the maximum jerk constraint is exceeded to keep the straight margin, the avoidance path generation is aborted.</li> </ol> </li> <li>generates the smooth path with given avoiding distance and lateral shift length.</li> <li>generate \"return to center\" path if there is no next target within a certain distance (default: <code>50 m</code>) after the current target.</li> </ol>"},{"location":"planning/behavior_path_planner/#single-objects-case","title":"single objects case","text":""},{"location":"planning/behavior_path_planner/#multiple-objects-case","title":"multiple objects case","text":"<p>If there are multiple avoidance targets and the lateral distances of these are close (default: &lt; <code>0.5m</code>), those objects are considered as a single avoidance target and avoidance is performed simultaneously with a single steering operation. If the lateral distances of the avoidance targets differ greatly than threshold, multiple steering operations are used to avoid them.</p> <p></p>"},{"location":"planning/behavior_path_planner/#smooth-path-generation","title":"Smooth path generation","text":"<p>The path generation is computed in Frenet coordinates. The shift length profile for avoidance is generated by four segmental constant jerk polynomials, and added to the original path. Since the lateral jerk can be approximately seen as a steering maneuver, this calculation yields a result similar to a Clothoid curve.</p> <p>For more detail, see behavior-path-planner-path-generation.</p> <p></p>"},{"location":"planning/behavior_path_planner/#unimplemented-parts-limitations-for-avoidance","title":"Unimplemented parts / limitations for avoidance","text":"<ul> <li>collision check is not implemented</li> <li>shift distance should be variable depending on the situation (left/right is free or occupied). Now it is a fixed value.</li> <li>collaboration with \"avoidance-by-lane-change\".</li> <li>specific rules for traffic condition (need to back to the center line before entering an intersection).</li> </ul>"},{"location":"planning/behavior_path_planner/#pull-over","title":"Pull Over","text":"<p>The Pull Over module is activated when goal is in the shoulder lane. Ego-vehicle will stop at the goal.</p>"},{"location":"planning/behavior_path_planner/#start-pull-over-condition-need-to-meet-all-of-the-conditions-below","title":"start pull over condition (need to meet all of the conditions below)","text":"<ul> <li> <p>Pull over request condition</p> <ul> <li>The goal is in shoulder lane and the ego-vehicle is in road lane.</li> <li>The distance between the goal and ego-vehicle is somewhat close.<ul> <li>It is shorter than <code>request_length</code>(default: &lt; <code>200m</code>).</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>Pull over ready condition</p> <ul> <li>It is always ready if the conditions of the request are met.</li> </ul> </li> </ul> <ul> <li>Pull over start condition<ul> <li>Generate safe parking goal and path.<ul> <li>The generated path does not collide with obstacles.</li> </ul> </li> <li>Pull over is allowed by an operator<ul> <li>If pull over path is not allowed by an operator, leave distance required for pull over and stop.</li> </ul> </li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#finish-pull-over-condition-need-to-meet-any-of-the-conditions-below","title":"finish pull over condition (need to meet any of the conditions below)","text":"<ul> <li>The distance to the goal from your vehicle is lower than threshold (default: &lt; <code>1m</code>)</li> <li>The ego-vehicle is stopped.<ul> <li>The speed is lower than threshold (default: &lt; <code>0.01m/s</code>).</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#general-parameters-for-pull_over","title":"General parameters for pull_over","text":"Name Unit Type Description Default value request_length [m] double when the ego-vehicle approaches the goal by this distance, the module is activated. 200.0 th_arrived_distance [m] double distance threshold for arrival of path termination 1.0 th_stopped_velocity [m/s] double velocity threshold for arrival of path termination 0.01 th_stopped_time [s] double time threshold for arrival of path termination 2.0 pull_over_velocity [m/s] double decelerate to this speed by the goal search area 2.0 pull_over_minimum_velocity [m/s] double speed of pull_over after stopping once. this prevents excessive acceleration. 1.38 margin_from_boundary [m] double distance margin from edge of the shoulder lane 0.5 decide_path_distance [m] double decide path if it approaches this distance relative to the parking position. after that, no path planning and goal search are performed 10.0 maximum_deceleration [m/s2] double maximum deceleration. it prevents sudden deceleration when a parking path cannot be found suddenly 1.0"},{"location":"planning/behavior_path_planner/#collision-check","title":"collision check","text":""},{"location":"planning/behavior_path_planner/#occupancy-grid-based-collision-check","title":"occupancy grid based collision check","text":"<p>Generate footprints from ego-vehicle path points and determine obstacle collision from the value of occupancy_grid of the corresponding cell.</p>"},{"location":"planning/behavior_path_planner/#parameters-for-occupancy-grid-based-collision-check","title":"Parameters for occupancy grid based collision check","text":"Name Unit Type Description Default value use_occupancy_grid - bool flag whether to use occupancy grid for collision check true use_occupancy_grid_for_longitudinal_margin - bool flag whether to use occupancy grid for keeping longitudinal margin false occupancy_grid_collision_check_margin [m] double margin to calculate ego-vehicle cells from footprint. 0.0 theta_size - int size of theta angle to be considered. angular resolution for collision check will be 2\\pi / theta_size [rad]. 360 obstacle_threshold - int threshold of cell values to be considered as obstacles 60"},{"location":"planning/behavior_path_planner/#parameters-for-object-recognition-based-collision-check","title":"Parameters for object recognition based collision check","text":"Name Unit Type Description Default value use_object_recognition - bool flag whether to use object recognition for collision check true object_recognition_collision_check_margin [m] double margin to calculate ego-vehicle cells from footprint. 1.0"},{"location":"planning/behavior_path_planner/#goal-search","title":"Goal Search","text":"<p>If it is not possible to park safely at a given goal, <code>/planning/scenario_planning/modified_goal</code> is searched for in certain range of the shoulder lane.</p> <p>Video of how goal search works</p>"},{"location":"planning/behavior_path_planner/#parameters-for-goal-search","title":"Parameters for goal search","text":"Name Unit Type Description Default value search_priority - string In case <code>efficient_path</code> use a goal that can generate an efficient path( priority is <code>shift_parking</code> -&gt; <code>arc_forward_parking</code> -&gt; <code>arc_backward_parking</code>). In case <code>close_goal</code> use the closest goal to the original one. efficient_path enable_goal_research - double flag whether to search goal true forward_goal_search_length [m] double length of forward range to be explored from the original goal 20.0 backward_goal_search_length [m] double length of backward range to be explored from the original goal 20.0 goal_search_interval [m] double distance interval for goal search 2.0 longitudinal_margin [m] double margin between ego-vehicle at the goal position and obstacles 3.0 max_lateral_offset [m] double maximum offset of goal search in the lateral direction 3.0 lateral_offset_interval [m] double distance interval of goal search in the lateral direction 3.0 ignore_distance_from_lane_start [m] double distance from start of pull over lanes for ignoring goal candidates 15.0"},{"location":"planning/behavior_path_planner/#path-generation_1","title":"Path Generation","text":"<p>There are three path generation methods. The path is generated with a certain margin (default: <code>0.5 m</code>) from left boundary of shoulder lane.</p>"},{"location":"planning/behavior_path_planner/#shift-parking","title":"shift parking","text":"<p>Pull over distance is calculated by the speed, lateral deviation, and the lateral jerk. The lateral jerk is searched for among the predetermined minimum and maximum values, and the one satisfies ready conditions described above is output.</p> <ol> <li>Apply uniform offset to centerline of shoulder lane for ensuring margin</li> <li>In the section between merge start and end, path is shifted by a method that is used to generate avoidance path (four segmental constant jerk polynomials)</li> <li>Combine this path with center line of road lane</li> </ol> <p></p> <p>Video of how shift_parking works</p>"},{"location":"planning/behavior_path_planner/#parameters-for-shift-parking","title":"Parameters for shift parking","text":"Name Unit Type Description Default value enable_shift_parking [-] bool flag whether to enable shift parking true pull_over_sampling_num [-] int Number of samplings in the minimum to maximum range of lateral_jerk 4 maximum_lateral_jerk [m/s3] double maximum lateral jerk 2.0 minimum_lateral_jerk [m/s3] double minimum lateral jerk 0.5 deceleration_interval [m] double distance of deceleration section 15.0 after_pull_over_straight_distance [m] double straight line distance after pull over end point 5.0"},{"location":"planning/behavior_path_planner/#geometric-parallel-parking","title":"geometric parallel parking","text":"<p>Generate two arc paths with discontinuous curvature. It stops twice in the middle of the path to control the steer on the spot. There are two path generation methods: forward and backward. See also [1] for details of the algorithm. There is also a simple python implementation.</p>"},{"location":"planning/behavior_path_planner/#parameters-geometric-parallel-parking","title":"Parameters geometric parallel parking","text":"Name Unit Type Description Default value arc_path_interval [m] double interval between arc path points 1.0 pull_over_max_steer_rad [rad] double maximum steer angle for path generation. it may not be possible to control steer up to max_steer_angle in vehicle_info when stopped 0.35"},{"location":"planning/behavior_path_planner/#arc-forward-parking","title":"arc forward parking","text":"<p>Generate two forward arc paths.</p> <p></p> <p>Video of how arc_forward_parking works</p>"},{"location":"planning/behavior_path_planner/#parameters-arc-forward-parking","title":"Parameters arc forward parking","text":"Name Unit Type Description Default value enable_arc_forward_parking [-] bool flag whether to enable arc forward parking true after_forward_parking_straight_distance [m] double straight line distance after pull over end point 2.0 forward_parking_velocity [m/s] double velocity when forward parking 1.38 forward_parking_lane_departure_margin [m/s] double lane departure margin for front left corner of ego-vehicle when forward parking 0.0"},{"location":"planning/behavior_path_planner/#arc-backward-parking","title":"arc backward parking","text":"<p>Generate two backward arc paths.</p> <p>.</p> <p>Video of how arc_forward_parking works</p>"},{"location":"planning/behavior_path_planner/#parameters-arc-backward-parking","title":"Parameters arc backward parking","text":"Name Unit Type Description Default value enable_arc_backward_parking [-] bool flag whether to enable arc backward parking true after_backward_parking_straight_distance [m] double straight line distance after pull over end point 2.0 backward_parking_velocity [m/s] double velocity when backward parking -1.38 backward_parking_lane_departure_margin [m/s] double lane departure margin for front right corner of ego-vehicle when backward 0.0"},{"location":"planning/behavior_path_planner/#unimplemented-parts-limitations-for-pull-over","title":"Unimplemented parts / limitations for pull over","text":"<ul> <li>parking on the right shoulder is not allowed</li> <li>if the distance from the edge of the shoulder is too narrow, parking is not possible.<ul> <li>if <code>margin_from_boundary</code> is set to <code>0.0</code>, etc., a path without deviation cannot be found.</li> </ul> </li> <li>geometric_parallel_parking assumes road lanes and shoulder lanes are straight and parallel.<ul> <li>sift parking is possible on curved lanes.</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#pull-out","title":"Pull Out","text":"<p>The Pull Out module is activated when ego-vehicle is stationary and footprint of ego-vehicle is included in shoulder lane. This module ends when ego-vehicle merges into the road.</p>"},{"location":"planning/behavior_path_planner/#start-pull-out-condition-need-to-meet-all-of-the-conditions-below","title":"start pull out condition (need to meet all of the conditions below)","text":"<ul> <li> <p>Pull out request condition</p> <ul> <li>The speed of the vehicle is 0.</li> <li>Somewhere in footprint of ego-vehicle is included in shoulder lane</li> <li>The distance from ego-vehicle to the destination is long enough for pull out</li> </ul> </li> </ul> <ul> <li> <p>Pull out ready condition</p> <ul> <li>It is always ready if the conditions of the request are met.</li> </ul> </li> </ul> <ul> <li>Pull out start condition<ul> <li>Generate safe path which does not collide with obstacles<ul> <li>If safe path cannot be generated from the current position, safe path from a receding position is searched.</li> </ul> </li> <li>Pull out is allowed by an operator</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#finish-pull-out-condition-need-to-meet-any-of-the-conditions-below","title":"finish pull out condition (need to meet any of the conditions below)","text":"<ul> <li>Exceeding the pull out end point by more than the threshold (default: <code>1.0m</code>)</li> </ul>"},{"location":"planning/behavior_path_planner/#general-parameters-for-pull_out","title":"General parameters for pull_out","text":"Name Unit Type Description Default value th_arrived_distance_m [m] double distance threshold for arrival of path termination 1.0 th_stopped_velocity_mps [m/s] double velocity threshold for arrival of path termination 0.01 th_stopped_time_sec [s] double time threshold for arrival of path termination 1.0 collision_check_margin [m] double Obstacle collision check margin 1.0 collision_check_distance_from_end [m] double collision check distance from end point. currently only for pull out 15.0"},{"location":"planning/behavior_path_planner/#safe-check-with-obstacles-in-shoulder-lane","title":"Safe check with obstacles in shoulder lane","text":"<ol> <li>Calculate ego-vehicle's footprint on pull out path between from current position to pull out end point. (Illustrated by blue frame)</li> <li>Calculate object's polygon which is located in shoulder lane</li> <li>If a distance between the footprint and the polygon is lower than the threshold (default: <code>1.0 m</code>), that is judged as a unsafe path</li> </ol>"},{"location":"planning/behavior_path_planner/#path-generation_2","title":"Path Generation","text":"<p>There are two path generation methods.</p>"},{"location":"planning/behavior_path_planner/#shift-pull-out","title":"shift pull out","text":"<p>Pull out distance is calculated by the speed, lateral deviation, and the lateral jerk. The lateral jerk is searched for among the predetermined minimum and maximum values, and the one that generates a safe path is selected.</p> <ul> <li>Generate the shoulder lane centerline and shift it to the current position.</li> <li>In the section between merge start and end, path is shifted by a method that is used to generate avoidance path (four segmental constant jerk polynomials)</li> <li>Combine this path with center line of road lane</li> </ul> <p></p> <p>Video of how shift pull out works</p>"},{"location":"planning/behavior_path_planner/#parameters-for-shift-pull-out","title":"parameters for shift pull out","text":"Name Unit Type Description Default value enable_shift_pull_out - bool flag whether to enable shift pull out true shift_pull_out_velocity [m/s] double velocity of shift pull out 2.0 pull_out_sampling_num - int Number of samplings in the minimum to maximum range of lateral_jerk 4 maximum_lateral_jerk [m/s3] double maximum lateral jerk 2.0 minimum_lateral_jerk [m/s3] double minimum lateral jerk 0.5 minimum_shift_pull_out_distance [m] double minimum shift pull out distance. if calculated pull out distance is shorter than this, use this for path generation. 20.0"},{"location":"planning/behavior_path_planner/#geometric-pull-out","title":"geometric pull out","text":"<p>Generate two arc paths with discontinuous curvature. Ego-vehicle stops once in the middle of the path to control the steer on the spot. See also [1] for details of the algorithm.</p> <p></p> <p>Video of how geometric pull out works</p>"},{"location":"planning/behavior_path_planner/#parameters-for-geometric-pull-out","title":"parameters for geometric pull out","text":"Name Unit Type Description Default value enable_geometric_pull_out - bool flag whether to enable geometric pull out true geometric_pull_out_velocity [m/s] double velocity of geometric pull out 1.0 arc_path_interval [m] double path points interval of arc paths of geometric pull out 1.0 lane_departure_margin [m] double margin of deviation to lane right 0.2 pull_out_max_steer_angle [rad] double maximum steer angle for path generation 0.26"},{"location":"planning/behavior_path_planner/#backward-pull-out-start-point-search","title":"backward pull out start point search","text":"<p>If a safe path cannot be generated from the current position, search backwards for a pull out start point at regular intervals(default: <code>2.0</code>).</p> <p></p> <p>Video of how pull out after backward driving works</p> Name Unit Type Description Default value enable_back - bool flag whether to search backward for start_point true enable_back - bool In the case of <code>efficient_path</code>, use efficient paths even if the back distance is longer. In case of <code>short_back_distance</code>, use a path with as short a back distance efficient_path max_back_distance [m] double maximum back distance 30.0 backward_search_resolution [m] double distance interval for searching backward pull out start point 2.0 backward_path_update_duration [s] double time interval for searching backward pull out start point. this prevents chattering between back driving and pull_out 3.0 ignore_distance_from_lane_end [m] double distance from end of pull out lanes for ignoring start candidates 15.0"},{"location":"planning/behavior_path_planner/#unimplemented-parts-limitations-for-pull-put","title":"Unimplemented parts / limitations for pull put","text":"<ul> <li>pull out from the right shoulder lane to the left lane is not allowed.</li> <li>The safety of the road lane is not judged<ul> <li>Collision prediction is not performed for vehicles approaching from behind the road lane.</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/#side-shift","title":"Side Shift","text":"<p>The role of the Side Shift module is to shift the reference path laterally in response to external instructions (such as remote operation).</p>"},{"location":"planning/behavior_path_planner/#parameters-for-path-generation","title":"Parameters for path generation","text":"<p>In the figure, <code>straight margin distance</code> is to avoid sudden shifting, that is calculated by <code>max(min_distance_to_start_shifting, ego_speed * time_to_start_shifting)</code> . The <code>shifting distance</code> is calculated by jerk, with minimum speed and minimum distance parameter, described below. The minimum speed is used to prevent sharp shift when ego vehicle is stopped.</p> Name Unit Type Description Default value min_distance_to_start_shifting [m] double minimum straight distance before shift start. 5.0 time_to_start_shifting [s] double time of minimum straight distance before shift start. 1.0 shifting_lateral_jerk [m/s3] double lateral jerk to calculate shifting distance. 0.2 min_shifting_distance [m] double the shifting distance is longer than this length. 5.0 min_shifting_speed [m/s] double lateral jerk is calculated with the greater of current_speed or this speed. 5.56"},{"location":"planning/behavior_path_planner/#smooth-goal-connection","title":"Smooth goal connection","text":"<p>If the target path contains a goal, modify the points of the path so that the path and the goal are connected smoothly. This process will change the shape of the path by the distance of <code>refine_goal_search_radius_range</code> from the goal. Note that this logic depends on the interpolation algorithm that will be executed in a later module (at the moment it uses spline interpolation), so it needs to be updated in the future.</p> <p></p>"},{"location":"planning/behavior_path_planner/#references-external-links","title":"References / External links","text":"<p>This module depends on the external BehaviorTreeCpp library.</p> <p>[1] H. Vorobieva, S. Glaser, N. Minoiu-Enache, and S. Mammar, \u201cGeometric path planning for automatic parallel parking in tiny spots\u201d, IFAC Proceedings Volumes, vol. 45, no. 24, pp. 36\u201342, 2012.</p>"},{"location":"planning/behavior_path_planner/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<p>-</p>"},{"location":"planning/behavior_path_planner/#related-issues","title":"Related issues","text":"<p>-</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/","title":"Avoidance Module","text":"<p>This is a rule-based path planning module designed for obstacle avoidance.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#purpose-role","title":"Purpose / Role","text":"<p>This module is designed for rule-based avoidance that is easy for developers to design its behavior. It generates avoidance path parameterized by intuitive parameters such as lateral jerk and avoidance distance margin. This makes it possible to pre-define avoidance behavior.</p> <p>In addition, the approval interface of behavior_path_planner allows external users / modules (e.g. remote operation) to intervene the decision of the vehicle behavior.\u3000 This function is expected to be used, for example, for remote intervention in emergency situations or gathering information on operator decisions during development.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#limitations","title":"Limitations","text":"<p>This module allows developers to design vehicle behavior in avoidance planning using specific rules. Due to the property of rule-based planning, the algorithm can not compensate for not colliding with obstacles in complex cases. This is a trade-off between \"be intuitive and easy to design\" and \"be hard to tune but can handle many cases\". This module adopts the former policy and therefore this output should be checked more strictly in the later stage. In the .iv reference implementation, there is another avoidance module in motion planning module that uses optimization to handle the avoidance in complex cases. (Note that, the motion planner needs to be adjusted so that the behavior result will not be changed much in the simple case and this is a typical challenge for the behavior-motion hierarchical architecture.)</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#why-is-avoidance-in-behavior-module","title":"Why is avoidance in behavior module?","text":"<p>This module executes avoidance over lanes, and the decision requires the lane structure information to take care of traffic rules (e.g. it needs to send an indicator signal when the vehicle crosses a lane). The difference between motion and behavior module in the planning stack is whether the planner takes traffic rules into account, which is why this avoidance module exists in the behavior module.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The following figure shows a simple explanation of the logic for avoidance path generation. First, target objects are picked up, and shift requests are generated for each object. These shift requests are generated by taking into account the lateral jerk required for avoidance (red lines). Then these requests are merged and the shift points are created on the reference path (blue line). Filtering operations are performed on the shift points such as removing unnecessary shift points (yellow line), and finally a smooth avoidance path is generated by combining Clothoid-like curve primitives (green line).</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#details-of-functions","title":"Details of Functions","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#how-to-decide-the-target-obstacles","title":"How to decide the target obstacles","text":"<p>The avoidance target should be limited to stationary objects (you should not avoid a vehicle waiting at a traffic light even if it blocks your path). Therefore, target vehicles for avoidance should meet the following specific conditions.</p> <ul> <li>It is in the vicinity of your lane (parametrized)</li> <li>It is stopped (estimated speed is lower than threshold)<ul> <li>This means that overtaking is not supported (will be supported in the future).</li> </ul> </li> <li>It is a specific class.<ul> <li>User can limit avoidance targets (e.g. do not avoid unknown-class targets).</li> </ul> </li> <li>It is not being in the center of the route<ul> <li>This means that the vehicle is parked on the edge of the lane. This prevents the vehicle from avoiding a vehicle waiting at a traffic light in the middle of the lane. However, this is not an appropriate implementation for the purpose. Even if a vehicle is in the center of the lane, it should be avoided if it has its hazard lights on, and this is a point that should be improved in the future as the recognition performance improves.</li> </ul> </li> <li>Object is not behind ego(default: &gt; -<code>2.0 m</code>) or too far(default: &lt; <code>150.0 m</code>) and object is not behind the path goal.</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#compensation-for-detection-lost","title":"Compensation for detection lost","text":"<p>In order to prevent chattering of recognition results, once an obstacle is targeted, it is hold for a while even if it disappears. This is effective when recognition is unstable. However, since it will result in over-detection (increase a number of false-positive), it is necessary to adjust parameters according to the recognition accuracy (if <code>object_last_seen_threshold = 0.0</code>, the recognition result is 100% trusted).</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#computing-shift-length-and-shift-points","title":"Computing Shift Length and Shift Points","text":"<p>The lateral shift length is affected by 4 variables, namely <code>lateral_collision_safety_buffer</code>, <code>lateral_collision_margin</code>, <code>vehicle_width</code> and <code>overhang_distance</code>. The equation is as follows</p> <pre><code>avoid_margin = lateral_collision_margin + lateral_collision_safety_buffer + 0.5 * vehicle_width\nmax_allowable_lateral_distance = to_road_shoulder_distance - road_shoulder_safety_margin - 0.5 * vehicle_width\nif(isOnRight(o))\n{\nshift_length = avoid_margin + overhang_distance\n}\nelse\n{\nshift_length = avoid_margin - overhang_distance\n}\n</code></pre> <p>The following figure illustrates these variables(This figure just shows the max value of lateral shift length).</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#rationale-of-having-safety-buffer-and-safety-margin","title":"Rationale of having safety buffer and safety margin","text":"<p>To compute the shift length, additional parameters that can be tune are <code>lateral_collision_safety_buffer</code> and <code>road_shoulder_safety_margin</code>.</p> <ul> <li>The <code>lateral_collision_safety_buffer</code> parameter is used to set a safety gap that will act as the final line of defense when computing avoidance path.<ul> <li>The rationale behind having this parameter is that the parameter <code>lateral_collision_margin</code> might be changing according to the situation for various reasons. Therefore, <code>lateral_collision_safety_buffer</code> will act as the final line of defense in case of the usage of <code>lateral_collision_margin</code> fails.</li> <li>It is recommended to set the value to more than half of the ego vehicle's width.</li> </ul> </li> <li>The <code>road_shoulder_safety_margin</code> will prevent the module from generating a path that might cause the vehicle to go too near the road shoulder or adjacent lane dividing line.</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#generating-path-only-within-lanelet-boundaries","title":"Generating path only within lanelet boundaries","text":"<p>The shift length is set as a constant value before the feature is implemented. Setting the shift length like this will cause the module to generate an avoidance path regardless of actual environmental properties. For example, the path might exceed the actual road boundary or go towards a wall. Therefore, to address this limitation, in addition to how to decide the target obstacle, the module also takes into account the following additional element</p> <ul> <li>The obstacles' current lane and position.</li> <li>The road shoulder with reference to the direction to avoid.</li> </ul> <p>These elements are used to compute the distance from the object to the road's shoulder (<code>to_road_shoulder_distance</code>). The parameters <code>enable_avoidance_over_same_direction</code> and <code>enable_avoidance_over_opposite_direction</code> allows further configuration of the to <code>to_road_shoulder_distance</code>. The following image illustrates the configuration.</p> <p></p> <p>If one of the following conditions is <code>false</code>, then the shift point will not be generated.</p> <ul> <li>The distance to shoulder of road is enough</li> </ul> <pre><code>avoid_margin = lateral_collision_margin + lateral_collision_safety_buffer + 0.5 * vehicle_width\navoid_margin &lt;= (to_road_shoulder_distance - 0.5 * vehicle_width - road_shoulder_safety_margin)\n</code></pre> <ul> <li> <p>The obstacle intrudes into the current driving path.</p> <ul> <li> <p>when the object is on right of the path</p> <pre><code>-overhang_dist&lt;(lateral_collision_margin + lateral_collision_safety_buffer + 0.5 * vehicle_width)\n</code></pre> </li> </ul> <ul> <li> <p>when the object is on left of the path</p> <pre><code>overhang_dist&lt;(lateral_collision_margin + lateral_collision_safety_buffer + 0.5 * vehicle_width)\n</code></pre> </li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#flow-chart-of-the-process","title":"Flow-chart of the process","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#how-to-decide-the-path-shape","title":"How to decide the path shape","text":"<p>Generate shift points for obstacles with given lateral jerk. These points are integrated to generate an avoidance path. The detailed process flow for each case corresponding to the obstacle placement are described below. The actual implementation is not separated for each case, but the function corresponding to <code>multiple obstacle case (both directions)</code> is always running.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#one-obstacle-case","title":"One obstacle case","text":"<p>The lateral shift distance to the obstacle is calculated, and then the shift point is generated from the ego vehicle speed and the given lateral jerk as shown in the figure below. A smooth avoidance path is then calculated based on the shift point.</p> <p>Additionally, the following processes are executed in special cases.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#lateral-jerk-relaxation-conditions","title":"Lateral jerk relaxation conditions","text":"<ul> <li>If the ego vehicle is close to the avoidance target, the lateral jerk will be relaxed up to the maximum jerk</li> <li>When returning to the center line after avoidance, if there is not enough distance left to the goal (end of path), the jerk condition will be relaxed as above.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#minimum-velocity-relaxation-conditions","title":"Minimum velocity relaxation conditions","text":"<p>There is a problem that we can not know the actual speed during avoidance in advance. This is especially critical when the ego vehicle speed is 0. To solve that, this module provides a parameter for the minimum avoidance speed, which is used for the lateral jerk calculation when the vehicle speed is low.</p> <ul> <li>If the ego vehicle speed is lower than \"nominal\" minimum speed, use the minimum speed in the calculation of the jerk.</li> <li>If the ego vehicle speed is lower than \"sharp\" minimum speed and a nominal lateral jerk is not enough for avoidance (the case where the ego vehicle is stopped close to the obstacle), use the \"sharp\" minimum speed in the calculation of the jerk (it should be lower than \"nominal\" speed).</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#multiple-obstacle-case-one-direction","title":"Multiple obstacle case (one direction)","text":"<p>Generate shift points for multiple obstacles. All of them are merged to generate new shift points along the reference path. The new points are filtered (e.g. remove small-impact shift points), and the avoidance path is computed for the filtered shift points.</p> <p>Merge process of raw shift points: check the shift length on each path points. If the shift points are overlapped, the maximum shift value is selected for the same direction.</p> <p>For the details of the shift point filtering, see filtering for shift points.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#multiple-obstacle-case-both-direction","title":"Multiple obstacle case (both direction)","text":"<p>Generate shift points for multiple obstacles. All of them are merged to generate new shift points. If there are areas where the desired shifts conflict in different directions, the sum of the maximum shift amounts of these areas is used as the final shift amount. The rest of the process is the same as in the case of one direction.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#filtering-for-shift-points","title":"Filtering for shift points","text":"<p>The shift points are modified by a filtering process in order to get the expected shape of the avoidance path. It contains the following filters.</p> <ul> <li>Quantization: Quantize the avoidance width in order to ignore small shifts.</li> <li>Small shifts removal: Shifts with small changes with respect to the previous shift point are unified in the previous shift width.</li> <li>Similar gradient removal: Connect two shift points with a straight line, and remove the shift points in between if their shift amount is in the vicinity of the straight line.</li> <li>Remove momentary returns: For shift points that reduce the avoidance width (for going back to the center line), if there is enough long distance in the longitudinal direction, remove them.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#avoidance-cancelling","title":"Avoidance Cancelling","text":"<p>If <code>enable_update_path_when_object_is_gone</code> parameter is true, Avoidance Module takes different actions according to the situations as follows:</p> <ul> <li>If vehicle stops: If there is any object in the path of the vehicle, the avoidance path is generated. If this object goes away while the vehicle is stopping, the avoidance path will cancelled.</li> <li>If vehicle is in motion, but avoidance maneuver doesn't started: If there is any object in the path of the vehicle, the avoidance path is generated. If this object goes away while the vehicle is not started avoidance maneuver, the avoidance path will cancelled.</li> <li>If vehicle is in motion, avoidance maneuver started: If there is any object in the path of the vehicle, the avoidance path is generated,but if this object goes away while the vehicle is started avoidance maneuver, the avoidance path will not cancelled.</li> </ul> <p>If <code>enable_update_path_when_object_is_gone</code> parameter is false, Avoidance Module doesn't revert generated avoidance path even if path objects are gone.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#how-to-keep-the-consistency-of-the-planning","title":"How to keep the consistency of the planning","text":"<p>TODO</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#parameters","title":"Parameters","text":"<p>The avoidance specific parameter configuration file can be located at <code>src/autoware/launcher/planning_launch/config/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/avoidance/avoidance.param.yaml</code>.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#avoidance-path-generation","title":"Avoidance path generation","text":"Name Unit Type Description Default value resample_interval_for_planning [m] double Path resample interval for avoidance planning path. 0.3 resample_interval_for_output [m] double Path resample interval for output path. Too short interval increases computational cost for latter modules. 4.0 lateral_collision_margin [m] double The lateral distance between ego and avoidance targets. 1.0 lateral_collision_safety_buffer [m] double Creates an additional gap that will prevent the vehicle from getting to near to the obstacle 0.7 longitudinal_collision_margin_min_distance [m] double when complete avoidance motion, there is a distance margin with the object for longitudinal direction. 0.0 longitudinal_collision_margin_time [s] double when complete avoidance motion, there is a time margin with the object for longitudinal direction. 0.0 prepare_time [s] double Avoidance shift starts from point ahead of this time x ego_speed to avoid sudden path change. 2.0 min_prepare_distance [m] double Minimum distance for \"prepare_time\" x \"ego_speed\". 1.0 nominal_lateral_jerk [m/s3] double Avoidance path is generated with this jerk when there is enough distance from ego. 0.2 max_lateral_jerk [m/s3] double Avoidance path gets sharp up to this jerk limit when there is not enough distance from ego. 1.0 min_avoidance_distance [m] double Minimum distance of avoidance path (i.e. this distance is needed even if its lateral jerk is very low) 10.0 min_nominal_avoidance_speed [m/s] double Minimum speed for jerk calculation in a nominal situation (*1). 7.0 min_sharp_avoidance_speed [m/s] double Minimum speed for jerk calculation in a sharp situation (*1). 1.0 max_right_shift_length [m] double Maximum shift length for right direction 5.0 max_left_shift_length [m] double Maximum shift length for left direction 5.0 road_shoulder_safety_margin [m] double Prevents the generated path to come too close to the road shoulders. 0.0 avoidance_execution_lateral_threshold [m] double The lateral distance deviation threshold between the current path and suggested avoidance point to execute avoidance. (*2) 0.499 enable_avoidance_over_same_direction [-] bool Extend avoidance trajectory to adjacent lanes that has same direction. If false, avoidance only happen in current lane. true enable_avoidance_over_opposite_direction [-] bool Extend avoidance trajectory to adjacent lanes that has opposite direction. <code>enable_avoidance_over_same_direction</code> must be <code>true</code> to take effects true enable_update_path_when_object_is_gone [-] bool Reset trajectory when avoided objects are gone. If false, shifted path points remain same even though the avoided objects are gone. false enable_bound_clipping <code>true</code> bool Enable clipping left and right bound of drivable area when obstacles are in the drivable area false <p>(*2) If there are multiple vehicles in a row to be avoided, no new avoidance path will be generated unless their lateral margin difference exceeds this value.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#speed-limit-modification","title":"Speed limit modification","text":"Name Unit Type Description Default value min_avoidance_speed_for_acc_prevention [m] double Minimum speed limit to be applied to prevent acceleration during avoidance. 3.0 max_avoidance_acceleration [m/ss] double Maximum acceleration during avoidance. 0.5"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#object-selection","title":"Object selection","text":"Name Unit Type Description Default value object_check_forward_distance [m] double Forward distance to search the avoidance target. 150.0 object_check_backward_distance [m] double Backward distance to search the avoidance target. 2.0 threshold_distance_object_is_on_center [m] double Vehicles around the center line within this distance will be excluded from avoidance target. 1.0 threshold_speed_object_is_stopped [m/s] double Vehicles with speed greater than this will be excluded from avoidance target. 1.0 detection_area_right_expand_dist [m] double Lanelet expand length for right side to find avoidance target vehicles. 0.0 detection_area_left_expand_dist [m] double Lanelet expand length for left side to find avoidance target vehicles. 1.0 object_last_seen_threshold [s] double For the compensation of the detection lost. The object is registered once it is observed as an avoidance target. When the detection loses, the timer will start and the object will be un-registered when the time exceeds this limit. 2.0"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#allow-avoidance-on-specific-object-type","title":"Allow avoidance on specific object type","text":"Name Unit Type Description Default value car [-] bool Allow avoidance for object type CAR true truck [-] bool Allow avoidance for object type TRUCK true bus [-] bool Allow avoidance for object type BUS true trailer [-] bool Allow avoidance for object type TRAILER true unknown [-] bool Allow avoidance for object type UNKNOWN false bicycle [-] bool Allow avoidance for object type BICYCLE false motorcycle [-] bool Allow avoidance for object type MOTORCYCLE false pedestrian [-] bool Allow avoidance for object type PEDESTRIAN false"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#system","title":"System","text":"Name Unit Type Description Default value publish_debug_marker [-] double Flag to publish debug marker (set <code>false</code> as default since it takes considerable cost). false print_debug_info [-] double Flag to print debug info (set <code>false</code> as default since it takes considerable cost). false"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Planning on the intersection<ul> <li>If it is known that the ego vehicle is going to stop in the middle of avoidance execution (for example, at a red traffic light), sometimes the avoidance should not be executed until the vehicle is ready to move. This is because it is impossible to predict how the environment will change during the stop.\u3000 This is especially important at intersections.</li> </ul> </li> </ul> <ul> <li> <p>Safety Check</p> <ul> <li>In the current implementation, it is only the jerk limit that permits the avoidance execution. It is needed to consider the collision with other vehicles when change the path shape.</li> </ul> </li> </ul> <ul> <li> <p>Consideration of the speed of the avoidance target</p> <ul> <li>In the current implementation, only stopped vehicle is targeted as an avoidance target. It is needed to support the overtaking function for low-speed vehicles, such as a bicycle. (It is actually possible to overtake the low-speed objects by changing the parameter, but the logic is not supported and thus the safety cannot be guaranteed.)</li> <li>The overtaking (e.g., to overtake a vehicle running in front at 20 km/h at 40 km/h) may need to be handled outside the avoidance module. It should be discussed which module should handle it.</li> </ul> </li> </ul> <ul> <li> <p>Cancel avoidance when target disappears</p> <ul> <li>In the current implementation, even if the avoidance target disappears, the avoidance path will remain. If there is no longer a need to avoid, it must be canceled.</li> </ul> </li> </ul> <ul> <li> <p>Improved performance of avoidance target selection</p> <ul> <li>Essentially, avoidance targets are judged based on whether they are static objects or not. For example, a vehicle waiting at a traffic light should not be avoided because we know that it will start moving in the future. However this decision cannot be made in the current Autoware due to the lack of the perception functions. Therefore, the current avoidance module limits the avoidance target to vehicles parked on the shoulder of the road, and executes avoidance only for vehicles that are stopped away from the center of the lane. However, this logic cannot avoid a vehicle that has broken down and is stopped in the center of the lane, which should be recognized as a static object by the perception module. There is room for improvement in the performance of this decision.</li> </ul> </li> </ul> <ul> <li>Resampling path<ul> <li>Now the rough resolution resampling is processed to the output path in order to reduce the computational cost for the later modules. This resolution is set to a uniformly large value \u3000(e.g. <code>5m</code>), but small resolution should be applied for complex paths.</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#how-to-debug","title":"How to debug","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#publishing-visualization-marker","title":"Publishing Visualization Marker","text":"<p>Developers can see what is going on in each process by visualizing all the avoidance planning process outputs. The example includes target vehicles, shift points for each object, shift points after each filtering process, etc.</p> <p></p> <p>To enable the debug marker, execute <code>ros2 param set /planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner avoidance.publish_debug_marker true</code> (no restart is needed) or simply set the <code>publish_debug_marker</code> to <code>true</code> in the <code>avoidance.param.yaml</code> for permanent effect (restart is needed). Then add the marker <code>/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/debug/avoidance</code> in <code>rviz2</code>.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_avoidance-design/#echoing-debug-message-to-find-out-why-the-objects-were-ignored","title":"Echoing debug message to find out why the objects were ignored","text":"<p>If for some reason, no shift point is generated for your object, you can check for the failure reason via <code>ros2 topic echo</code>.</p> <p></p> <p>To print the debug message, just run the following</p> <pre><code>ros2 topic echo /planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/debug/avoidance_debug_message_array\n</code></pre>"},{"location":"planning/behavior_path_planner/behavior_path_planner_design_limitations/","title":"Design limitation","text":"<p>The document describes the limitations that are currently present in the <code>behavior_path_planner</code> module.</p> <p>The following items (but not limited to) fall in the scope of limitation:</p> <ul> <li>limitations due to the third-party API design and requirement</li> <li>limitations due to any shortcoming out of the developer's control.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_design_limitations/#limitation-multiple-connected-opposite-lanes-require-linestring-with-shared-id","title":"Limitation: Multiple connected opposite lanes require Linestring with shared ID","text":"<p>To fully utilize the <code>Lanelet2</code>'s API, the design of the vector map (<code>.osm</code>) needs to follow all the criteria described in <code>Lanelet2</code> documentation. Specifically, in the case of 2 or more lanes, the Linestrings that divide the current lane with the opposite/adjacent lane need to have a matching <code>Linestring ID</code>. Assume the following ideal case.</p> <p></p> <p>In the image, <code>Linestring ID51</code> is shared by <code>Lanelet A</code> and <code>Lanelet B</code>. Hence we can directly use the available <code>left</code>, <code>adjacentLeft</code>, <code>right</code>, <code>adjacentRight</code> and <code>findUsages</code> method within <code>Lanelet2</code>'s API to directly query the direction and opposite lane availability.</p> <pre><code>const auto right_lane = routing_graph_ptr_-&gt;right(lanelet);\nconst auto adjacent_right_lane = routing_graph_ptr_-&gt;adjacentRight(lanelet);\nconst auto opposite_right_lane = lanelet_map_ptr_-&gt;laneletLayer.findUsages(lanelet.rightBound().invert());\n</code></pre> <p>The following images show the situation where these API does not work directly. This means that we cannot use them straight away, and several assumptions and logical instruction are needed to make these APIs work.</p> <p></p> <p>In this example (multiple linestring issues), <code>Lanelet C</code> contains <code>Linestring ID61</code> and <code>ID62</code>, while <code>Lanelet D</code> contains <code>Linestring ID63</code> and <code>ID 64</code>. Although the <code>Linestring ID62</code> and <code>ID64</code> have identical point IDs and seem visually connected, the API will treat these Linestring as though they are separated. When it searches for any <code>Lanelet</code> that is connected via <code>Linestring ID62</code>, it will return <code>NULL</code>, since <code>ID62</code> only connects to <code>Lanelet C</code> and not other <code>Lanelet</code>.</p> <p>Although, in this case, it is possible to forcefully search the lanelet availability by checking the lanelet that contains the points, using<code>getLaneletFromPoint</code> method. But, the implementation requires complex rules for it to work. Take the following images as an example.</p> <p></p> <p>Assume <code>Object X</code> is in <code>Lanelet F</code>. We can forcefully search <code>Lanelet E</code> via <code>Point 7</code>, and it will work if <code>Point 7</code> is utilized by only 2 lanelet. However, the complexity increases when we want to start searching for the direction of the opposite lane. We can infer the direction of the lanelet by using mathematical operations (dot product of vector <code>V_ID72</code> (<code>Point 6</code> minus <code>Point 9</code>), and <code>V_ID74</code> (<code>Point 7</code> minus <code>Point 8</code>). But, notice that we did not use Point 7 in V_ID72. This is because searching it requires an iteration, adding additional non-beneficial computation.</p> <p>Suppose the points are used by more than 2 lanelets. In that case, we have to find the differences for all lanelet, and the result might be undefined. The reason is that the differences between the coordinates do not reflect the actual shape of the lanelet. The following image demonstrates this point.</p> <p></p> <p></p> <p>There are many other available solutions to try. However, further attempt to solve this might cause issues in the future, especially for maintaining or scaling up the software.</p> <p>In conclusion, the multiple Linestring issues will not be supported. Covering these scenarios might give the user an \"everything is possible\" impression. This is dangerous since any attempt to create a non-standardized vector map is not compliant with safety regulations.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_design_limitations/#limitation-avoidance-at-corners-and-intersections","title":"Limitation: Avoidance at Corners and Intersections","text":"<p>Currently, the implementation doesn't cover avoidance at corners and intersections. The reason is similar to here. However, this case can still be supported in the future (assuming the vector map is defined correctly).</p> <p></p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_design_limitations/#limitation-chattering-shifts","title":"Limitation: Chattering shifts","text":"<p>There are possibilities that the shifted path chatters as a result of various factors. For example, bounded box shape or position from the perception input. Sometimes, it is difficult for the perception to get complete information about the object's size. As the object size is updated, the object length will also be updated. This might cause shifts point to be re-calculated, therefore resulting in chattering shift points.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/","title":"Drivable Area","text":"<p>Drivable Area represents the area where ego vehicle can pass.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#purpose-role","title":"Purpose / Role","text":"<p>In order to defined the area that ego vehicle can travel safely, we generate drivable area in behavior path planner module. Our drivable area is represented by two line strings, which are <code>left_bound</code> line and <code>right_bound</code> line respectively. Both <code>left_bound</code> and <code>right_bound</code> are created from left and right boundaries of lanelets. Note that <code>left_bound</code> and <code>right bound</code> are generated by <code>generateDrivableArea</code> function.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#assumption","title":"Assumption","text":"<p>Our drivable area has several assumptions.</p> <ul> <li>Drivable Area should have all of the necessary area but should not represent unnecessary area for current behaviors. For example, when ego vehicle is in <code>follow lane</code> mode, drivable area should not contain adjacent lanes.</li> </ul> <ul> <li>When generating a drivable area, lanes need to be arranged in the order in which cars pass by (More details can be found in following sections).</li> </ul> <ul> <li>Both left and right bounds should cover the front of the path and the end of the path.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#limitations","title":"Limitations","text":"<p>Currently, when clipping left bound or right bound, it can clip the bound more than necessary and the generated path might be conservative.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#parameters-for-drivable-area-generation","title":"Parameters for drivable area generation","text":"Name Unit Type Description Default value enabled [-] boolean whether to dynamically the drivable area using the ego footprint false ego.extra_footprint_offset.front [m] double extra length to add to the front of the ego footprint 0.0 ego.extra_footprint_offset.rear [m] double extra length to add to the rear of the ego footprint 0.0 ego.extra_footprint_offset.left [m] double extra length to add to the left of the ego footprint 0.0 ego.extra_footprint_offset.right [m] double extra length to add to the rear of the ego footprint 0.0 dynamic_objects.avoid [-] boolean if true, the drivable area is not expanded in the predicted path of dynamic objects true dynamic_objects.extra_footprint_offset.front [m] double extra length to add to the front of the ego footprint 0.5 dynamic_objects.extra_footprint_offset.rear [m] double extra length to add to the rear of the ego footprint 0.5 dynamic_objects.extra_footprint_offset.left [m] double extra length to add to the left of the ego footprint 0.5 dynamic_objects.extra_footprint_offset.right [m] double extra length to add to the rear of the ego footprint 0.5 max_distance [m] double maximum distance by which the drivable area can be expended. A value of 0.0 means no maximum distance. 0.0 expansion.method [-] string method to use for the expansion: \"polygon\" will expand the drivable area around the ego footprint polygons; \"lanelet\" will expand to the whole lanelets overlapped by the ego footprints \"polygon\" expansion.max_arc_path_length [m] double maximum length along the path where the ego footprint is projected 50.0 expansion.extra_arc_length [m] double extra arc length (relative to the path) around ego footprints where the drivable area is expanded 0.5 expansion.avoid_linestring.types [-] string array linestring types in the lanelet maps that will not be crossed when expanding the drivable area [guard_rail, road_border] avoid_linestring.distance [m] double distance to keep between the drivable area and the linestrings to avoid 0.0 avoid_linestring.compensate.enable [-] bool if true, when the expansion is blocked by a linestring on one side of the path, we try to compensate and expand on the other side true avoid_linestring.compensate.extra_distance [m] double extra distance added to the expansion when compensating 3.0 <p>The following parameters are defined for each module. Please refer to the <code>config/drivable_area_expansion.yaml</code> file.</p> Name Unit Type Description Default value drivable_area_right_bound_offset [m] double right offset length to expand drivable area 5.0 drivable_area_left_bound_offset [m] double left offset length to expand drivable area 5.0 drivable_area_types_to_skip [-] string linestring types (as defined in the lanelet map) that will not be expanded road_border"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>This section gives details of the generation of the drivable area (<code>left_bound</code> and <code>right_bound</code>).</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#drivable-lanes-generation","title":"Drivable Lanes Generation","text":"<p>Before generating drivable areas, drivable lanes need to be sorted. Drivable Lanes are selected in each module (<code>Lane Follow</code>, <code>Avoidance</code>, <code>Lane Change</code>, <code>Pull Over</code>, <code>Pull Out</code> and etc.), so more details about selection of drivable lanes can be found in each module's document. We use the following structure to define the drivable lanes.</p> <p></p> <p>The image of the sorted drivable lanes is depicted in the following picture.</p> <p></p> <p>Note that, the order of drivable lanes become</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#drivable-area-generation","title":"Drivable Area Generation","text":"<p>In this section, a drivable area is created using drivable lanes arranged in the order in which vehicles pass by. We created <code>left_bound</code> from left boundary of the leftmost lanelet and <code>right_bound</code> from right boundary of the rightmost lanelet. The image of the created drivable area will be the following blue lines. Note that the drivable area is defined in the <code>Path</code> and <code>PathWithLaneId</code> messages as</p> <p></p> <p>and each point of right bound and left bound has a position in the absolute coordinate system.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#drivable-area-expansion","title":"Drivable Area Expansion","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#static-expansion","title":"Static Expansion","text":"<p>Each module can statically expand the left and right bounds of the target lanes by the parameter defined values. This enables large vehicles to pass narrow curve. The image of this process can be described as</p> <p></p> <p>Note that we only expand right bound of the rightmost lane and left bound of the leftmost lane.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#dynamic-expansion","title":"Dynamic Expansion","text":"<p>The drivable area can also be expanded dynamically by considering the ego vehicle footprint projected on each path point. This expansion can be summarized with the following steps:</p> <ol> <li>Build the ego path footprint.</li> <li>Build the dynamic objects' predicted footprints (optional).</li> <li>Build \"uncrossable\" lines.</li> <li>Remove the footprints from step 2 and the lines from step 3 from the ego path footprint from step 1.</li> <li>Expand the drivable area with the result of step 4.</li> </ol> Inputs Footprints and uncrossable lines Expanded drivable area <p>Please note that the dynamic expansion can only increase the size of the drivable area and cannot remove any part from the original drivable area.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_drivable_area/#visualizing-maximum-drivable-area-debug","title":"Visualizing maximum drivable area (Debug)","text":"<p>Sometimes, the developers might get a different result between two maps that may look identical during visual inspection.</p> <p>For example, in the same area, one can perform avoidance and another cannot. This might be related to the maximum drivable area issues due to the non-compliance vector map design from the user.</p> <p>To debug the issue, the maximum drivable area boundary can be visualized.</p> <p></p> <p></p> <p>The maximum drivable area can be visualize by adding the marker from <code>/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/maximum_drivable_area</code></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/","title":"Lane Change","text":"<p>The Lane Change module is activated when lane change is needed and can be safely executed.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#lane-change-requirement","title":"Lane Change Requirement","text":"<ul> <li>During lane change request condition<ul> <li>The ego-vehicle isn\u2019t on a <code>preferred_lane</code>.</li> <li>There is neither intersection nor crosswalk on the path of the lane change</li> </ul> </li> <li>lane change ready condition<ul> <li>Path of the lane change does not collide with other dynamic objects (see the figure below)</li> <li>Lane change candidate path is approved by an operator.</li> </ul> </li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#generating-lane-change-candidate-path","title":"Generating Lane Change Candidate Path","text":"<p>The lane change candidate path is divided into two phases: preparation and lane-changing. The following figure illustrates each phase of the lane change candidate path.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#preparation-phase","title":"Preparation phase","text":"<p>The preparation trajectory is the candidate path's first and the straight portion generated along the ego vehicle's current lane. The length of the preparation trajectory is computed as follows.</p> <pre><code>lane_change_prepare_distance = max(current_speed * lane_change_prepare_duration + 0.5 * deceleration * lane_change_prepare_duration^2, minimum_lane_change_prepare_distance)\n</code></pre> <p>During the preparation phase, the turn signal will be activated when the remaining distance is equal to or less than <code>lane_change_search_distance</code>.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#lane-changing-phase","title":"Lane-changing phase","text":"<p>The lane-changing phase consist of the shifted path that moves ego from current lane to the target lane. Total distance of lane-changing phase is as follows.</p> <pre><code>lane_change_prepare_velocity = current_speed + deceleration * lane_change_prepare_duration\nlane_changing_distance = max(lane_change_prepare_velocity * lane_changing_duration + 0.5 * deceleration * lane_changing_duration^2, minimum_lane_change_length + backward_length_buffer_for_end_of_lane)\n</code></pre> <p>The <code>backward_length_buffer_for_end_of_lane</code> is added to allow some window for any possible delay, such as control or mechanical delay during brake lag.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#multiple-candidate-path-samples","title":"Multiple candidate path samples","text":"<p>Lane change velocity is affected by the ego vehicle's current velocity. High velocity requires longer preparation and lane changing distance. However we also need to plan lane changing trajectories in case ego vehicle slows down. Computing candidate paths that assumes ego vehicle's slows down is performed by substituting predetermined deceleration value into <code>lane_change_prepare_distance</code>, <code>lane_change_prepare_velocity</code> and <code>lane_changing_distance</code> equation.</p> <p>The predetermined deceleration are a set of value that starts from <code>deceleration = 0.0</code>, and decrease by <code>acceleration_resolution</code> until it reaches<code>deceleration = -maximum_deceleration</code>. The <code>acceleration_resolution</code> is determine by the following</p> <pre><code>acceleration_resolution = maximum_deceleration / lane_change_sampling_num\n</code></pre> <p>The following figure illustrates when <code>lane_change_sampling_num = 4</code>. Assuming that <code>maximum_deceleration = 1.0</code> then <code>a0 == 0.0 == no deceleration</code>, <code>a1 == 0.25</code>, <code>a2 == 0.5</code>, <code>a3 == 0.75</code> and <code>a4 == 1.0 == maximum_deceleration</code>. <code>a0</code> is the expected lane change trajectories should ego vehicle do not decelerate, and <code>a1</code>'s path is the expected lane change trajectories should ego vehicle decelerate at <code>0.25 m/s^2</code>.</p> <p></p> <p>Which path will be chosen will depend on validity and collision check.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#candidate-paths-validity-check","title":"Candidate Path's validity check","text":"<p>A candidate path is valid if the total lane change distance is less than</p> <ol> <li>distance to the end of current lane</li> <li>distance to the next intersection</li> <li>distance from current pose to the goal.</li> <li>distance to the crosswalk.</li> </ol> <p>The goal must also be in the list of the preferred lane.</p> <p>The following flow chart illustrates the validity check.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#candidate-paths-safety-check","title":"Candidate Path's Safety check","text":"<p>Valid candidate path is evaluated for safety before is was selected as the output candidate path. The flow of the process is as follows.</p> <p></p> <p>If all valid candidate path is unsafe, then the operator will have the option to perform force lane change by using the front-most candidate path as the output. The force lane change will ignore all safety checks.</p> <p>A candidate path's is safe if it satisfies the following lateral distance criteria,</p> <pre><code>lateral distance &gt; lateral_distance_threshold\n</code></pre> <p>However, suppose the lateral distance is insufficient. In that case, longitudinal distance will be evaluated. The candidate path is safe only when the longitudinal gap between the ego vehicle and the dynamic object is wide enough.</p> <p>The following charts illustrate the flow of the safety checks</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#calculating-and-evaluating-longitudinal-distance","title":"Calculating and evaluating longitudinal distance","text":"<p>A sufficient longitudinal gap between vehicles will prevent any rear-end collision from happening. This includes an emergency stop or sudden braking scenarios.</p> <p>The following information is required to evaluate the longitudinal distance between vehicles</p> <ol> <li>estimated speed of the dynamic objects</li> <li>predicted path of dynamic objects</li> <li>ego vehicle's current speed</li> <li>ego vehicle's predicted path (converted/estimated from candidate path)</li> </ol> <p>The following figure illustrates how the safety check is performed on ego vs. dynamic objects.</p> <p></p> <p>Let <code>v_front</code> and <code>a_front</code> be the front vehicle's velocity and deceleration, respectively, and <code>v_rear</code> and <code>a_rear</code> be the rear vehicle's velocity and deceleration, respectively. Front vehicle and rear vehicle assignment will depend on which predicted path's pose is currently being evaluated.</p> <p>The following figure illustrates front and rear vehicle velocity assignment.</p> <p></p> <p>Assuming the front vehicle brakes, then <code>d_front</code> is the distance the front vehicle will travel until it comes to a complete stop. The distance is computed from the equation of motion, which yield.</p> <pre><code>d_front = -std::pow(v_front,2) / (2*a_front)\n</code></pre> <p>Using the same formula to evaluate the rear vehicle's stopping distance <code>d_rear</code> is insufficient. This is because as the rear vehicle's driver saw the front vehicle's sudden brake, it will take some time for the driver to process the information and react by pressing the brake. We call this delay the reaction time.</p> <p>The reaction time is considered from the duration starting from the driver seeing the front vehicle brake light until the brake is pressed. As the brake is pressed, the time margin (which might be caused by mechanical or control delay) also needs to be considered. With these two parameters included, the formula for <code>d_rear</code> will be as follows.</p> <pre><code>d_rear = v_rear * rear_vehicle_reaction_time + v_rear * rear_vehicle_safety_time_margin + (-std::pow(v_front,2) / 2 * a_rear)\n</code></pre> <p>Since there is no absolute value for the deceleration<code>a_front</code> and <code>a_rear</code>, both of the values are parameterized (<code>expected_front_deceleration</code> and <code>expected_rear_deceleration</code>, respectively) with the estimation of how much deceleration will occur if the brake is pressed.</p> <p>The longitudinal distance is evaluated as follows</p> <pre><code>d_rear &lt; d_front + d_inter\n</code></pre> <p>where <code>d_inter</code> is the relative longitudinal distance obtained at each evaluated predicted pose.</p> <p>Finally minimum longitudinal distance for <code>d_rear</code> is added to compensate for object to near to each other when <code>d_rear = 0.0</code>. This yields</p> <pre><code>std::max(longitudinal_distance_min_threshold, d_rear) &lt; d_front + d_inter\n</code></pre>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#collision-check-in-prepare-phase","title":"Collision check in prepare phase","text":"<p>The ego vehicle may need to secure ample inter-vehicle distance ahead of the target vehicle before attempting a lane change. The flag <code>enable_collision_check_at_prepare_phase</code> can be enabled to gain this behavior. The following image illustrates the differences between the <code>false</code> and <code>true</code> cases.</p> <p></p> <p>The parameter <code>prepare_phase_ignore_target_speed_thresh</code> can be configured to ignore the prepare phase collision check for targets whose speeds are less than a specific threshold, such as stationary or very slow-moving objects.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#if-the-lane-is-blocked-and-multiple-lane-changes","title":"If the lane is blocked and multiple lane changes","text":"<p>When driving on the public road with other vehicles, there exist scenarios where lane changes cannot be executed. Suppose the candidate path is evaluated as unsafe, for example, due to incoming vehicles in the adjacent lane. In that case, the ego vehicle can't change lanes, and it is impossible to reach the goal. Therefore, the ego vehicle must stop earlier at a certain distance and wait for the adjacent lane to be evaluated as safe. The minimum stopping distance computation is as follows.</p> <pre><code>minimum_lane_change_distance = num_of_lane_changes * (minimum_lane_change_length + backward_length_buffer_for_end_of_lane)\n</code></pre> <p>The following figure illustrates when the lane is blocked in multiple lane changes cases.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#intersection","title":"Intersection","text":"<p>Lane change in the intersection is prohibited following traffic regulation. Therefore, if the goal is place close passed the intersection, the lane change needs to be completed before ego vehicle enters the intersection region. Similar to the lane blocked case, in case of the path is unsafe, ego vehicle will stop and waits for the dynamic object to pass by.</p> <p>The following figure illustrate the intersection case.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#aborting-lane-change","title":"Aborting lane change","text":"<p>The abort process may result in three different outcome; Cancel, Abort and Stop/Cruise.</p> <p>The following depicts the flow of the abort lane change check.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#cancel","title":"Cancel","text":"<p>Suppose the lane change trajectory is evaluated as unsafe. In that case, if the ego vehicle has not departed from the current lane yet, the trajectory will be reset, and the ego vehicle will resume the lane following the maneuver.</p> <p>The function can be enabled by setting <code>enable_cancel_lane_change</code> to <code>true</code>.</p> <p>The following image illustrates the cancel process.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#abort","title":"Abort","text":"<p>Assume the ego vehicle has already departed from the current lane. In that case, it is dangerous to cancel the path, and it will cause the ego vehicle to change the heading direction abruptly. In this case, planning a trajectory that allows the ego vehicle to return to the current path while minimizing the heading changes is necessary. In this case, the lane change module will generate an abort path. The following images show an example of the abort path. Do note that the function DOESN'T GUARANTEE a safe abort process, as it didn't check the presence of the surrounding objects and/or their reactions. The function can be enable manually by setting both <code>enable_cancel_lane_change</code> and <code>enable_abort_lane_change</code> to <code>true</code>. The parameter <code>abort_max_lateral_jerk</code> need to be set to a high value in order for it to work.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#stopcruise","title":"Stop/Cruise","text":"<p>The last behavior will also occur if the ego vehicle has departed from the current lane. If the abort function is disabled or the abort is no longer possible, the ego vehicle will attempt to stop or transition to the obstacle cruise mode. Do note that the module DOESN'T GUARANTEE safe maneuver due to the unexpected behavior that might've occurred during these critical scenarios. The following images illustrate the situation.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#parameters","title":"Parameters","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#essential-lane-change-parameters","title":"Essential lane change parameters","text":"<p>The following parameters are configurable in <code>lane_change.param.yaml</code>.</p> Name Unit Type Description Default value <code>lane_change_prepare_duration</code> [m] double The preparation time for the ego vehicle to be ready to perform lane change. 4.0 <code>lane_changing_safety_check_duration</code> [m] double The total time that is taken to complete the lane-changing task. 8.0 <code>minimum_lane_change_prepare_distance</code> [m] double Minimum prepare distance for lane change 2.0 <code>minimum_lane_change_length</code> [m] double The minimum distance needed for changing lanes. 16.5 <code>backward_length_buffer_for_end_of_lane</code> [m] double The end of lane buffer to ensure ego vehicle has enough distance to start lane change 2.0 <code>lane_change_finish_judge_buffer</code> [m] double The additional buffer used to confirm lane change process completion 3.0 <code>lane_changing_lateral_jerk</code> [m/s3] double Lateral jerk value for lane change path generation 0.5 <code>lane_changing_lateral_acc</code> [m/s2] double Lateral acceleration value for lane change path generation 0.5 <code>minimum_lane_change_velocity</code> [m/s] double Minimum speed during lane changing process. 2.78 <code>prediction_time_resolution</code> [s] double Time resolution for object's path interpolation and collision check. 0.5 <code>maximum_deceleration</code> [m/s^2] double Ego vehicle maximum deceleration when performing lane change. 1.0 <code>lane_change_sampling_num</code> [-] int Number of possible lane-changing trajectories that are being influenced by deceleration 10"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#collision-checks-during-lane-change","title":"Collision checks during lane change","text":"<p>The following parameters are configurable in <code>behavior_path_planner.param.yaml</code>.</p> Name Unit Type Description Default value <code>lateral_distance_max_threshold</code> [m] double The lateral distance threshold that is used to determine whether lateral distance between two object is enough and whether lane change is safe. 2.0 <code>longitudinal_distance_min_threshold</code> [m] double The longitudinal distance threshold that is used to determine whether longitudinal distance between two object is enough and whether lane change is safe. 3.0 <code>expected_front_deceleration</code> [m/s^2] double The front object's maximum deceleration when the front vehicle perform sudden braking. (*1) -1.0 <code>expected_rear_deceleration</code> [m/s^2] double The rear object's maximum deceleration when the rear vehicle perform sudden braking. (*1) -1.0 <code>rear_vehicle_reaction_time</code> [s] double The reaction time of the rear vehicle driver which starts from the driver noticing the sudden braking of the front vehicle until the driver step on the brake. 2.0 <code>rear_vehicle_safety_time_margin</code> [s] double The time buffer for the rear vehicle to come into complete stop when its driver perform sudden braking. 2.0 <code>enable_collision_check_at_prepare_phase</code> [-] boolean Perform collision check starting from prepare phase. If <code>false</code>, collision check only evaluated for lane changing phase. true <code>prepare_phase_ignore_target_speed_thresh</code> [m/s] double Ignore collision check in prepare phase of object speed that is lesser that the configured value. <code>enable_collision_check_at_prepare_phase</code> must be <code>true</code> 0.1 <code>use_predicted_path_outside_lanelet</code> [-] boolean If true, include collision check for predicted path that is out of lanelet (freespace). false <code>use_all_predicted_path</code> [-] boolean If false, use only the predicted path that has the maximum confidence. true <p>(*1) the value must be negative.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#abort-lane-change","title":"Abort lane change","text":"<p>The following parameters are configurable in <code>lane_change.param.yaml</code>.</p> Name Unit Type Description Default value <code>enable_cancel_lane_change</code> [-] boolean Enable cancel lane change true <code>enable_abort_lane_change</code> [-] boolean Enable abort lane change. false <code>abort_delta_time</code> [s] double The time taken to start aborting. 3.0 <code>abort_max_lateral_jerk</code> [s] double The maximum lateral jerk for abort path 1000.0"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#debug","title":"Debug","text":"<p>The following parameters are configurable in <code>lane_change.param.yaml</code>.</p> Name Unit Type Description Default value <code>publish_debug_marker</code> [-] boolean Flag to publish debug marker false"},{"location":"planning/behavior_path_planner/behavior_path_planner_lane_change/#debug-marker-visualization","title":"Debug Marker &amp; Visualization","text":"<p>To enable the debug marker, execute <code>ros2 param set /planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner lane_change.publish_debug_marker true</code> (no restart is needed) or simply set the <code>publish_debug_marker</code> to <code>true</code> in the <code>lane_change.param.yaml</code> for permanent effect (restart is needed). Then add the marker <code>/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/debug/lanechange</code> in <code>rviz2</code>.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/","title":"Behavior path planner path generation","text":""},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#path-generation","title":"Path Generation","text":"<p>This document explains how the path is generated for lane change and avoidance, etc. The implementation can be found in path_shifter.hpp.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#overview","title":"Overview","text":"<p>The base idea of the path generation in lane change and avoidance is to smoothly shift the reference path, such as the center line, in the lateral direction. This is achieved by using a constant-jerk profile as in the figure below. More details on how it is used can be found in README. It is assumed that the reference path is smooth enough for this algorithm.</p> <p>The figure below explains how the application of a constant lateral jerk l^{'''}(s) can be used to induce lateral shifting. In order to comply with the limits on lateral acceleration and velocity, zero-jerk time is employed in the figure ( T_aT_a and T_vT_v ). In each interval where constant jerk is applied, the shift position l(s)l(s) can be characterized by a third-degree polynomial. Therefore the shift length from the reference path can then be calculated by combining spline curves.</p> <p> </p> <p>Note that, due to the rarity of the T_vT_v in almost all cases of lane change and avoidance, T_vT_v is not considered in the current implementation.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#mathematical-derivation","title":"Mathematical Derivation","text":"<p>By applying simple integral operations, the following analytical equations can be derived to describe the shift distance l(t)l(t) at each time under lateral jerk, acceleration, and velocity constraints.</p> <pre><code>\\begin{align}\nl_1&amp;= \\frac{1}{6}jT_j^3\\\\[10pt]\nl_2&amp;= \\frac{1}{6}j T_j^3 + \\frac{1}{2} j T_a T_j^2 + \\frac{1}{2} j T_a^2 T_j\\\\[10pt]\nl_3&amp;= j  T_j^3 + \\frac{3}{2} j T_a T_j^2 + \\frac{1}{2} j T_a^2 T_j\\\\[10pt]\nl_4&amp;= j T_j^3 + \\frac{3}{2} j T_a T_j^2 + \\frac{1}{2} j T_a^2 T_j + j(T_a + T_j)T_j T_v\\\\[10pt]\nl_5&amp;= \\frac{11}{6} j T_j^3 + \\frac{5}{2} j T_a T_j^2 + \\frac{1}{2} j T_a^2 T_j + j(T_a + T_j)T_j T_v \\\\[10pt]\nl_6&amp;= \\frac{11}{6} j T_j^3 + 3 j T_a T_j^2 + j T_a^2 T_j + j(T_a + T_j)T_j T_v\\\\[10pt]\nl_7&amp;= 2 j T_j^3 + 3 j T_a T_j^2 + j T_a^2 T_j + j(T_a + T_j)T_j T_v\n\\end{align}\n</code></pre> <p>These equations are used to determine the shape of a path. Additionally, by applying further mathematical operations to these basic equations, the expressions of the following subsections can be derived.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#calculation-of-maximum-acceleration-from-transition-time-and-final-shift-length","title":"Calculation of Maximum Acceleration from transition time and final shift length","text":"<p>In the case where there are no limitations on lateral velocity and lateral acceleration, the maximum lateral acceleration during the shifting can be calculated as follows. The constant-jerk time is given by T_j = T_{\\rm total}/4T_j = T_{\\rm total}/4 because of its symmetric property. Since T_a=T_v=0T_a=T_v=0, the final shift length L=l_7=2jT_j^3L=l_7=2jT_j^3 can be determined using the above equation. The maximum lateral acceleration is then given by a_{\\rm max} =jT_ja_{\\rm max} =jT_j. This results in the following expression for the maximum lateral acceleration:</p> <pre><code>\\begin{align}\na_{\\rm max}  = \\frac{8L}{T_{\\rm total}^2}\n\\end{align}\n</code></pre>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#calculation-of-ta-tj-and-jerk-from-acceleration-limit","title":"Calculation of Ta, Tj and jerk from acceleration limit","text":"<p>In the case where there are no limitations on lateral velocity, the constant-jerk and acceleration times, as well as the required jerk can be calculated from the acceleration limit, total time, and final shift length as follows. Since T_v=0T_v=0, the final shift length is given by:</p> <pre><code>\\begin{align}\nL = l_7 = 2 j T_j^3 + 3 j T_a T_j^2 + j T_a^2 T_j\n\\end{align}\n</code></pre> <p>Additionally, the velocity profile reveals the following relations:</p> <pre><code>\\begin{align}\na_{\\rm lim} &amp;= j T_j\\\\\nT_{\\rm total} &amp;= 4T_j + 2T_a\n\\end{align}\n</code></pre> <p>By solving these three equations, the following can be obtained:</p> <pre><code>\\begin{align}\nT_j&amp;=\\frac{T_{\\rm total}}{2} - \\frac{2L}{a_{\\rm lim} T_{\\rm total}}\\\\[10pt]\nT_a&amp;=\\frac{4L}{a_{\\rm lim} T_{\\rm total}} - \\frac{T_{\\rm total}}{2}\\\\[10pt]\njerk&amp;=\\frac{2a_{\\rm lim} ^2T_{\\rm total}}{a_{\\rm lim} T_{\\rm total}^2-4L}\n\\end{align}\n</code></pre> <p>where T_jT_j is the constant-jerk time, T_aT_a is the constant acceleration time, jj is the required jerk, a_{\\rm lim}a_{\\rm lim} is the acceleration limit, and LL is the final shift length.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#calculation-of-required-time-from-jerk-and-acceleration-constraint","title":"Calculation of Required Time from Jerk and Acceleration Constraint","text":"<p>In the case where there are no limitations on lateral velocity, the total time required for shifting can be calculated from the jerk and acceleration limits and the final shift length as follows. By solving the two equations given above:</p> <pre><code>L = l_7 = 2 j T_j^3 + 3 j T_a T_j^2 + j T_a^2 T_j,\\quad a_{\\rm lim} = j T_j\n</code></pre> <p>we obtain the following expressions:</p> <pre><code>\\begin{align}\nT_j &amp;= \\frac{a_{\\rm lim}}{j}\\\\[10pt]\nT_a &amp;= \\frac{1}{2}\\sqrt{\\frac{a_{\\rm lim}}{j}^2 + \\frac{4L}{a_{\\rm lim}}} - \\frac{3a_{\\rm lim}}{2j}\n\\end{align}\n</code></pre> <p>The total time required for shifting can then be calculated as T_{\\rm total}=4T_j+2T_aT_{\\rm total}=4T_j+2T_a.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_path_generation/#limitation","title":"Limitation","text":"<ul> <li>Since T_vT_v is zero in almost all cases of lane change and avoidance, T_vT_v is not considered in the current implementation.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_side-shift/","title":"Side shift Module","text":"<p>(For remote control) Shift the path to left or right according to an external instruction.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_side-shift/#flowchart","title":"Flowchart","text":"<p>```plantuml --&gt; @startuml skinparam monochrome true skinparam defaultTextAlignment center skinparam noteTextAlignment left</p> <p>title path generation</p> <p>start partition plan { if (lateral_offset_change_request_ == true \\n &amp;&amp; \\n (shifting_status_ == BEFORE_SHIFT \\n || \\n shifting_status_ == AFTER_SHIFT)) then ( true)   partition replace-shift-line {     if ( shift line is inserted in the path ) then ( yes)       :erase left shift line;     else ( no)     endif     :calcShiftLines;     :add new shift lines;     :inserted_lateral_offset_ = requested_lateral_offset_ \\n inserted_shift_lines_ = new_shift_line;   } else( false) endif stop @enduml ```</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/","title":"Turn Signal Decider","text":"<p>Turn Signal decider determines necessary blinkers.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#purpose-role","title":"Purpose / Role","text":"<p>This module is responsible for activating a necessary blinker during driving. It uses rule-based algorithm to determine blinkers, and the details of this algorithm are described in the following sections. Note that this algorithm is strictly based on the Japanese Road Traffic Raw.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#assumptions","title":"Assumptions","text":"<p>Autoware has following order of priorities for turn signals.</p> <ol> <li>Activate turn signal to safely navigate ego vehicle and protect other road participants</li> <li>Follow traffic laws</li> <li>Follow human driving practices</li> </ol>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#limitations","title":"Limitations","text":"<p>Currently, this algorithm can sometimes give unnatural (not wrong) blinkers in a complicated situations. This is because it tries to follow the road traffic raw and cannot solve <code>blinker conflicts</code> clearly in that environment.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#parameters-for-turn-signal-decider","title":"Parameters for turn signal decider","text":"Name Unit Type Description Default value turn_signal_intersection_search_distance [m] double constant search distance to decide activation of blinkers at intersections 30 turn_signal_intersection_angle_threshold_degree deg double angle threshold to determined the end point of intersection required section 15 turn_signal_minimum_search_distance [m] double minimum search distance for avoidance and lane change 10 turn_signal_search_time [s] double search time for to decide activation of blinkers 3.0 turn_signal_shift_length_threshold [m] double shift length threshold to decide activation of blinkers 0.3 turn_signal_on_swerving [-] bool flag to activate blinkers when swerving true <p>Note that the default values for <code>turn_signal_intersection_search_distance</code> and <code>turn_signal_search_time</code> is strictly followed by Japanese Road Traffic Laws. So if your country does not allow to use these default values, you should change these values in configuration files.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>In this algorithm, it assumes that each blinker has two sections, which are <code>desired section</code> and <code>required section</code>. The image of these two sections are depicted in the following diagram.</p> <p></p> <p>These two sections have the following meanings.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#-desired-section","title":"- Desired Section","text":"<pre><code>- This section is defined by road traffic laws. It cannot be longer or shorter than the designated length defined by the law.\n- In this section, you do not have to activate the designated blinkers if it is dangerous to do so.\n</code></pre>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#-required-section","title":"- Required Section","text":"<pre><code>- In this section, ego vehicle must activate designated blinkers. However, if there are blinker conflicts, it must solve them based on the algorithm we mention later in this document.\n- Required section cannot be longer than desired section.\n</code></pre> <p>For left turn, right turn, avoidance, lane change, pull over and pull out, we define these two sections, which are elaborated in the following part.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#1-left-and-right-turn","title":"1. Left and Right turn","text":"<p>Turn signal decider checks each lanelet on the map if it has <code>turn_direction</code> information. If a lanelet has this information, it activates necessary blinker based on this information.</p> <ul> <li>desired start point   The <code>search_distance</code> for blinkers at intersections is <code>v * turn_signal_search_time + turn_signal_intersection_search_distance</code>. Then the start point becomes <code>search_distance</code> meters before the start point of the intersection lanelet(depicted in gree in the following picture), where <code>v</code> is the velocity of the ego vehicle. However, if we set <code>turn_signal_distance</code> in the lanelet, we use that length as search distance.</li> </ul> <ul> <li>desired end point   Terminal point of the intersection lanelet.</li> </ul> <ul> <li>required start point   Initial point of the intersection lanelet.</li> </ul> <ul> <li>required end point   The earliest point that satisfies the following condition. \\theta - \\theta_{\\textrm{end}} &lt; \\delta, where \\theta_{\\textrm{end}}\\theta_{\\textrm{end}} is yaw angle of the terminal point of the lanelet, \\theta\\theta is the angle of a required end point and \\delta\\delta is the threshold defined by the user.</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#2-avoidance","title":"2. Avoidance","text":"<p>Avoidance can be separated into two sections, first section and second section. The first section is from the start point of the path shift to the end of the path shift. The second section is from the end of shift point to the end of avoidance. Note that avoidance module will not activate turn signal when its shift length is below <code>turn_signal_shift_length_threshold</code>.</p> <p>First section</p> <ul> <li>desired start point <code>v * turn_signal_search_time</code> meters before the start point of the avoidance shift path.</li> </ul> <ul> <li>desired end point   Shift complete point where the path shift is completed.</li> </ul> <ul> <li>required start point   Avoidance start point.</li> </ul> <ul> <li>required end point   Shift complete point same as the desired end point.</li> </ul> <p></p> <p>Second section</p> <ul> <li>desired start point   Shift complete point.</li> </ul> <ul> <li>desired end point   Avoidance terminal point</li> </ul> <ul> <li>required start point   Shift complete point.</li> </ul> <ul> <li>required end point   Avoidance terminal point.</li> </ul> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#3-lane-change","title":"3. Lane Change","text":"<ul> <li>desired start point <code>v * turn_signal_search_time</code> meters before the start point of the lane change path.</li> </ul> <ul> <li>desired end point   Terminal point of the lane change path.</li> </ul> <ul> <li>required start point   Initial point of the lane change path.</li> </ul> <ul> <li>required end point   Cross point with lane change path and boundary line of the adjacent lane.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#4-pull-out","title":"4. Pull out","text":"<ul> <li>desired start point   Start point of the path of pull out.</li> </ul> <ul> <li>desired end point   Terminal point of the path of pull out.</li> </ul> <ul> <li>required start point   Start point of the path pull out.</li> </ul> <ul> <li>required end point   Terminal point of the path of pull out.</li> </ul>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#5-pull-over","title":"5. Pull over","text":"<ul> <li>desired start point <code>v * turn_signal_search_time</code> meters before the start point of the pull over path.</li> </ul> <ul> <li>desired end point   Terminal point of the path of pull over.</li> </ul> <ul> <li>required start point   Start point of the path of pull over.</li> </ul> <ul> <li>required end point   Terminal point of the path of pull over.</li> </ul> <p>When it comes to handle several blinkers, it gives priority to the first blinker that comes first. However, this rule sometimes activate unnatural blinkers, so turn signal decider uses the following five rules to decide the necessary turn signal.</p> <ul> <li>pattern1 </li> </ul> <ul> <li>pattern2 </li> </ul> <ul> <li>pattern3 </li> </ul> <ul> <li>pattern4 </li> </ul> <ul> <li>pattern5 </li> </ul> <p>Based on these five rules, turn signal decider can solve <code>blinker conflicts</code>. The following pictures show some examples of this kind of conflicts.</p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#-several-right-and-left-turns-on-short-sections","title":"- Several right and left turns on short sections","text":"<p>In this scenario, ego vehicle has to pass several turns that are close each other. Since this pattern can be solved by the pattern1 rule, the overall result is depicted in the following picture.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#-avoidance-with-left-turn-1","title":"- Avoidance with left turn (1)","text":"<p>In this scene, ego vehicle has to deal with the obstacle that is on its original path as well as make a left turn. The overall result can be varied by the position of the obstacle, but the image of the result is described in the following picture.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#-avoidance-with-left-turn-2","title":"- Avoidance with left turn (2)","text":"<p>Same as the previous scenario, ego vehicle has to avoid the obstacle as well as make a turn left. However, in this scene, the obstacle is parked after the intersection. Similar to the previous one, the overall result can be varied by the position of the obstacle, but the image of the result is described in the following picture.</p> <p></p>"},{"location":"planning/behavior_path_planner/behavior_path_planner_turn_signal-design/#-lane-change-and-left-turn","title":"- Lane change and left turn","text":"<p>In this scenario, ego vehicle has to do lane change before making a left turn. In the following example, ego vehicle does not activate left turn signal until it reaches the end point of the lane change path.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/","title":"Behavior Velocity Planner","text":""},{"location":"planning/behavior_velocity_planner/#overview","title":"Overview","text":"<p><code>behavior_velocity_planner</code> is a planner that adjust velocity based on the traffic rules. It consists of several modules. Please refer to the links listed below for detail on each module.</p> <p></p> <ul> <li>Blind Spot</li> <li>Crosswalk</li> <li>Detection Area</li> <li>Intersection</li> <li>MergeFromPrivate</li> <li>Stop Line</li> <li>Virtual Traffic Light</li> <li>Traffic Light</li> <li>Occlusion Spot</li> <li>No Stopping Area</li> <li>Run Out</li> <li>Speed Bump</li> </ul> <p>When each module plans velocity, it considers based on <code>base_link</code>(center of rear-wheel axis) pose. So for example, in order to stop at a stop line with the vehicles' front on the stop line, it calculates <code>base_link</code> position from the distance between <code>base_link</code> to front and modifies path velocity from the <code>base_link</code> position.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/#input-topics","title":"Input topics","text":"Name Type Description <code>~input/path_with_lane_id</code> autoware_auto_planning_msgs::msg::PathWithLaneId path with lane_id <code>~input/vector_map</code> autoware_auto_mapping_msgs::msg::HADMapBin vector map <code>~input/vehicle_odometry</code> nav_msgs::msg::Odometry vehicle velocity <code>~input/dynamic_objects</code> autoware_auto_perception_msgs::msg::PredictedObjects dynamic objects <code>~input/no_ground_pointcloud</code> sensor_msgs::msg::PointCloud2 obstacle pointcloud <code>~/input/compare_map_filtered_pointcloud</code> sensor_msgs::msg::PointCloud2 obstacle pointcloud filtered by compare map. Note that this is used only when the detection method of run out module is Points. <code>~input/traffic_signals</code> autoware_auto_perception_msgs::msg::TrafficSignalArray traffic light states"},{"location":"planning/behavior_velocity_planner/#output-topics","title":"Output topics","text":"Name Type Description <code>~output/path</code> autoware_auto_planning_msgs::msg::Path path to be followed <code>~output/stop_reasons</code> tier4_planning_msgs::msg::StopReasonArray reasons that cause the vehicle to stop"},{"location":"planning/behavior_velocity_planner/#node-parameters","title":"Node parameters","text":"Parameter Type Description <code>launch_blind_spot</code> bool whether to launch blind_spot module <code>launch_crosswalk</code> bool whether to launch crosswalk module <code>launch_detection_area</code> bool whether to launch detection_area module <code>launch_intersection</code> bool whether to launch intersection module <code>launch_traffic_light</code> bool whether to launch traffic light module <code>launch_stop_line</code> bool whether to launch stop_line module <code>launch_occlusion_spot</code> bool whether to launch occlusion_spot module <code>launch_run_out</code> bool whether to launch run_out module <code>launch_speed_bump</code> bool whether to launch speed_bump module <code>forward_path_length</code> double forward path length <code>backward_path_length</code> double backward path length <code>max_accel</code> double (to be a global parameter) max acceleration of the vehicle <code>system_delay</code> double (to be a global parameter) delay time until output control command <code>delay_response_time</code> double (to be a global parameter) delay time of the vehicle's response to control commands"},{"location":"planning/behavior_velocity_planner/blind-spot-design/","title":"Blind spot design","text":""},{"location":"planning/behavior_velocity_planner/blind-spot-design/#blind-spot","title":"Blind Spot","text":""},{"location":"planning/behavior_velocity_planner/blind-spot-design/#role","title":"Role","text":"<p>Blind spot check while turning right/left by a dynamic object information and planning a velocity of the start/stop.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/blind-spot-design/#activation-timing","title":"Activation Timing","text":"<p>This function is activated when the lane id of the target path has an intersection label (i.e. the <code>turn_direction</code> attribute is <code>left</code> or <code>right</code>).</p>"},{"location":"planning/behavior_velocity_planner/blind-spot-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Sets a stop line, a pass judge line, a detection area and conflict area based on a map information and a self position.</p> <ul> <li>Stop line : Automatically created based on crossing lane information.</li> </ul> <ul> <li>Pass judge line : A position to judge if stop or not to avoid a rapid brake.</li> </ul> <ul> <li>Detection area : Right/left side area of the self position.</li> </ul> <ul> <li>Conflict area : Right/left side area from the self position to the stop line.</li> </ul> <p>Stop/Go state: When both conditions are met for any of each object, this module state is transited to the \"stop\" state and insert zero velocity to stop the vehicle.</p> <ul> <li>Object is on the detection area</li> <li>Object\u2019s predicted path is on the conflict area</li> </ul> <p>In order to avoid a rapid stop, the \u201cstop\u201d judgement is not executed after the judgment line is passed.</p> <p>Once a \"stop\" is judged, it will not transit to the \"go\" state until the \"go\" judgment continues for a certain period in order to prevent chattering of the state (e.g. 2 seconds).</p>"},{"location":"planning/behavior_velocity_planner/blind-spot-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>stop_line_margin</code> double [m] a margin that the vehicle tries to stop before stop_line <code>backward_length</code> double [m] distance from closest path point to the edge of beginning point. <code>ignore_width_from_center_line</code> double [m] ignore threshold that vehicle behind is collide with ego vehicle or not <code>max_future_movement_time</code> double [s] maximum time for considering future movement of object"},{"location":"planning/behavior_velocity_planner/blind-spot-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_velocity_planner/crosswalk-design/","title":"Crosswalk design","text":""},{"location":"planning/behavior_velocity_planner/crosswalk-design/#crosswalk","title":"Crosswalk","text":""},{"location":"planning/behavior_velocity_planner/crosswalk-design/#role","title":"Role","text":"<p>This module judges whether the ego should stop in front of the crosswalk in order to provide safe passage of pedestrians and bicycles based on object's behavior and surround traffic.</p> <p> </p> crosswalk module"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#activation-timing","title":"Activation Timing","text":"<p>The manager launch crosswalk scene modules when the reference path conflicts crosswalk lanelets.</p>"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#module-parameters","title":"Module Parameters","text":""},{"location":"planning/behavior_velocity_planner/crosswalk-design/#common-parameters","title":"Common parameters","text":"Parameter Type Description <code>show_processing_time</code> bool whether to show processing time"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#parameters-for-stop-position","title":"Parameters for stop position","text":"<p>The crosswalk module determines a stop position at least <code>stop_margin</code> away from the object.</p> <p> </p> stop margin <p>The stop line is the reference point for the stopping position of the vehicle, but if there is no stop line in front of the crosswalk, the position <code>stop_line_distance</code> meters before the crosswalk is the virtual stop line for the vehicle. Then, if the stop position determined from <code>stop_margin</code> exists in front of the stop line determined from the HDMap or <code>stop_line_distance</code>, the actual stop position is determined according to <code>stop_margin</code> in principle, and vice versa.</p> <p> </p> explicit stop line <p> </p> virtual stop point <p>On the other hand, if pedestrian (bicycle) is crossing wide crosswalks seen in scramble intersections, and the pedestrian position is more than <code>stop_line_margin</code> meters away from the stop line, the actual stop position is determined to be <code>stop_margin</code> and pedestrian position, not at the stop line.</p> <p> </p> stop at wide crosswalk <p>See the workflow in algorithms section.</p> Parameter Type Description <code>stop_margin</code> double [m] the vehicle decelerates to be able to stop in front of object with margin <code>stop_line_distance</code> double [m] make stop line away from crosswalk when no explicit stop line exists <code>stop_line_margin</code> double [m] if objects cross X meters behind the stop line, the stop position is determined according to the object position (stop_margin meters before the object) <code>stop_position_threshold</code> double [m] threshold for check whether the vehicle stop in front of crosswalk"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#parameters-for-ego-velocity","title":"Parameters for ego velocity","text":"Parameter Type Description <code>slow_velocity</code> double [m/s] target vehicle velocity when module receive slow down command from FOA <code>max_slow_down_jerk</code> double [m/sss] minimum jerk deceleration for safe brake <code>max_slow_down_accel</code> double [m/ss] minimum accel deceleration for safe brake <code>no_relax_velocity</code> double [m/s] if the current velocity is less than X m/s, ego always stops at the stop position(not relax deceleration constraints)"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#parameters-for-stuck-vehicle","title":"Parameters for stuck vehicle","text":"<p>If there are low speed or stop vehicle ahead of the crosswalk, and there is not enough space between the crosswalk and the vehicle (see following figure), closing the distance to that vehicle could cause Ego to be stuck on the crosswalk. So, in this situation, this module plans to stop before the crosswalk and wait until the vehicles move away, even if there are no pedestrians or bicycles.</p> <p> </p> stuck vehicle attention range Parameter Type Description <code>stuck_vehicle_velocity</code> double [m/s] maximum velocity threshold whether the vehicle is stuck <code>max_lateral_offset</code> double [m] maximum lateral offset for stuck vehicle position should be looked <code>stuck_vehicle_attention_range</code> double [m] the detection area is defined as X meters behind the crosswalk"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#parameters-for-pass-judge-logic","title":"Parameters for pass judge logic","text":"<p>Also see algorithm section.</p> Parameter Type Description <code>ego_pass_first_margin</code> double [s] time margin for ego pass first situation <code>ego_pass_later_margin</code> double [s] time margin for object pass first situation <code>stop_object_velocity_threshold</code> double [m/s] velocity threshold for the module to judge whether the objects is stopped <code>min_object_velocity</code> double [m/s] minimum object velocity (compare the estimated velocity by perception module with this parameter and adopt the larger one to calculate TTV.) <code>max_yield_timeout</code> double [s] if the pedestrian does not move for X seconds after stopping before the crosswalk, the module judge that ego is able to pass first. <code>ego_yield_query_stop_duration</code> double [s] the amount of time which ego should be stopping to query whether it yields or not."},{"location":"planning/behavior_velocity_planner/crosswalk-design/#parameters-for-input-data","title":"Parameters for input data","text":"Parameter Type Description <code>tl_state_timeout</code> double [s] timeout threshold for traffic light signal"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#parameters-for-target-area-object","title":"Parameters for target area &amp; object","text":"<p>As a countermeasure against pedestrians attempting to cross outside the crosswalk area, this module watches not only the crosswalk zebra area but also in front of and behind space of the crosswalk, and if there are pedestrians or bicycles attempting to pass through the watch area, this module judges whether ego should pass or stop.</p> <p> </p> crosswalk attention range <p>This module mainly looks the following objects as target objects. There are also optional flags that enables the pass/stop decision for <code>motorcycle</code> and <code>unknown</code> objects.</p> <ul> <li>pedestrian</li> <li>bicycle</li> </ul> Parameter Type Description <code>crosswalk_attention_range</code> double [m] the detection area is defined as -X meters before the crosswalk to +X meters behind the crosswalk <code>target/unknown</code> bool whether to look and stop by UNKNOWN objects <code>target/bicycle</code> bool whether to look and stop by BICYCLE objects <code>target/motorcycle</code> bool whether to look and stop MOTORCYCLE objects <code>target/pedestrian</code> bool whether to look and stop PEDESTRIAN objects"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/behavior_velocity_planner/crosswalk-design/#stop-position","title":"Stop position","text":"<p>The stop position is determined by the existence of the stop line defined by the HDMap, the positional relationship between the stop line and the pedestrians and bicycles, and each parameter.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#pass-judge-logic","title":"Pass judge logic","text":"<p>At first, this module determines whether the pedestrians or bicycles are likely to cross the crosswalk based on the color of the pedestrian traffic light signal related to the crosswalk. Only when the pedestrian traffic signal is RED, this module judges that the objects will not cross the crosswalk and skip the pass judge logic.</p> <p>Secondly, this module makes a decision as to whether ego should stop in front of the crosswalk or pass through based on the relative relationship between TTC(Time-To-Collision) and TTV(Time-To-Vehicle). The TTC is the time it takes for ego to reach the virtual collision point, and the TTV is the time it takes for the object to reach the virtual collision point.</p> <p> </p> virtual collision point <p>Depending on the relative relationship between TTC and TTV, the ego's behavior at crosswalks can be classified into three categories.</p> <ol> <li>TTC &gt;&gt; TTV: The objects have enough time to cross first before ego reaches the crosswalk. (Type-A)</li> <li>TTC \u2252 TTV: There is a risk of a near miss and collision between ego and objects at the virtual collision point. (Type-B)</li> <li>TTC &lt;&lt; TTV: Ego has enough time to path through the crosswalk before the objects reach the virtual collision point. (Type-C)</li> </ol> <p>This module judges that ego is able to pass through the crosswalk without collision risk when the relative relationship between TTC and TTV is Type-A and Type-C. On the other hand, this module judges that ego needs to stop in front of the crosswalk prevent collision with objects in Type-B condition. The time margin can be set by parameters <code>ego_pass_first_margin</code> and <code>ego_pass_later_margin</code>. This logic is designed based on [1].</p> <p> </p> time-to-collision vs time-to-vehicle <p>This module uses the larger value of estimated object velocity and <code>min_object_velocity</code> in calculating TTV in order to avoid division by zero.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#dead-lock-prevention","title":"Dead lock prevention","text":"<p>If there are objects stop within a radius of <code>min_object_velocity * ego_pass_later_margin</code> meters from virtual collision point, this module judges that ego should stop based on the pass judge logic described above at all times. In such a situation, even if the pedestrian has no intention of crossing, ego continues the stop decision on the spot. So, this module has another logic for dead lock prevention, and if the object continues to stop for more than <code>max_yield_timeout</code> seconds after ego stops in front of the crosswalk, this module judges that the object has no intention of crossing and switches from STOP state to PASS state. The parameter <code>stop_object_velocity_threshold</code> is used to judge whether the objects are stopped or not. In addition, if the object starts to move after the module judges that the object has no intention of crossing, this module judges whether ego should stop or not once again.</p> <p> </p> dead lock situation"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#safety-slow-down-behavior","title":"Safety Slow Down Behavior","text":"<p>In current autoware implementation if there are no target objects around a crosswalk, ego vehicle will not slow down for the crosswalk. However, if ego vehicle to slow down to a certain speed in such cases is wanted then it is possible by adding some tags to the related crosswalk definition as it is instructed in lanelet2_format_extension.md document.</p>"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#limitations","title":"Limitations","text":"<p>When multiple crosswalks are nearby (such as intersection), this module may make a stop decision even at crosswalks where the object has no intention of crossing.</p> <p> </p> design limits"},{"location":"planning/behavior_velocity_planner/crosswalk-design/#known-issues","title":"Known Issues","text":""},{"location":"planning/behavior_velocity_planner/crosswalk-design/#referencesexternal-links","title":"References/External links","text":"<p>[1] \u4f50\u85e4 \u307f\u306a\u307f, \u65e9\u5742 \u7965\u4e00, \u6e05\u6c34 \u653f\u884c, \u6751\u91ce \u9686\u5f66, \u6a2a\u65ad\u6b69\u884c\u8005\u306b\u5bfe\u3059\u308b\u30c9\u30e9\u30a4\u30d0\u306e\u30ea\u30b9\u30af\u56de\u907f\u884c\u52d5\u306e\u30e2\u30c7\u30eb\u5316, \u81ea\u52d5\u8eca\u6280\u8853\u4f1a\u8ad6\u6587\u96c6, 2013, 44 \u5dfb, 3 \u53f7, p. 931-936.</p>"},{"location":"planning/behavior_velocity_planner/detection-area-design/","title":"Detection area design","text":""},{"location":"planning/behavior_velocity_planner/detection-area-design/#detection-area","title":"Detection Area","text":""},{"location":"planning/behavior_velocity_planner/detection-area-design/#role","title":"Role","text":"<p>If pointcloud is detected in a detection area defined on a map, the stop planning will be executed at the predetermined point.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/detection-area-design/#activation-timing","title":"Activation Timing","text":"<p>This module is activated when there is a detection area on the target lane.</p>"},{"location":"planning/behavior_velocity_planner/detection-area-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>use_dead_line</code> bool [-] weather to use dead line or not <code>use_pass_judge_line</code> bool [-] weather to use pass judge line or not <code>state_clear_time</code> double [s] when the vehicle is stopping for certain time without incoming obstacle, move to STOPPED state <code>stop_margin</code> double [m] a margin that the vehicle tries to stop before stop_line <code>dead_line_margin</code> double [m] ignore threshold that vehicle behind is collide with ego vehicle or not <code>hold_stop_margin_distance</code> double [m] parameter for restart prevention (See Algorithm section)"},{"location":"planning/behavior_velocity_planner/detection-area-design/#inner-workings-algorithm","title":"Inner-workings / Algorithm","text":"<ol> <li>Gets a detection area and stop line from map information and confirms if there is pointcloud in the detection area</li> <li>Inserts stop point l[m] in front of the stop line</li> <li>Inserts a pass judge point to a point where the vehicle can stop with a max deceleration</li> <li>Sets velocity as zero behind the stop line when the ego-vehicle is in front of the pass judge point</li> <li>If the ego vehicle has passed the pass judge point already, it doesn\u2019t stop and pass through.</li> </ol>"},{"location":"planning/behavior_velocity_planner/detection-area-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_velocity_planner/detection-area-design/#restart-prevention","title":"Restart prevention","text":"<p>If it needs X meters (e.g. 0.5 meters) to stop once the vehicle starts moving due to the poor vehicle control performance, the vehicle goes over the stopping position that should be strictly observed when the vehicle starts to moving in order to approach the near stop point (e.g. 0.3 meters away).</p> <p>This module has parameter <code>hold_stop_margin_distance</code> in order to prevent from these redundant restart. If the vehicle is stopped within <code>hold_stop_margin_distance</code> meters from stop point of the module (_front_to_stop_line &lt; hold_stop_margin_distance), the module judges that the vehicle has already stopped for the module's stop point and plans to keep stopping current position even if the vehicle is stopped due to other factors.</p> <p> </p> parameters <p> </p> outside the hold_stop_margin_distance <p> </p> inside the hold_stop_margin_distance"},{"location":"planning/behavior_velocity_planner/intersection-design/","title":"Intersection design","text":""},{"location":"planning/behavior_velocity_planner/intersection-design/#intersection","title":"Intersection","text":""},{"location":"planning/behavior_velocity_planner/intersection-design/#role","title":"Role","text":"<p>Judgement whether a vehicle can go into an intersection or not by a dynamic object information, and planning a velocity of the low-down/stop. This module is designed for rule-based intersection velocity decision that is easy for developers to design its behavior. It generates proper velocity for intersection scene.</p> <p>In addition, the external users / modules (e.g. remote operation) to can intervene the STOP/GO decision for the vehicle behavior. The override interface is expected to be used, for example, for remote intervention in emergency situations or gathering information on operator decisions during development.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#activation-timing","title":"Activation Timing","text":"<p>This function is activated when the attention lane conflicts with the ego vehicle's lane.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#limitations","title":"Limitations","text":"<p>This module allows developers to design vehicle velocity in intersection module using specific rules. This module is affected by object detection and prediction accuracy considering as stuck vehicle in this intersection module.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/behavior_velocity_planner/intersection-design/#how-to-select-attention-target-objects","title":"How To Select Attention Target Objects","text":"<p>Objects that satisfy all of the following conditions are considered as target objects (possible collision objects):</p> <ul> <li>The type of object type is car, truck, bus or motorbike. (Bicycle, pedestrian, animal, unknown are not.)</li> <li>The center of gravity of object is located within a certain distance from the attention lane (threshold = <code>detection_area_margin</code>) .<ul> <li>(Optional condition) The center of gravity is in the intersection area.<ul> <li>To deal with objects that is in the area not covered by the lanelets in the intersection.</li> </ul> </li> </ul> </li> <li>The posture of object is the same direction as the attention lane (threshold = <code>detection_area_angle_threshold</code>).<ul> <li>The orientation of the target is recalculated in this module according to the <code>orientation_reliable</code> and the sign of the velocity of the target.</li> </ul> </li> <li>Not being in the neighboring lanes of the ego vehicle.<ul> <li>neighboring lanes include the ego lane of the vehicle and the adjacent lanes of it with turn_direction as the ego lane.</li> </ul> </li> </ul>"},{"location":"planning/behavior_velocity_planner/intersection-design/#how-to-define-attention-lanes","title":"How to Define Attention Lanes","text":"<p>Target objects are limited by lanelets to prevent unexpected behavior. A lane that satisfies the following conditions is defined as an \"Attention Lane\" and used to define the target object.</p> <ul> <li>The lane crosses with the driving lane of the ego-vehicle</li> <li>The lane has high priority for the driving lane of the ego-vehicle (priority tags are needed to be configured in Lanelet-map according to the situation).</li> </ul> <p>See the following figures to know how to create an attention area and its rationale.</p> <p></p> <p></p> <p></p> <p>Note: the case <code>traffic light, turn right only</code> is not currently implemented.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#collision-check-and-crossing-judgement","title":"Collision Check and Crossing Judgement","text":"<p>The following process is performed for the attention targets to determine whether the ego vehicle can cross the intersection safely. If it is judged that the ego vehicle cannot pass through the intersection with enough margin, it will insert the stopping speed on the stop line of the intersection.</p> <ol> <li>calculate the passing time and the time that the ego vehicle is in the intersection. This time is set as t_s ~ t_et_e</li> <li>extract the predicted path of the target object whose confidence is greater than <code>min_predicted_path_confidence</code>.</li> <li>detect collision between the extracted predicted path and ego's predicted path in the following process.<ol> <li>obtain the passing area of the ego vehicle A_{ego}A_{ego} in t_st_s ~ t_et_e.</li> <li>calculate the passing area of the target object A_{target}A_{target} at t_st_s - <code>collision_start_margin_time</code> ~ t_et_e + <code>collision_end_margin_time</code> for each predicted path (*1).</li> <li>check if A_{ego}A_{ego} and A_{target}A_{target} regions are overlapped (has collision).</li> </ol> </li> <li>when a collision is detected, the module inserts a stop velocity in front of the intersection. Note that there is a time margin for the stop release (*2).</li> <li>If ego is over the <code>pass_judge_line</code>, collision checking is not processed to avoid sudden braking. However if ego velocity is lower than the threshold <code>keep_detection_vel_thr</code> then this module continues collision checking.</li> </ol> <p>(*1) The parameters <code>collision_start_margin_time</code> and <code>collision_end_margin_time</code> can be interpreted as follows:</p> <ul> <li>If the ego vehicle passes through the intersection earlier than the target object, the collision is detected if the time difference between the two is less than <code>collision_start_margin_time</code>.</li> <li>If the ego vehicle passes through the intersection later than the target object, the collision is detected if the time difference between the two is less than <code>collision_end_margin_time</code>.</li> </ul> <p>(*2) If the collision is detected, the state transits to \"stop\" immediately. On the other hand, the collision judgment must be clear for a certain period (default : 2.0[s]) to transit from \"stop\" to \"go\" to prevent to prevent chattering of decisions.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#stop-line-automatic-generation","title":"Stop Line Automatic Generation","text":"<p>The driving lane is complemented at a certain intervals (default : 20 [cm]), and the line which is a margin distance (default : 100cm) in front of the attention lane is defined as a stop line. (Also the length of the vehicle is considered and the stop point is set at the base_link point in front of the stop lane.)</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#pass-judge-line","title":"Pass Judge Line","text":"<p>To avoid a rapid braking, in case that a deceleration more than a threshold (default : 0.5[G]) is needed, the ego vehicle doesn\u2019t stop. In order to judge this condition, pass judge line is set a certain distance (default : 0.5 * v_current^2 / a_max) in front of the stop line. To prevent a chattering, once the ego vehicle passes this line, \u201cstop\u201d decision in the intersection won\u2019t be done any more. To prevent going over the pass judge line before the traffic light stop line, the distance between stop line and pass judge line become 0m in case that there is a stop line between the ego vehicle and an intersection stop line.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#stuck-vehicle-detection","title":"Stuck Vehicle Detection","text":"<p>If there is any object in a certain distance (default : 5[m]) from the end point of the intersection lane on the driving lane and the object velocity is less than a threshold (default 3.0[km/h]), the object is regarded as a stuck vehicle. If the stuck vehicle exists, the ego vehicle cannot enter the intersection.</p> <p>As a related case, if the object in front of the ego vehicle is turning the same direction, this module predicts the stopping point that the object will reach at a certain deceleration (default: -1.0[m/s^2]). If the predicted position is in stuck vehicle detection area AND the position which <code>vehicle length</code> [m] behind the predicted position is in detection area, the ego vehicle will also stop.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>intersection/state_transit_margin_time</code> double [m] time margin to change state <code>intersection/path_expand_width</code> bool [m] path area to see with expansion <code>intersection/stop_line_margin</code> double [m] margin before stop line <code>intersection/stuck_vehicle_detect_dist</code> double [m] this should be the length between cars when they are stopped. <code>intersection/stuck_vehicle_ignore_dist</code> double [m] obstacle stop max distance(5.0[m]) + stuck vehicle size / 2.0[m]) <code>intersection/stuck_vehicle_vel_thr</code> double [m/s] velocity below 3[km/h] is ignored by default <code>intersection/intersection_velocity</code> double [m/s] velocity to pass intersection. 10[km/h] is by default <code>intersection/intersection_max_accel</code> double [m/s^2] acceleration in intersection <code>intersection/detection_area_margin</code> double [m] range for expanding detection area <code>intersection/detection_area_length</code> double [m] range for lidar detection 200[m] is by default <code>intersection/detection_area_angle_threshold</code> double [rad] threshold of angle difference between the detection object and lane <code>intersection/min_predicted_path_confidence</code> double [-] minimum confidence value of predicted path to use for collision detection <code>merge_from_private_road/stop_duration_sec</code> double [s] duration to stop <code>assumed_front_car_decel: 1.0</code> double [m/s^2] deceleration of front car used to check if it could stop in the stuck area at the exit <code>keep_detection_vel_threshold</code> double [m/s] the threshold for ego vehicle for keeping detection after passing <code>pass_judge_line</code>"},{"location":"planning/behavior_velocity_planner/intersection-design/#how-to-tune-parameters","title":"How To Tune Parameters","text":"<ul> <li>The time to change state form <code>Stop</code> to <code>GO</code> is too long.<ul> <li>Change <code>state_transit_margin_time</code> to lower value. Be careful if this margin is too small then vehicle is going to change state many times and cause chattering.</li> </ul> </li> <li>The distance to stuck vehicle is too long.<ul> <li>Change <code>stuck_vehicle_detect_dist</code> to lower value. Note this module consider obstacle stop max distance as detection distance.</li> </ul> </li> <li>The speed in intersection is too slow</li> <li>Change <code>intersection_velocity</code> to higher value.</li> </ul>"},{"location":"planning/behavior_velocity_planner/intersection-design/#flowchart","title":"Flowchart","text":"<p>NOTE current state is treated as <code>STOP</code> if <code>is_entry_prohibited</code> = <code>true</code> else <code>GO</code></p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#known-limits","title":"Known Limits","text":"<ul> <li>This module generate intersection stop line and ignoring lanelet automatically form lanelet map , however if you want to set intersection stop line and ignoring lanelet manually you need to tag <code>right_of_way</code> and <code>yield</code> to all conflicting lanes properly.</li> </ul>"},{"location":"planning/behavior_velocity_planner/intersection-design/#how-to-set-lanelet-map-fot-intersection","title":"How to Set Lanelet Map fot Intersection","text":""},{"location":"planning/behavior_velocity_planner/intersection-design/#set-a-turn_direction-tag-fig-1","title":"Set a turn_direction tag (Fig. 1)","text":"<p>IntersectionModule will be activated by this tag. If this tag is not set, ego-vehicle don\u2019t recognize the lane as an intersection. Even if it\u2019s a straight lane, this tag is mandatory if it is located within intersection.</p> <p>Set a value in <code>turn_direction</code> tag to light up turn signals.</p> <p>Values of <code>turn_direction</code> must be one of \u201cstraight\u201d(no turn signal), \u201cright\u201d or \u201cleft\u201d. Autoware will light up respective turn signals 30[m] before entering the specified lane. You may also set optional tag \u201cturn_signal_distance\u201d to modify the distance to start lighting up turn signals.</p> <p>Lanes within intersections must be defined as a single Lanelet. For example, blue lane in Fig.3 cannot be split into 2 Lanelets.</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#explicitly-describe-a-stop-position-roadmarking-optional-fig-2","title":"Explicitly describe a stop position [RoadMarking] (Optional) (Fig. 2)","text":"<p>As a default, IntersectionModule estimates a stop position by the crossing point of driving lane and attention lane. But there are some cases like Fig.2 in which we would like to set a stop position explicitly. When a <code>stop_line</code> is defined as a <code>RoadMarking</code> item in the intersection lane, it overwrites the stop position. (Not only creating <code>stop_line</code>, but also defining as a <code>RoadMaking</code> item are needed.)</p>"},{"location":"planning/behavior_velocity_planner/intersection-design/#exclusion-setting-of-attention-lanes-rightofway-fig3","title":"Exclusion setting of attention lanes [RightOfWay] (Fig.3)","text":"<p>By default, IntersectionModule treats all lanes crossing with the registered lane as attention targets (yellow and green lanelets). But in some cases (e.g. when driving lane is priority lane or traffic light is green for the driving lane), we want to ignore some of the yield lanes. By setting <code>RightOfWay</code> of the <code>RegulatoryElement</code> item, we can define lanes to be ignored. Register ignored lanes as \u201cyield\u201d and register the attention lanes and driving lane as \u201cright_of_way\u201d lanelets in <code>RightOfWay</code> RegulatoryElement (For an intersection with traffic lights, we need to create items for each lane in the intersection. Please note that it needs a lot of man-hours.)</p>"},{"location":"planning/behavior_velocity_planner/merge-from-private-design/","title":"Merge from private design","text":""},{"location":"planning/behavior_velocity_planner/merge-from-private-design/#merge-from-private","title":"Merge From Private","text":""},{"location":"planning/behavior_velocity_planner/merge-from-private-design/#role","title":"Role","text":"<p>When an ego vehicle enters a public road from a private road (e.g. a parking lot), it needs to face and stop before entering the public road to make sure it is safe.</p> <p>This module is activated when there is an intersection at the private area from which the vehicle enters the public road. The stop line is generated both when the goal is in the intersection lane and when the path goes beyond the intersection lane. The basic behavior is the same as the intersection module, but the ego vehicle must stop once at the stop line.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/merge-from-private-design/#activation-timing","title":"Activation Timing","text":"<p>This module is activated when the following conditions are met:</p> <ul> <li>ego-lane has a <code>private</code> tag</li> <li>ego-lane has a conflict with other no-private lanelets</li> </ul>"},{"location":"planning/behavior_velocity_planner/merge-from-private-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>merge_from_private_road/stop_duration_sec</code> double [m] time margin to change state"},{"location":"planning/behavior_velocity_planner/merge-from-private-design/#known-issue","title":"Known Issue","text":"<p>If ego vehicle go over the stop line for a certain distance, then ego vehicle will not transit from STOP.</p>"},{"location":"planning/behavior_velocity_planner/no-stopping-area-design/","title":"No stopping area design","text":""},{"location":"planning/behavior_velocity_planner/no-stopping-area-design/#no-stopping-area","title":"No Stopping Area","text":""},{"location":"planning/behavior_velocity_planner/no-stopping-area-design/#role","title":"Role","text":"<p>This module plans to avoid stop in 'no stopping area`.</p> <p></p> <ul> <li>PassThrough case<ul> <li>if ego vehicle go through pass judge point, then ego vehicle can't stop with maximum jerk and acceleration, so this module doesn't insert stop velocity. In this case override or external operation is necessary.</li> </ul> </li> <li>STOP case<ul> <li>If there is a stuck vehicle or stop velocity around <code>no_stopping_area</code>, then vehicle stops inside <code>no_stopping_area</code> so this module makes stop velocity in front of <code>no_stopping_area</code></li> </ul> </li> <li>GO case<ul> <li>else</li> </ul> </li> </ul>"},{"location":"planning/behavior_velocity_planner/no-stopping-area-design/#limitation","title":"Limitation","text":"<p>This module allows developers to design vehicle velocity in <code>no_stopping_area</code> module using specific rules. Once ego vehicle go through pass through point, ego vehicle does't insert stop velocity and does't change decision from GO. Also this module only considers dynamic object in order to avoid unnecessarily stop.</p>"},{"location":"planning/behavior_velocity_planner/no-stopping-area-design/#modelparameter","title":"ModelParameter","text":"Parameter Type Description <code>state_clear_time</code> double [s] time to clear stop state <code>stuck_vehicle_vel_thr</code> double [m/s] vehicles below this velocity are considered as stuck vehicle. <code>stop_margin</code> double [m] margin to stop line at no stopping area <code>dead_line_margin</code> double [m] if ego pass this position GO <code>stop_line_margin</code> double [m] margin to auto-gen stop line at no stopping area <code>detection_area_length</code> double [m] length of searching polygon <code>stuck_vehicle_front_margin</code> double [m] obstacle stop max distance"},{"location":"planning/behavior_velocity_planner/no-stopping-area-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/","title":"Occlusion spot design","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#occlusion-spot","title":"Occlusion Spot","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#role","title":"Role","text":"<p>This module plans safe velocity to slow down before reaching collision point that hidden object is darting out from <code>occlusion spot</code> where driver can't see clearly because of obstacles.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#activation-timing","title":"Activation Timing","text":"<p>This module is activated if <code>launch_occlusion_spot</code> becomes true. To make pedestrian first zone map tag is one of the TODOs.</p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#limitation-and-todos","title":"Limitation and TODOs","text":"<p>This module is prototype implementation to care occlusion spot. To solve the excessive deceleration due to false positive of the perception, the logic of detection method can be selectable. This point has not been discussed in detail and needs to be improved.</p> <ul> <li>Make occupancy grid for planning.</li> <li>Make map tag for occlusion spot.</li> <li>About the best safe motion.</li> </ul> <p>TODOs are written in each Inner-workings / Algorithms (see the description below).</p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#logics-working","title":"Logics Working","text":"<p>There are several types of occlusions, such as \"occlusions generated by parked vehicles\" and \"occlusions caused by obstructions\". In situations such as driving on road with obstacles, where people jump out of the way frequently, all possible occlusion spots must be taken into account. This module considers all occlusion spots calculated from the occupancy grid, but it is not reasonable to take into account all occlusion spots for example, people jumping out from behind a guardrail, or behind cruising vehicle. Therefore currently detection area will be limited to to use predicted object information.</p> <p>Note that this decision logic is still under development and needs to be improved.</p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#detectionarea-polygon","title":"DetectionArea Polygon","text":"<p>This module considers TTV from pedestrian velocity and lateral distance to occlusion spot. TTC is calculated from ego velocity and acceleration and longitudinal distance until collision point using motion velocity smoother. To compute fast this module only consider occlusion spot whose TTV is less than TTC and only consider area within \"max lateral distance\".</p> <p></p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#occlusion-spot-occupancy-grid-base","title":"Occlusion Spot Occupancy Grid Base","text":"<p>This module considers any occlusion spot around ego path computed from the occupancy grid. Due to the computational cost occupancy grid is not high resolution and this will make occupancy grid noisy so this module add information of occupancy to occupancy grid map.</p> <p>TODO: consider hight of obstacle point cloud to generate occupancy grid.</p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#collision-free-judgement","title":"Collision Free Judgement","text":"<p>obstacle that can run out from occlusion should have free space until intersection from ego vehicle</p> <p></p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#partition-lanelet","title":"Partition Lanelet","text":"<p>By using lanelet information of \"guard_rail\", \"fence\", \"wall\" tag, it's possible to remove unwanted occlusion spot.</p> <p>By using static object information, it is possible to make occupancy grid more accurate.</p> <p>To make occupancy grid for planning is one of the TODOs.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#possible-collision","title":"Possible Collision","text":"<p>obstacle that can run out from occlusion is interrupted by moving vehicle.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#about-safe-motion","title":"About safe motion","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#the-concept-of-safe-velocity-and-margin","title":"The Concept of Safe Velocity and Margin","text":"<p>The safe slowdown velocity is calculated from the below parameters of ego emergency braking system and time to collision. Below calculation is included but change velocity dynamically is not recommended for planner.</p> <ul> <li>jerk limit[m/s^3]</li> <li>deceleration limit[m/s2]</li> <li>delay response time[s]</li> <li> <p>time to collision of pedestrian[s]   with these parameters we can briefly define safe motion before occlusion spot for ideal environment.</p> <p></p> </li> </ul> <p>This module defines safe margin to consider ego distance to stop and collision path point geometrically. While ego is cruising from safe margin to collision path point, ego vehicle keeps the same velocity as occlusion spot safe velocity.</p> <p></p> <p>Note: This logic assumes high-precision vehicle speed tracking and margin for decel point might not be the best solution, and override with manual driver is considered if pedestrian really run out from occlusion spot.</p> <p>TODO: consider one of the best choices</p> <ol> <li>stop in front of occlusion spot</li> <li>insert 1km/h velocity in front of occlusion spot</li> <li>slowdown this way</li> <li>etc... .</li> </ol>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#maximum-slowdown-velocity","title":"Maximum Slowdown Velocity","text":"<p>The maximum slowdown velocity is calculated from the below parameters of ego current velocity and acceleration with maximum slowdown jerk and maximum slowdown acceleration in order not to slowdown too much.</p> <ul> <li>j_{max} slowdown jerk limit[m/s^3]</li> <li>a_{max}a_{max} slowdown deceleration limit[m/s2]</li> <li>v_{0}v_{0} current velocity[m/s]</li> <li>a_{0}a_{0} current acceleration[m/s]</li> </ul> <p></p>"},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>pedestrian_vel</code> double [m/s] maximum velocity assumed pedestrian coming out from occlusion point. <code>pedestrian_radius</code> double [m] assumed pedestrian radius which fits in occlusion spot. Parameter Type Description <code>use_object_info</code> bool [-] whether to reflect object info to occupancy grid map or not. <code>use_partition_lanelet</code> bool [-] whether to use partition lanelet map data. Parameter /debug Type Description <code>is_show_occlusion</code> bool [-] whether to show occlusion point markers.\u3000 <code>is_show_cv_window</code> bool [-] whether to show open_cv debug window. <code>is_show_processing_time</code> bool [-] whether to show processing time. Parameter /threshold Type Description <code>detection_area_length</code> double [m] the length of path to consider occlusion spot <code>stuck_vehicle_vel</code> double [m/s] velocity below this value is assumed to stop <code>lateral_distance</code> double [m] maximum lateral distance to consider hidden collision Parameter /motion Type Description <code>safety_ratio</code> double [-] safety ratio for jerk and acceleration <code>max_slow_down_jerk</code> double [m/s^3] jerk for safe brake <code>max_slow_down_accel</code> double [m/s^2] deceleration for safe brake <code>non_effective_jerk</code> double [m/s^3] weak jerk for velocity planning. <code>non_effective_acceleration</code> double [m/s^2] weak deceleration for velocity planning. <code>min_allowed_velocity</code> double [m/s] minimum velocity allowed <code>safe_margin</code> double [m] maximum error to stop with emergency braking system. Parameter /detection_area Type Description <code>min_occlusion_spot_size</code> double [m] the length of path to consider occlusion spot <code>slice_length</code> double [m] the distance of divided detection area <code>max_lateral_distance</code> double [m] buffer around the ego path used to build the detection_area area. Parameter /grid Type Description <code>free_space_max</code> double [-] maximum value of a free space cell in the occupancy grid <code>occupied_min</code> double [-] buffer around the ego path used to build the detection_area area."},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#rough-overview-of-the-whole-process","title":"Rough overview of the whole process","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#detail-process-for-predicted-objectnot-updated","title":"Detail process for predicted object(not updated)","text":""},{"location":"planning/behavior_velocity_planner/occlusion-spot-design/#detail-process-for-occupancy-grid-base","title":"Detail process for Occupancy grid base","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/","title":"Run out design","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#run-out","title":"Run Out","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#role","title":"Role","text":"<p><code>run_out</code> is the module that decelerates and stops for dynamic obstacles such as pedestrians and bicycles.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#activation-timing","title":"Activation Timing","text":"<p>This module is activated if <code>launch_run_out</code> becomes true</p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#flow-chart","title":"Flow chart","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#preprocess-path","title":"Preprocess path","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#calculate-the-expected-target-velocity-for-ego-vehicle","title":"Calculate the expected target velocity for ego vehicle","text":"<p>Calculate the expected target velocity for the ego vehicle path to calculate time to collision with obstacles more precisely. The expected target velocity is calculated with motion velocity smoother module by using current velocity, current acceleration and velocity limits directed by the map and external API.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#extend-the-path","title":"Extend the path","text":"<p>The path is extended by the length of base link to front to consider obstacles after the goal.</p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#trim-path-from-ego-position","title":"Trim path from ego position","text":"<p>The path is trimmed from ego position to a certain distance to reduce calculation time. Trimmed distance is specified by parameter of <code>detection_distance</code>.</p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#preprocess-obstacles","title":"Preprocess obstacles","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#create-data-of-abstracted-dynamic-obstacle","title":"Create data of abstracted dynamic obstacle","text":"<p>This module can handle multiple types of obstacles by creating abstracted dynamic obstacle data layer. Currently we have 3 types of detection method (Object, ObjectWithoutPath, Points) to create abstracted obstacle data.</p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#abstracted-dynamic-obstacle","title":"Abstracted dynamic obstacle","text":"<p>Abstracted obstacle data has following information.</p> Name Type Description pose <code>geometry_msgs::msg::Pose</code> pose of the obstacle classifications <code>std::vector&lt;autoware_auto_perception_msgs::msg::ObjectClassification&gt;</code> classifications with probability shape <code>autoware_auto_perception_msgs::msg::Shape</code> shape of the obstacle predicted_paths <code>std::vector&lt;DynamicObstacle::PredictedPath&gt;</code> predicted paths with confidence. this data doesn't have time step because we use minimum and maximum velocity instead. min_velocity_mps <code>float</code> minimum velocity of the obstacle. specified by parameter of <code>dynamic_obstacle.min_vel_kmph</code> max_velocity_mps <code>float</code> maximum velocity of the obstacle. specified by parameter of <code>dynamic_obstacle.max_vel_kmph</code> <p>Enter the maximum/minimum velocity of the object as a parameter, adding enough margin to the expected velocity. This parameter is used to create polygons for collision detection.</p> <p>Future work: Determine the maximum/minimum velocity from the estimated velocity with covariance of the object</p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#3-types-of-detection-method","title":"3 types of detection method","text":"<p>We have 3 types of detection method to meet different safety and availability requirements. The characteristics of them are shown in the table below. Method of <code>Object</code> has high availability (less false positive) because it detects only objects whose predicted path is on the lane. However, sometimes it is not safe because perception may fail to detect obstacles or generate incorrect predicted paths. On the other hand, method of <code>Points</code> has high safety (less false negative) because it uses pointcloud as input. Since points don't have a predicted path, the path that moves in the direction normal to the path of ego vehicle is considered to be the predicted path of abstracted dynamic obstacle data. However, without proper adjustment of filter of points, it may detect a lot of points and it will result in very low availability. Method of <code>ObjectWithoutPath</code> has the characteristics of an intermediate of <code>Object</code> and <code>Points</code>.</p> Method Description Object use an object with the predicted path for collision detection. ObjectWithoutPath use an object but not use the predicted path for collision detection. replace the path assuming that an object jumps out to the lane at specified velocity. Points use filtered points for collision detection. the path is created assuming that points jump out to the lane. points are regarded as an small circular shaped obstacle. <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#exclude-obstacles-outside-of-partition","title":"Exclude obstacles outside of partition","text":"<p>This module can exclude the obstacles outside of partition such as guardrail, fence, and wall. We need lanelet map that has the information of partition to use this feature. By this feature, we can reduce unnecessary deceleration by obstacles that are unlikely to jump out to the lane. You can choose whether to use this feature by parameter of <code>use_partition_lanelet</code>.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#collision-detection","title":"Collision detection","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#detect-collision-with-dynamic-obstacles","title":"Detect collision with dynamic obstacles","text":"<p>Along the ego vehicle path, determine the points where collision detection is to be performed for each <code>detection_span</code>.</p> <p>The travel times to the each points are calculated from the expected target velocity.</p> <p></p> <p>For the each points, collision detection is performed using the footprint polygon of the ego vehicle and the polygon of the predicted location of the obstacles. The predicted location of the obstacles is described as rectangle or polygon that has the range calculated by min velocity, max velocity and the ego vehicle's travel time to the point. If the input type of the dynamic obstacle is <code>Points</code>, the obstacle shape is defined as a small cylinder.</p> <p></p> <p>Multiple points are detected as collision points because collision detection is calculated between two polygons. So we select the point that is on the same side as the obstacle and close to ego vehicle as the collision point.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#insert-velocity","title":"Insert velocity","text":""},{"location":"planning/behavior_velocity_planner/run-out-design/#insert-velocity-to-decelerate-for-obstacles","title":"Insert velocity to decelerate for obstacles","text":"<p>If the collision is detected, stop point is inserted on distance of base link to front + stop margin from the selected collision point. The base link to front means the distance between base_link (center of rear-wheel axis) and front of the car. Stop margin is determined by the parameter of <code>stop_margin</code>.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#insert-velocity-to-approach-the-obstacles","title":"Insert velocity to approach the obstacles","text":"<p>If you select the method of <code>Points</code> or <code>ObjectWithoutPath</code>, sometimes ego keeps stopping in front of the obstacle. To avoid this problem, This feature has option to approach the obstacle with slow velocity after stopping. If the parameter of <code>approaching.enable</code> is set to true, ego will approach the obstacle after ego stopped for <code>state.stop_time_thresh</code> seconds. The maximum velocity of approaching can be specified by the parameter of <code>approaching.limit_vel_kmph</code>. The decision to approach the obstacle is determined by a simple state transition as following image.</p> <p></p> <p></p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#limit-velocity-with-specified-jerk-and-acc-limit","title":"Limit velocity with specified jerk and acc limit","text":"<p>The maximum slowdown velocity is calculated in order not to slowdown too much. See the Occlusion Spot document for more details. You can choose whether to use this feature by parameter of <code>slow_down_limit.enable</code>.</p>"},{"location":"planning/behavior_velocity_planner/run-out-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>detection_method</code> string [-] candidate: Object, ObjectWithoutPath, Points <code>use_partition_lanelet</code> bool [-] whether to use partition lanelet map data <code>specify_decel_jerk</code> bool [-] whether to specify jerk when ego decelerates <code>stop_margin</code> double [m] the vehicle decelerates to be able to stop with this margin <code>passing_margin</code> double [m] the vehicle begins to accelerate if the vehicle's front in predicted position is ahead of the obstacle + this margin <code>deceleration_jerk</code> double [m/s^3] ego decelerates with this jerk when stopping for obstacles <code>detection_distance</code> double [m] ahead distance from ego to detect the obstacles <code>detection_span</code> double [m] calculate collision with this span to reduce calculation time <code>min_vel_ego_kmph</code> double [km/h] min velocity to calculate time to collision Parameter /detection_area Type Description <code>margin_ahead</code> double [m] ahead margin for detection area polygon <code>margin_behind</code> double [m] behind margin for detection area polygon Parameter /dynamic_obstacle Type Description <code>min_vel_kmph</code> double [km/h] minimum velocity for dynamic obstacles <code>max_vel_kmph</code> double [km/h] maximum velocity for dynamic obstacles <code>diameter</code> double [m] diameter of obstacles. used for creating dynamic obstacles from points <code>height</code> double [m] height of obstacles. used for creating dynamic obstacles from points <code>max_prediction_time</code> double [sec] create predicted path until this time <code>time_step</code> double [sec] time step for each path step. used for creating dynamic obstacles from points or objects without path <code>points_interval</code> double [m] divide obstacle points into groups with this interval, and detect only lateral nearest point. used only for Points method Parameter /approaching Type Description <code>enable</code> bool [-] whether to enable approaching after stopping <code>margin</code> double [m] distance on how close ego approaches the obstacle <code>limit_vel_kmph</code> double [km/h] limit velocity for approaching after stopping Parameter /state Type Description <code>stop_thresh</code> double [m/s] threshold to decide if ego is stopping <code>stop_time_thresh</code> double [sec] threshold for stopping time to transit to approaching state <code>disable_approach_dist</code> double [m] end the approaching state if distance to the obstacle is longer than this value <code>keep_approach_duration</code> double [sec] keep approach state for this duration to avoid chattering of state transition Parameter /slow_down_limit Type Description <code>enable</code> bool [-] whether to enable to limit velocity with max jerk and acc <code>max_jerk</code> double [m/s^3] minimum jerk deceleration for safe brake. <code>max_acc</code> double [m/s^2] minimum accel deceleration for safe brake."},{"location":"planning/behavior_velocity_planner/run-out-design/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Calculate obstacle's min velocity and max velocity from covariance</li> <li>Detect collisions with polygon object</li> <li>Handle the case when the predicted path of obstacles are not straight line<ul> <li>Currently collision check is calculated based on the assumption that the predicted path of the obstacle is a straight line</li> </ul> </li> </ul>"},{"location":"planning/behavior_velocity_planner/speed-bump-design/","title":"Speed bump design","text":""},{"location":"planning/behavior_velocity_planner/speed-bump-design/#speed-bump","title":"Speed Bump","text":""},{"location":"planning/behavior_velocity_planner/speed-bump-design/#role","title":"Role","text":"<p>This module plans the velocity of the related part of the path in case there is speed bump regulatory element referring to it.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/speed-bump-design/#activation-timing","title":"Activation Timing","text":"<p>The manager launch speed bump scene module when there is speed bump regulatory element referring to the reference path.</p>"},{"location":"planning/behavior_velocity_planner/speed-bump-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>slow_start_margin</code> double [m] margin for ego vehicle to slow down before speed_bump <code>slow_end_margin</code> double [m] margin for ego vehicle to accelerate after speed_bump <code>print_debug_info</code> bool whether debug info will be printed or not"},{"location":"planning/behavior_velocity_planner/speed-bump-design/#speed-calculation","title":"Speed Calculation","text":"<ul> <li>limits for speed bump height and slow down speed to create a linear equation</li> </ul> Parameter Type Description <code>min_height</code> double [m] minimum height assumption of the speed bump <code>max_height</code> double [m] maximum height assumption of the speed bump <code>min_speed</code> double [m/s] minimum speed assumption of slow down speed <code>max_speed</code> double [m/s] maximum speed assumption of slow down speed"},{"location":"planning/behavior_velocity_planner/speed-bump-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<ul> <li>Get speed bump regulatory element on the path from lanelet2 map</li> <li>Calculate <code>slow_down_speed</code> wrt to <code>speed_bump_height</code> specified in regulatory element or   read <code>slow_down_speed</code> tag from speed bump annotation if available</li> </ul> <p>Note: If in speed bump annotation <code>slow_down_speed</code> tag is used then calculating the speed wrt the speed bump height will be ignored. In such case, specified <code>slow_down_speed</code> value in [kph] is being used.</p> <ul> <li>Get the intersection points between path and speed bump polygon</li> <li>Calculate <code>slow_start_point</code> &amp; <code>slow_end_point</code> wrt the intersection points and insert them to   path</li> <li>If <code>slow_start_point</code> or <code>slow_end_point</code> can not be inserted with given/calculated offset values   check if any path point can be virtually assigned as <code>slow_start_point</code> or <code>slow_end_point</code></li> </ul> <p></p> <ul> <li>Assign <code>slow_down_speed</code> to the path points between <code>slow_start_point</code> or <code>slow_end_point</code></li> </ul>"},{"location":"planning/behavior_velocity_planner/speed-bump-design/#future-work","title":"Future Work","text":"<ul> <li>In an article here, a bump modeling method   is proposed. Simply it is based on fitting the bump in a circle and a radius calculation is done   with it. Although the velocity calculation is based on just the height of the bump in the recent   implementation, applying this method is intended in the future which will yield more realistic   results.</li> </ul>"},{"location":"planning/behavior_velocity_planner/stop-line-design/","title":"Stop line design","text":""},{"location":"planning/behavior_velocity_planner/stop-line-design/#stop-line","title":"Stop Line","text":""},{"location":"planning/behavior_velocity_planner/stop-line-design/#role","title":"Role","text":"<p>This module plans velocity so that the vehicle can stop right before stop lines and restart driving after stopped.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/stop-line-design/#activation-timing","title":"Activation Timing","text":"<p>This module is activated when there is a stop line in a target lane.</p>"},{"location":"planning/behavior_velocity_planner/stop-line-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>stop_margin</code> double a margin that the vehicle tries to stop before stop_line <code>stop_check_dist</code> double when the vehicle is within <code>stop_check_dist</code> from stop_line and stopped, move to STOPPED state <code>hold_stop_margin_distance</code> double [m] parameter for restart prevention (See Algorithm section)"},{"location":"planning/behavior_velocity_planner/stop-line-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<ul> <li>Gets a stop line from map information.</li> <li>insert a stop point on the path from the stop line defined in the map and the ego vehicle length.</li> <li>Sets velocities of the path after the stop point to 0[m/s].</li> <li>Release the inserted stop velocity when the vehicle stops within a radius of 2[m] from the stop point.</li> </ul>"},{"location":"planning/behavior_velocity_planner/stop-line-design/#flowchart","title":"Flowchart","text":"<p>This algorithm is based on <code>segment</code>. <code>segment</code> consists of two node points. It's useful for removing boundary conditions because if <code>segment(i)</code> exists we can assume <code>node(i)</code> and <code>node(i+1)</code> exist.</p> <p></p> <p>First, this algorithm finds a collision between reference path and stop line. Then, we can get <code>collision segment</code> and <code>collision point</code>.</p> <p></p> <p>Next, based on <code>collision point</code>, it finds <code>offset segment</code> by iterating backward points up to a specific offset length. The offset length is <code>stop_margin</code>(parameter) + <code>base_link to front</code>(to adjust head pose to stop line). Then, we can get <code>offset segment</code> and <code>offset from segment start</code>.</p> <p></p> <p>After that, we can calculate a offset point from <code>offset segment</code> and <code>offset</code>. This will be <code>stop_pose</code>.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/stop-line-design/#restart-prevention","title":"Restart prevention","text":"<p>If it needs X meters (e.g. 0.5 meters) to stop once the vehicle starts moving due to the poor vehicle control performance, the vehicle goes over the stopping position that should be strictly observed when the vehicle starts to moving in order to approach the near stop point (e.g. 0.3 meters away).</p> <p>This module has parameter <code>hold_stop_margin_distance</code> in order to prevent from these redundant restart. If the vehicle is stopped within <code>hold_stop_margin_distance</code> meters from stop point of the module (_front_to_stop_line &lt; hold_stop_margin_distance), the module judges that the vehicle has already stopped for the module's stop point and plans to keep stopping current position even if the vehicle is stopped due to other factors.</p> <p> </p> parameters <p> </p> outside the hold_stop_margin_distance <p> </p> inside the hold_stop_margin_distance"},{"location":"planning/behavior_velocity_planner/traffic-light-design/","title":"Traffic light design","text":""},{"location":"planning/behavior_velocity_planner/traffic-light-design/#traffic-light","title":"Traffic Light","text":""},{"location":"planning/behavior_velocity_planner/traffic-light-design/#role","title":"Role","text":"<p>Judgement whether a vehicle can go into an intersection or not by internal and external traffic light status, and planning a velocity of the stop if necessary. This module is designed for rule-based velocity decision that is easy for developers to design its behavior. It generates proper velocity for traffic light scene.</p> <p>In addition, the STOP/GO interface of behavior_velocity_planner allows external users / modules (e.g. remote operation) to intervene the decision of the internal perception. This function is expected to be used, for example, for remote intervention in detection failure or gathering information on operator decisions during development.</p> <p></p>"},{"location":"planning/behavior_velocity_planner/traffic-light-design/#limitations","title":"Limitations","text":"<p>This module allows developers to design STOP/GO in traffic light module using specific rules. Due to the property of rule-based planning, the algorithm is greatly depends on object detection and perception accuracy considering traffic light. Also, this module only handles STOP/Go at traffic light scene, so rushing or quick decision according to traffic condition is future work.</p>"},{"location":"planning/behavior_velocity_planner/traffic-light-design/#activation-timing","title":"Activation Timing","text":"<p>This module is activated when there is traffic light in ego lane.</p>"},{"location":"planning/behavior_velocity_planner/traffic-light-design/#algorithm","title":"Algorithm","text":"<ol> <li> <p>Obtains a traffic light mapped to the route and a stop line correspond to the traffic light from a map information.</p> </li> <li> <p>Uses the highest reliability one of the traffic light recognition result and if the color of that was red, generates a stop point.</p> </li> <li> <p>When vehicle current velocity is</p> <ul> <li>higher than 2.0m/s \u21d2 pass judge(using next slide formula)</li> </ul> <ul> <li>lower than 2.0m/s \u21d2 stop</li> </ul> </li> <li> <p>When it to be judged that vehicle can\u2019t stop before stop line, autoware chooses one of the following behaviors</p> <ul> <li>\"can pass through\" stop line during yellow lamp =&gt; pass</li> </ul> <ul> <li>\"can\u2019t pass through\" stop line during yellow lamp =&gt; emergency stop</li> </ul> </li> </ol>"},{"location":"planning/behavior_velocity_planner/traffic-light-design/#dilemma-zone","title":"Dilemma Zone","text":"<ul> <li> <p>yellow lamp line</p> <p>It\u2019s called \u201cyellow lamp line\u201d which shows the distance traveled by the vehicle during yellow lamp.</p> </li> </ul> <ul> <li> <p>dilemma zone</p> <p>It\u2019s called \u201cdilemma zone\u201d which satisfies following conditions:</p> <ul> <li>vehicle can\u2019t pass through stop line during yellow lamp.(right side of the yellow lamp line)</li> </ul> <ul> <li> <p>vehicle can\u2019t stop under deceleration and jerk limit.(left side of the pass judge curve)</p> <p>\u21d2emergency stop(relax deceleration and jerk limitation in order to observe the traffic regulation)</p> </li> </ul> </li> </ul> <ul> <li> <p>optional zone</p> <p>It\u2019s called \u201coptional zone\u201d which satisfies following conditions:</p> <ul> <li>vehicle can pass through stop line during yellow lamp.(left side of the yellow lamp line)</li> </ul> <ul> <li> <p>vehicle can stop under deceleration and jerk limit.(right side of the pass judge curve)</p> <p>\u21d2 stop(autoware selects the safety choice)</p> </li> </ul> </li> </ul>"},{"location":"planning/behavior_velocity_planner/traffic-light-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>stop_margin</code> double [m] margin before stop point <code>tl_state_timeout</code> double [s] time out for detected traffic light result. <code>external_tl_state_timeout</code> double [s] time out for external traffic input <code>yellow_lamp_period</code> double [s] time for yellow lamp <code>enable_pass_judge</code> bool [-] whether to use pass judge"},{"location":"planning/behavior_velocity_planner/traffic-light-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_velocity_planner/traffic-light-design/#known-limits","title":"Known Limits","text":"<ul> <li>tbd.</li> </ul>"},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/","title":"Virtual traffic light design","text":""},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#virtual-traffic-light","title":"Virtual Traffic Light","text":""},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#role","title":"Role","text":"<p>Autonomous vehicles have to cooperate with the infrastructures such as:</p> <ul> <li>Warehouse shutters</li> <li>Traffic lights with V2X support</li> <li>Communication devices at intersections</li> <li>Fleet Management Systems (FMS)</li> </ul> <p>The following items are example cases:</p> <ol> <li> <p>Traffic control by traffic lights with V2X support    </p> </li> <li> <p>Intersection coordination of multiple vehicles by FMS.    </p> </li> </ol> <p>It's possible to make each function individually, however, the use cases can be generalized with these three elements.</p> <ol> <li><code>start</code>: Start a cooperation procedure after the vehicle enters a certain zone.</li> <li><code>stop</code>: Stop at a defined stop line according to the status received from infrastructures.</li> <li><code>end</code>: Finalize the cooperation procedure after the vehicle reaches the exit zone. This should be done within the range of stable communication.</li> </ol> <p>This module sends/receives status from infrastructures and plans the velocity of the cooperation result.</p>"},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#system-configuration-diagram","title":"System Configuration Diagram","text":"<p>Planner and each infrastructure communicate with each other using common abstracted messages.</p> <ul> <li>Special handling for each infrastructure is not scalable. The interface is defined as an Autoware API.</li> <li>The requirements for each infrastructure are slightly different, but will be handled flexibly.</li> </ul> <p>FMS: Intersection coordination when multiple vehicles are in operation and the relevant lane is occupied</p> <ul> <li>Automatic shutter: Open the shutter when approaching/close it when leaving</li> <li>Manual shutter: Have the driver open and close the shutter.</li> <li>Remote control signal: Have the driver change the signal status to match the direction of travel.</li> <li>Warning light: Activate the warning light</li> </ul> <p>Support different communication methods for different infrastructures</p> <ul> <li>HTTP</li> <li>Bluetooth</li> <li>ZigBee</li> </ul> <p>Have different meta-information for each geographic location</p> <ul> <li>Associated lane ID</li> <li>Hardware ID</li> <li>Communication method</li> </ul> <p>FMS: Fleet Management System</p> <p></p>"},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#module-parameters","title":"Module Parameters","text":"Parameter Type Description <code>max_delay_sec</code> double [s] maximum allowed delay for command <code>near_line_distance</code> double [m] threshold distance to stop line to check ego stop. <code>dead_line_margin</code> double [m] threshold distance that this module continue to insert stop line. <code>hold_stop_margin_distance</code> double [m] parameter for restart prevention (See following section) <code>check_timeout_after_stop_line</code> bool [-] check timeout to stop when linkage is disconnected"},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#restart-prevention","title":"Restart prevention","text":"<p>If it needs X meters (e.g. 0.5 meters) to stop once the vehicle starts moving due to the poor vehicle control performance, the vehicle goes over the stopping position that should be strictly observed when the vehicle starts to moving in order to approach the near stop point (e.g. 0.3 meters away).</p> <p>This module has parameter <code>hold_stop_margin_distance</code> in order to prevent from these redundant restart. If the vehicle is stopped within <code>hold_stop_margin_distance</code> meters from stop point of the module (_front_to_stop_line &lt; hold_stop_margin_distance), the module judges that the vehicle has already stopped for the module's stop point and plans to keep stopping current position even if the vehicle is stopped due to other factors.</p> <p> </p> parameters <p> </p> outside the hold_stop_margin_distance <p> </p> inside the hold_stop_margin_distance"},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#flowchart","title":"Flowchart","text":""},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#map-format","title":"Map Format","text":"<ul> <li>To avoid sudden braking, the length between the start line and stop line of a virtual traffic light must be longer than l_{\\mathrm{min}} calculated as follows, assuming that v_0v_0 is the velocity when passing the start line and a_{\\mathrm{min}}a_{\\mathrm{min}} is minimum acceleration defined in Autoware.</li> </ul>  \\begin{align} l_{\\mathrm{min}} = -\\frac{v_0^2}{2 a_{\\mathrm{min}}} \\end{align}   \\begin{align} l_{\\mathrm{min}} = -\\frac{v_0^2}{2 a_{\\mathrm{min}}} \\end{align}"},{"location":"planning/behavior_velocity_planner/virtual-traffic-light-design/#known-limits","title":"Known Limits","text":"<ul> <li>tbd.</li> </ul>"},{"location":"planning/costmap_generator/","title":"costmap_generator","text":""},{"location":"planning/costmap_generator/#costmap_generator_node","title":"costmap_generator_node","text":"<p>This node reads <code>PointCloud</code> and/or <code>DynamicObjectArray</code> and creates an <code>OccupancyGrid</code> and <code>GridMap</code>. <code>VectorMap(Lanelet2)</code> is optional.</p>"},{"location":"planning/costmap_generator/#input-topics","title":"Input topics","text":"Name Type Description <code>~input/objects</code> autoware_auto_perception_msgs::PredictedObjects predicted objects, for obstacles areas <code>~input/points_no_ground</code> sensor_msgs::PointCloud2 ground-removed points, for obstacle areas which can't be detected as objects <code>~input/vector_map</code> autoware_auto_mapping_msgs::HADMapBin vector map, for drivable areas <code>~input/scenario</code> tier4_planning_msgs::Scenario scenarios to be activated, for node activation"},{"location":"planning/costmap_generator/#output-topics","title":"Output topics","text":"Name Type Description <code>~output/grid_map</code> grid_map_msgs::GridMap costmap as GridMap, values are from 0.0 to 1.0 <code>~output/occupancy_grid</code> nav_msgs::OccupancyGrid costmap as OccupancyGrid, values are from 0 to 100"},{"location":"planning/costmap_generator/#output-tfs","title":"Output TFs","text":"<p>None</p>"},{"location":"planning/costmap_generator/#how-to-launch","title":"How to launch","text":"<ol> <li>Write your remapping info in <code>costmap_generator.launch</code> or add args when executing <code>roslaunch</code></li> <li>Run <code>roslaunch costmap_generator costmap_generator.launch</code></li> </ol>"},{"location":"planning/costmap_generator/#parameters","title":"Parameters","text":"Name Type Description <code>update_rate</code> double timer's update rate <code>activate_by_scenario</code> bool if true, activate by scenario = parking. Otherwise, activate if vehicle is inside parking lot. <code>use_objects</code> bool whether using <code>~input/objects</code> or not <code>use_points</code> bool whether using <code>~input/points_no_ground</code> or not <code>use_wayarea</code> bool whether using <code>wayarea</code> from <code>~input/vector_map</code> or not <code>use_parkinglot</code> bool whether using <code>parkinglot</code> from <code>~input/vector_map</code> or not <code>costmap_frame</code> string created costmap's coordinate <code>vehicle_frame</code> string vehicle's coordinate <code>map_frame</code> string map's coordinate <code>grid_min_value</code> double minimum cost for gridmap <code>grid_max_value</code> double maximum cost for gridmap <code>grid_resolution</code> double resolution for gridmap <code>grid_length_x</code> int size of gridmap for x direction <code>grid_length_y</code> int size of gridmap for y direction <code>grid_position_x</code> int offset from coordinate in x direction <code>grid_position_y</code> int offset from coordinate in y direction <code>maximum_lidar_height_thres</code> double maximum height threshold for pointcloud data <code>minimum_lidar_height_thres</code> double minimum height threshold for pointcloud data <code>expand_rectangle_size</code> double expand object's rectangle with this value <code>size_of_expansion_kernel</code> int kernel size for blurring effect on object's costmap"},{"location":"planning/costmap_generator/#flowchart","title":"Flowchart","text":""},{"location":"planning/external_velocity_limit_selector/","title":"External Velocity Limit Selector","text":""},{"location":"planning/external_velocity_limit_selector/#purpose","title":"Purpose","text":"<p>The <code>external_velocity_limit_selector_node</code> is a node that keeps consistency of external velocity limits. This module subscribes</p> <ol> <li>velocity limit command sent by API,</li> <li>velocity limit command sent by Autoware internal modules.</li> </ol> <p>VelocityLimit.msg contains not only max velocity but also information about the acceleration/jerk constraints on deceleration. The <code>external_velocity_limit_selector_node</code> integrates the lowest velocity limit and the highest jerk constraint to calculate the hardest velocity limit that protects all the deceleration points and max velocities sent by API and Autoware internal modules.</p> <p></p>"},{"location":"planning/external_velocity_limit_selector/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>WIP</p>"},{"location":"planning/external_velocity_limit_selector/#inputs","title":"Inputs","text":"Name Type Description <code>~input/velocity_limit_from_api</code> tier4_planning_msgs::VelocityLimit velocity limit from api <code>~input/velocity_limit_from_internal</code> tier4_planning_msgs::VelocityLimit velocity limit from autoware internal modules <code>~input/velocity_limit_clear_command_from_internal</code> tier4_planning_msgs::VelocityLimitClearCommand velocity limit clear command"},{"location":"planning/external_velocity_limit_selector/#outputs","title":"Outputs","text":"Name Type Description <code>~output/max_velocity</code> tier4_planning_msgs::VelocityLimit current information of the hardest velocity limit"},{"location":"planning/external_velocity_limit_selector/#parameters","title":"Parameters","text":"Parameter Type Description <code>max_velocity</code> double default max velocity [m/s] <code>normal.min_acc</code> double minimum acceleration [m/ss] <code>normal.max_acc</code> double maximum acceleration [m/ss] <code>normal.min_jerk</code> double minimum jerk [m/sss] <code>normal.max_jerk</code> double maximum jerk [m/sss] <code>limit.min_acc</code> double minimum acceleration to be observed [m/ss] <code>limit.max_acc</code> double maximum acceleration to be observed [m/ss] <code>limit.min_jerk</code> double minimum jerk to be observed [m/sss] <code>limit.max_jerk</code> double maximum jerk to be observed [m/sss]"},{"location":"planning/external_velocity_limit_selector/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"planning/external_velocity_limit_selector/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"planning/external_velocity_limit_selector/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"planning/external_velocity_limit_selector/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"planning/external_velocity_limit_selector/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"planning/freespace_planner/","title":"The <code>freespace_planner</code>","text":""},{"location":"planning/freespace_planner/#freespace_planner_node","title":"freespace_planner_node","text":"<p><code>freespace_planner_node</code> is a global path planner node that plans trajectory in the space having static/dynamic obstacles. This node is currently based on Hybrid A* search algorithm in <code>freespace_planning_algorithms</code> package. Other algorithms such as rrt* will be also added and selectable in the future.</p> <p>Note Due to the constraint of trajectory following, the output trajectory will be split to include only the single direction path. In other words, the output trajectory doesn't include both forward and backward trajectories at once.</p>"},{"location":"planning/freespace_planner/#input-topics","title":"Input topics","text":"Name Type Description <code>~input/route</code> autoware_auto_planning_msgs::Route route and goal pose <code>~input/occupancy_grid</code> nav_msgs::OccupancyGrid costmap, for drivable areas <code>~input/odometry</code> nav_msgs::Odometry vehicle velocity, for checking whether vehicle is stopped <code>~input/scenario</code> tier4_planning_msgs::Scenario scenarios to be activated, for node activation"},{"location":"planning/freespace_planner/#output-topics","title":"Output topics","text":"Name Type Description <code>~output/trajectory</code> autoware_auto_planning_msgs::Trajectory trajectory to be followed <code>is_completed</code> bool (implemented as rosparam) whether all split trajectory are published"},{"location":"planning/freespace_planner/#output-tfs","title":"Output TFs","text":"<p>None</p>"},{"location":"planning/freespace_planner/#how-to-launch","title":"How to launch","text":"<ol> <li>Write your remapping info in <code>freespace_planner.launch</code> or add args when executing <code>roslaunch</code></li> <li><code>roslaunch freespace_planner freespace_planner.launch</code></li> </ol>"},{"location":"planning/freespace_planner/#parameters","title":"Parameters","text":""},{"location":"planning/freespace_planner/#node-parameters","title":"Node parameters","text":"Parameter Type Description <code>planning_algorithms</code> string algorithms used in the node <code>vehicle_shape_margin_m</code> float collision margin in planning algorithm <code>update_rate</code> double timer's update rate <code>waypoints_velocity</code> double velocity in output trajectory (currently, only constant velocity is supported) <code>th_arrived_distance_m</code> double threshold distance to check if vehicle has arrived at the trajectory's endpoint <code>th_stopped_time_sec</code> double threshold time to check if vehicle is stopped <code>th_stopped_velocity_mps</code> double threshold velocity to check if vehicle is stopped <code>th_course_out_distance_m</code> double threshold distance to check if vehicle is out of course <code>vehicle_shape_margin_m</code> double vehicle margin <code>replan_when_obstacle_found</code> bool whether replanning when obstacle has found on the trajectory <code>replan_when_course_out</code> bool whether replanning when vehicle is out of course"},{"location":"planning/freespace_planner/#planner-common-parameters","title":"Planner common parameters","text":"Parameter Type Description <code>time_limit</code> double time limit of planning <code>minimum_turning_radius</code> double minimum turning radius of robot <code>maximum_turning_radius</code> double maximum turning radius of robot <code>theta_size</code> double the number of angle's discretization <code>lateral_goal_range</code> double goal range of lateral position <code>longitudinal_goal_range</code> double goal range of longitudinal position <code>angle_goal_range</code> double goal range of angle <code>curve_weight</code> double additional cost factor for curve actions <code>reverse_weight</code> double additional cost factor for reverse actions <code>obstacle_threshold</code> double threshold for regarding a certain grid as obstacle"},{"location":"planning/freespace_planner/#a-search-parameters","title":"A* search parameters","text":"Parameter Type Description <code>only_behind_solutions</code> bool whether restricting the solutions to be behind the goal <code>use_back</code> bool whether using backward trajectory <code>distance_heuristic_weight</code> double heuristic weight for estimating node's cost"},{"location":"planning/freespace_planner/#rrt-search-parameters","title":"RRT* search parameters","text":"Parameter Type Description <code>max planning time</code> double maximum planning time [msec] (used only when <code>enable_update</code> is set <code>true</code>) <code>enable_update</code> bool whether update after feasible solution found until <code>max_planning time</code> elapse <code>use_informed_sampling</code> bool Use informed RRT* (of Gammmell et al.) <code>neighbour_radius</code> double neighbour radius of RRT* algorithm <code>margin</code> double safety margin ensured in path's collision checking in RRT* algorithm"},{"location":"planning/freespace_planner/#flowchart","title":"Flowchart","text":""},{"location":"planning/freespace_planning_algorithms/","title":"freespace planning algorithms","text":""},{"location":"planning/freespace_planning_algorithms/#role","title":"Role","text":"<p>This package is for development of path planning algorithms in free space.</p>"},{"location":"planning/freespace_planning_algorithms/#implemented-algorithms","title":"Implemented algorithms","text":"<ul> <li>Hybrid A* and RRT* (includes RRT and informed RRT*)</li> </ul> <p>Please see rrtstar.md for a note on the implementation for informed-RRT*.</p> <p>NOTE: As for RRT*, one can choose whether update after feasible solution found in RRT*. If not doing so, the algorithm is the almost (but exactly because of rewiring procedure) same as vanilla RRT. If you choose update, then you have option if the sampling after feasible solution found is \"informed\". If set true, then the algorithm is equivalent to <code>informed RRT\\* of Gammmell et al. 2014</code>.</p>"},{"location":"planning/freespace_planning_algorithms/#algorithm-selection","title":"Algorithm selection","text":"<p>There is a trade-off between algorithm speed and resulting solution quality. When we sort the algorithms by the spectrum of (high quality solution/ slow) -&gt; (low quality solution / fast) it would be A* -&gt; informed RRT* -&gt; RRT. Note that in almost all case informed RRT* is better than RRT* for solution quality given the same computational time budget. So, RRT* is omitted in the comparison.</p> <p>Some selection criteria would be:</p> <ul> <li>If obstacle geometry is complex: -&gt; avoid RRT and RRT*. The resulting path could be too messy.</li> <li>If goal location is far from the start: -&gt; avoid A*. Take too long time because it based on grid discretization.</li> </ul>"},{"location":"planning/freespace_planning_algorithms/#guide-to-implement-a-new-algorithm","title":"Guide to implement a new algorithm","text":"<ul> <li>All planning algorithm class in this package must inherit <code>AbstractPlanningAlgorithm</code>   class. If necessary, please overwrite the virtual functions.</li> <li>All algorithms must use <code>nav_msgs::OccupancyGrid</code>-typed costmap.   Thus, <code>AbstractPlanningAlgorithm</code> class mainly implements the collision checking   using the costmap, grid-based indexing, and coordinate transformation related to   costmap.</li> <li>All algorithms must take both <code>PlannerCommonParam</code>-typed and algorithm-specific-   type structs as inputs of the constructor. For example, <code>AstarSearch</code> class's   constructor takes both <code>PlannerCommonParam</code> and <code>AstarParam</code>.</li> </ul>"},{"location":"planning/freespace_planning_algorithms/#running-the-standalone-tests-and-visualization","title":"Running the standalone tests and visualization","text":"<p>Building the package with ros-test and run tests:</p> <pre><code>colcon build --packages-select freespace_planning_algorithms\ncolcon test --packages-select freespace_planning_algorithms\n</code></pre> <p>Inside the test, simulation results are stored in <code>/tmp/fpalgos-{algorithm_type}-case{scenario_number}</code> as a rosbag. Loading these resulting files, by using test/debug_plot.py, one can create plots visualizing the path and obstacles as shown in the figures below. The created figures are then again saved in <code>/tmp</code>.</p>"},{"location":"planning/freespace_planning_algorithms/#a-single-curvature-case","title":"A* (single curvature case)","text":""},{"location":"planning/freespace_planning_algorithms/#informed-rrt-with-200-msec-time-budget","title":"informed RRT* with 200 msec time budget","text":""},{"location":"planning/freespace_planning_algorithms/#rrt-without-update-almost-same-as-rrt","title":"RRT* without update (almost same as RRT)","text":"<p>The black cells, green box, and red box, respectively, indicate obstacles, start configuration, and goal configuration. The sequence of the blue boxes indicate the solution path.</p>"},{"location":"planning/freespace_planning_algorithms/#license-notice","title":"License notice","text":"<p>Files <code>src/reeds_shepp.cpp</code> and <code>include/astar_search/reeds_shepp.h</code> are fetched from pyReedsShepp. Note that the implementation in <code>pyReedsShepp</code> is also heavily based on the code in ompl. Both <code>pyReedsShepp</code> and <code>ompl</code> are distributed under 3-clause BSD license.</p>"},{"location":"planning/freespace_planning_algorithms/rrtstar/","title":"Rrtstar","text":""},{"location":"planning/freespace_planning_algorithms/rrtstar/#note-on-implementation-of-informed-rrt","title":"Note on implementation of informed RRT*","text":""},{"location":"planning/freespace_planning_algorithms/rrtstar/#preliminary-knowledge-on-informed-rrt","title":"Preliminary knowledge on informed-RRT*","text":"<p>Let us define f(x) as minimum cost of the path when path is constrained to pass through xx (so path will be x_{\\mathrm{start}} \\to \\mathrm{x} \\to \\mathrm{x_{\\mathrm{goal}}}x_{\\mathrm{start}} \\to \\mathrm{x} \\to \\mathrm{x_{\\mathrm{goal}}}). Also, let us define c_{\\mathrm{best}}c_{\\mathrm{best}} as the current minimum cost of the feasible paths. Let us define a set $ X(f) = \\left{ x \\in X | f(x) &lt; c*{\\mathrm{best}} \\right} $. If we could sample a new point from X_fX_f instead of XX as in vanilla RRT*, chance that c*{\\mathrm{best}}c*{\\mathrm{best}} is updated is increased, thus the convergence rate is improved.</p> <p>In most case, f(x)f(x) is unknown, thus it is straightforward to approximiate the function ff by a heuristic function \\hat{f}\\hat{f}. A heuristic function is admissible if \\forall x \\in X, \\hat{f}(x) &lt; f(x)\\forall x \\in X, \\hat{f}(x) &lt; f(x), which is sufficient condition of conversion to optimal path. The good heuristic function \\hat{f}\\hat{f} has two properties: 1) it is an admissible tight lower bound of ff and 2) sampling from X(\\hat{f})X(\\hat{f}) is easy.</p> <p>According to Gammell et al [1], a good heursitic function when path is always straight is \\hat{f}(x) = ||x_{\\mathrm{start}} - x|| + ||x - x_{\\mathrm{goal}}||\\hat{f}(x) = ||x_{\\mathrm{start}} - x|| + ||x - x_{\\mathrm{goal}}||. If we don't assume any obstacle information the heursitic is tightest. Also, X(\\hat{f})X(\\hat{f}) is hyper-ellipsoid, and hence sampling from it can be done analitically.</p>"},{"location":"planning/freespace_planning_algorithms/rrtstar/#modification-to-fit-reeds-sheep-path-case","title":"Modification to fit reeds-sheep path case","text":"<p>In the vehicle case, state is x = (x_{1}, x_{2}, \\theta)x = (x_{1}, x_{2}, \\theta). Unlike normal informed-RRT* where we can connect path by a straight line, here we connect the vehicle path by a reeds-sheep path. So, we need some modification of the original algorithm a bit. To this end, one might first consider a heuristic function \\hat{f}_{\\mathrm{RS}}(x) = \\mathrm{RS}(x_{\\mathrm{start}}, x) + \\mathrm{RS}(x, x_{\\mathrm{goal}}) &lt; f(x)\\hat{f}_{\\mathrm{RS}}(x) = \\mathrm{RS}(x_{\\mathrm{start}}, x) + \\mathrm{RS}(x, x_{\\mathrm{goal}}) &lt; f(x) where \\mathrm{RS}\\mathrm{RS} computes reeds-sheep distance. Though it is good in the sense of tightness, however, sampling from X(\\hat{f}_{RS})X(\\hat{f}_{RS}) is really difficult. Therefore, we use \\hat{f}_{euc} = ||\\mathrm{pos}(x_{\\mathrm{start}}) - \\mathrm{pos}(x)|| + ||\\mathrm{pos}(x)- \\mathrm{pos}(x_{\\mathrm{goal}})||\\hat{f}_{euc} = ||\\mathrm{pos}(x_{\\mathrm{start}}) - \\mathrm{pos}(x)|| + ||\\mathrm{pos}(x)- \\mathrm{pos}(x_{\\mathrm{goal}})||, which is admissible because \\forall x \\in X, \\hat{f}_{euc}(x) &lt; \\hat{f}_{\\mathrm{RS}}(x) &lt; f(x)\\forall x \\in X, \\hat{f}_{euc}(x) &lt; \\hat{f}_{\\mathrm{RS}}(x) &lt; f(x). Here, \\mathrm{pos}\\mathrm{pos} function returns position (x_{1}, x_{2})(x_{1}, x_{2}) of the vehicle.</p> <p>Sampling from X(\\hat{f}_{\\mathrm{euc}})X(\\hat{f}_{\\mathrm{euc}}) is easy because X(\\hat{f}_{\\mathrm{euc}}) = \\mathrm{Ellipse} \\times (-\\pi, \\pi]X(\\hat{f}_{\\mathrm{euc}}) = \\mathrm{Ellipse} \\times (-\\pi, \\pi]. Here \\mathrm{Ellipse}\\mathrm{Ellipse}'s focal points are x_{\\mathrm{start}}x_{\\mathrm{start}} and x_{\\mathrm{goal}}x_{\\mathrm{goal}} and conjugate diameters is $\\sqrt{c^{2}{\\mathrm{best}} - ||\\mathrm{pos}(x}) - \\mathrm{pos}(x_{\\mathrm{goal}}))|| } $ (similar to normal informed-rrtstar's ellipsoid). Please notice that \\theta\\theta can be arbitrary because \\hat{f}_{\\mathrm{euc}}\\hat{f}_{\\mathrm{euc}} is independent of \\theta\\theta.</p> <p>[1] Gammell et al., \"Informed RRT*: Optimal sampling-based path planning focused via direct sampling of an admissible ellipsoidal heuristic.\" IROS (2014)</p>"},{"location":"planning/mission_planner/","title":"Mission Planner","text":""},{"location":"planning/mission_planner/#purpose","title":"Purpose","text":"<p><code>Mission Planner</code> calculates a route that navigates from the current ego pose to the goal pose following the given check points. The route is made of a sequence of lanes on a static map. Dynamic objects (e.g. pedestrians and other vehicles) and dynamic map information (e.g. road construction which blocks some lanes) are not considered during route planning. Therefore, the output topic is only published when the goal pose or check points are given and will be latched until the new goal pose or check points are given.</p> <p>The core implementation does not depend on a map format. In current Autoware.universe, only Lanelet2 map format is supported.</p>"},{"location":"planning/mission_planner/#interfaces","title":"Interfaces","text":""},{"location":"planning/mission_planner/#parameters","title":"Parameters","text":"Name Type Description <code>map_frame</code> string The frame name for map <code>arrival_check_angle_deg</code> double Angle threshold for goal check <code>arrival_check_distance</code> double Distance threshold for goal check <code>arrival_check_duration</code> double Duration threshold for goal check <code>goal_angle_threshold</code> double Max goal pose angle for goal approve"},{"location":"planning/mission_planner/#services","title":"Services","text":"Name Type Description <code>/planning/routing/clear_route</code> autoware_adapi_v1_msgs::srv::ClearRoute route clear request <code>/planning/routing/set_route_points</code> autoware_adapi_v1_msgs::srv::SetRoutePoints route request with pose waypoints <code>/planning/routing/set_route</code> autoware_planning_msgs::srv::SetRoute route request with HAD map format"},{"location":"planning/mission_planner/#subscriptions","title":"Subscriptions","text":"Name Type Description <code>input/vector_map</code> autoware_auto_mapping_msgs/HADMapBin vector map of Lanelet2 <code>input/modified_goal</code> geometry_msgs/PoseStamped goal pose for arrival check"},{"location":"planning/mission_planner/#publications","title":"Publications","text":"Name Type Description <code>/planning/routing/route_state</code> autoware_adapi_v1_msgs::msg::RouteState route state <code>/planning/routing/route</code> autoware_planning_msgs/LaneletRoute route <code>debug/route_marker</code> visualization_msgs::msg::MarkerArray route marker for debug <code>debug/goal_footprint</code> visualization_msgs::msg::MarkerArray goal footprint for debug"},{"location":"planning/mission_planner/#route-section","title":"Route section","text":"<p>Route section, whose type is <code>autoware_planning_msgs/LaneletSegment</code>, is a \"slice\" of a road that bundles lane changeable lanes. Note that the most atomic unit of route is <code>autoware_auto_mapping_msgs/LaneletPrimitive</code>, which has the unique id of a lane in a vector map and its type. Therefore, route message does not contain geometric information about the lane since we did not want to have planning module\u2019s message to have dependency on map data structure.</p> <p>The ROS message of route section contains following three elements for each route section.</p> <ul> <li><code>preferred_primitive</code>: Preferred lane to follow towards the goal.</li> <li><code>primitives</code>: All neighbor lanes in the same direction including the preferred lane.</li> </ul>"},{"location":"planning/mission_planner/#goal-validation","title":"Goal Validation","text":"<p>The mission planner has control mechanism to validate the given goal pose and create a route. If goal pose angle between goal pose lanelet and goal pose' yaw is greater than <code>goal_angle_threshold</code> parameter, the goal is rejected. Another control mechanism is the creation of a footprint of the goal pose according to the dimensions of the vehicle and checking whether this footprint is within the lanelets. If goal footprint exceeds lanelets, then the goal is rejected.</p> <p>At the image below, there are sample goal pose validation cases.</p> <p></p>"},{"location":"planning/mission_planner/#implementation","title":"Implementation","text":""},{"location":"planning/mission_planner/#mission-planner_1","title":"Mission Planner","text":"<p>Two callbacks (goal and check points) are a trigger for route planning. Routing graph, which plans route in Lanelet2, must be created before those callbacks, and this routing graph is created in vector map callback.</p> <p><code>plan route</code> is explained in detail in the following section.</p> <p></p>"},{"location":"planning/mission_planner/#route-planner","title":"Route Planner","text":"<p><code>plan route</code> is executed with check points including current ego pose and goal pose.</p> <p></p> <p><code>plan path between each check points</code> firstly calculates closest lanes to start and goal pose. Then routing graph of Lanelet2 plans the shortest path from start and goal pose.</p> <p><code>initialize route lanelets</code> initializes route handler, and calculates <code>route_lanelets</code>. <code>route_lanelets</code>, all of which will be registered in route sections, are lanelets next to the lanelets in the planned path, and used when planning lane change. To calculate <code>route_lanelets</code>,</p> <ol> <li>All the neighbor (right and left) lanes for the planned path which is lane-changeable is memorized as <code>route_lanelets</code>.</li> <li>All the neighbor (right and left) lanes for the planned path which is not lane-changeable is memorized as <code>candidate_lanelets</code>.</li> <li>If the following and previous lanelets of each <code>candidate_lanelets</code> are <code>route_lanelets</code>, the <code>candidate_lanelet</code> is registered as <code>route_lanelets</code><ul> <li>This is because even though <code>candidate_lanelet</code> (an adjacent lane) is not lane-changeable, we can pass the <code>candidate_lanelet</code> without lane change if the following and previous lanelets of the <code>candidate_lanelet</code> are <code>route_lanelets</code></li> </ul> </li> </ol> <p><code>get preferred lanelets</code> extracts <code>preferred_primitive</code> from <code>route_lanelets</code> with the route handler.</p> <p><code>create route sections</code> extracts <code>primitives</code> from <code>route_lanelets</code> for each route section with the route handler, and creates route sections.</p>"},{"location":"planning/mission_planner/#limitations","title":"Limitations","text":"<ul> <li>Dynamic objects (e.g. pedestrians and other vehicles) and dynamic map information (e.g. road construction which blocks some lanes) are not considered during route planning.</li> <li>Looped route is not supported.</li> </ul>"},{"location":"planning/motion_velocity_smoother/","title":"Motion Velocity Smoother","text":""},{"location":"planning/motion_velocity_smoother/#purpose","title":"Purpose","text":"<p><code>motion_velocity_smoother</code> outputs a desired velocity profile on a reference trajectory. This module plans a velocity profile within the limitations of the velocity, the acceleration and the jerk to realize both the maximization of velocity and the ride quality. We call this module <code>motion_velocity_smoother</code> because the limitations of the acceleration and the jerk means the smoothness of the velocity profile.</p>"},{"location":"planning/motion_velocity_smoother/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/motion_velocity_smoother/#flow-chart","title":"Flow chart","text":""},{"location":"planning/motion_velocity_smoother/#extract-trajectory","title":"Extract trajectory","text":"<p>For the point on the reference trajectory closest to the center of the rear wheel axle of the vehicle, it extracts the reference path between <code>extract_behind_dist</code> behind and <code>extract_ahead_dist</code> ahead.</p>"},{"location":"planning/motion_velocity_smoother/#apply-external-velocity-limit","title":"Apply external velocity limit","text":"<p>It applies the velocity limit input from the external of <code>motion_velocity_smoother</code>. Remark that the external velocity limit is different from the velocity limit already set on the map and the reference trajectory. The external velocity is applied at the position that it is able to reach the velocity limit with the deceleration and the jerk constraints set as the parameter.</p>"},{"location":"planning/motion_velocity_smoother/#apply-stop-approaching-velocity","title":"Apply stop approaching velocity","text":"<p>It applies the velocity limit near the stopping point. This function is used to approach near the obstacle or improve the accuracy of stopping.</p>"},{"location":"planning/motion_velocity_smoother/#apply-lateral-acceleration-limit","title":"Apply lateral acceleration limit","text":"<p>It applies the velocity limit to decelerate at the curve. It calculates the velocity limit from the curvature of the reference trajectory and the maximum lateral acceleration <code>max_lateral_accel</code>. The velocity limit is set as not to fall under <code>min_curve_velocity</code>.</p> <p>Note: velocity limit that requests larger than <code>nominal.jerk</code> is not applied. In other words, even if a sharp curve is planned just in front of the ego, no deceleration is performed.</p>"},{"location":"planning/motion_velocity_smoother/#apply-steering-rate-limit","title":"Apply steering rate limit","text":"<p>It calculates the desired steering angles of trajectory points. and it applies the steering rate limit. If the (<code>steering_angle_rate</code> &gt; <code>max_steering_angle_rate</code>), it decreases the velocity of the trajectory point to acceptable velocity.</p>"},{"location":"planning/motion_velocity_smoother/#resample-trajectory","title":"Resample trajectory","text":"<p>It resamples the points on the reference trajectory with designated time interval. Note that the range of the length of the trajectory is set between <code>min_trajectory_length</code> and <code>max_trajectory_length</code>, and the distance between two points is longer than <code>min_trajectory_interval_distance</code>. It samples densely up to the distance traveled between <code>resample_time</code> with the current velocity, then samples sparsely after that. By sampling according to the velocity, both calculation load and accuracy are achieved since it samples finely at low velocity and coarsely at high velocity.</p>"},{"location":"planning/motion_velocity_smoother/#calculate-initial-state","title":"Calculate initial state","text":"<p>Calculate initial values for velocity planning. The initial values are calculated according to the situation as shown in the following table.</p> Situation Initial velocity Initial acceleration First calculation Current velocity 0.0 Engaging <code>engage_velocity</code> <code>engage_acceleration</code> Deviate between the planned velocity and the current velocity Current velocity Previous planned value Normal Previous planned value Previous planned value"},{"location":"planning/motion_velocity_smoother/#smooth-velocity","title":"Smooth velocity","text":"<p>It plans the velocity. The algorithm of velocity planning is chosen from <code>JerkFiltered</code>, <code>L2</code> and <code>Linf</code>, and it is set in the launch file. In these algorithms, they use OSQP[1] as the solver of the optimization.</p>"},{"location":"planning/motion_velocity_smoother/#jerkfiltered","title":"JerkFiltered","text":"<p>It minimizes the sum of the minus of the square of the velocity and the square of the violation of the velocity limit, the acceleration limit and the jerk limit.</p>"},{"location":"planning/motion_velocity_smoother/#l2","title":"L2","text":"<p>It minimizes the sum of the minus of the square of the velocity, the square of the the pseudo-jerk[2] and the square of the violation of the velocity limit and the acceleration limit.</p>"},{"location":"planning/motion_velocity_smoother/#linf","title":"Linf","text":"<p>It minimizes the sum of the minus of the square of the velocity, the maximum absolute value of the the pseudo-jerk[2] and the square of the violation of the velocity limit and the acceleration limit.</p>"},{"location":"planning/motion_velocity_smoother/#post-process","title":"Post process","text":"<p>It performs the post-process of the planned velocity.</p> <ul> <li>Set zero velocity ahead of the stopping point</li> <li>Set maximum velocity given in the config named <code>max_velocity</code></li> <li>Set velocity behind the current pose</li> <li>Resample trajectory (<code>post resampling</code>)</li> <li>Output debug data</li> </ul> <p>After the optimization, a resampling called <code>post resampling</code> is performed before passing the optimized trajectory to the next node. Since the required path interval from optimization may be different from the one for the next module, <code>post resampling</code> helps to fill this gap. Therefore, in <code>post resampling</code>, it is necessary to check the path specification of the following module to determine the parameters. Note that if the computational load of the optimization algorithm is high and the path interval is sparser than the path specification of the following module in the first resampling, <code>post resampling</code> would resample the trajectory densely. On the other hand, if the computational load of the optimization algorithm is small and the path interval is denser than the path specification of the following module in the first resampling, the path is sparsely resampled according to the specification of the following module.</p>"},{"location":"planning/motion_velocity_smoother/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/motion_velocity_smoother/#input","title":"Input","text":"Name Type Description <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Reference trajectory <code>/planning/scenario_planning/max_velocity</code> <code>std_msgs/Float32</code> External velocity limit [m/s] <code>/localization/kinematic_state</code> <code>nav_msgs/Odometry</code> Current odometry <code>/tf</code> <code>tf2_msgs/TFMessage</code> TF <code>/tf_static</code> <code>tf2_msgs/TFMessage</code> TF static"},{"location":"planning/motion_velocity_smoother/#output","title":"Output","text":"Name Type Description <code>~/output/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Modified trajectory <code>/planning/scenario_planning/current_max_velocity</code> <code>std_msgs/Float32</code> Current external velocity limit [m/s] <code>~/closest_velocity</code> <code>std_msgs/Float32</code> Planned velocity closest to ego base_link (for debug) <code>~/closest_acceleration</code> <code>std_msgs/Float32</code> Planned acceleration closest to ego base_link (for debug) <code>~/closest_jerk</code> <code>std_msgs/Float32</code> Planned jerk closest to ego base_link (for debug) <code>~/debug/trajectory_raw</code> <code>autoware_auto_planning_msgs/Trajectory</code> Extracted trajectory (for debug) <code>~/debug/trajectory_external_velocity_limited</code> <code>autoware_auto_planning_msgs/Trajectory</code> External velocity limited trajectory (for debug) <code>~/debug/trajectory_lateral_acc_filtered</code> <code>autoware_auto_planning_msgs/Trajectory</code> Lateral acceleration limit filtered trajectory (for debug) <code>~/debug/trajectory_steering_rate_limited</code> <code>autoware_auto_planning_msgs/Trajectory</code> Steering angle rate limit filtered trajectory (for debug) <code>~/debug/trajectory_time_resampled</code> <code>autoware_auto_planning_msgs/Trajectory</code> Time resampled trajectory (for debug) <code>~/distance_to_stopline</code> <code>std_msgs/Float32</code> Distance to stop line from current ego pose (max 50 m) (for debug) <code>~/stop_speed_exceeded</code> <code>std_msgs/Bool</code> It publishes <code>true</code> if planned velocity on the point which the maximum velocity is zero is over threshold"},{"location":"planning/motion_velocity_smoother/#parameters","title":"Parameters","text":""},{"location":"planning/motion_velocity_smoother/#constraint-parameters","title":"Constraint parameters","text":"Name Type Description Default value <code>max_velocity</code> <code>double</code> Max velocity limit [m/s] 20.0 <code>max_accel</code> <code>double</code> Max acceleration limit [m/ss] 1.0 <code>min_decel</code> <code>double</code> Min deceleration limit [m/ss] -0.5 <code>stop_decel</code> <code>double</code> Stop deceleration value at a stop point [m/ss] 0.0 <code>max_jerk</code> <code>double</code> Max jerk limit [m/sss] 1.0 <code>min_jerk</code> <code>double</code> Min jerk limit [m/sss] -0.5"},{"location":"planning/motion_velocity_smoother/#external-velocity-limit-parameter","title":"External velocity limit parameter","text":"Name Type Description Default value <code>margin_to_insert_external_velocity_limit</code> <code>double</code> margin distance to insert external velocity limit [m] 0.3"},{"location":"planning/motion_velocity_smoother/#curve-parameters","title":"Curve parameters","text":"Name Type Description Default value <code>max_lateral_accel</code> <code>double</code> Max lateral acceleration limit [m/ss] 0.5 <code>min_curve_velocity</code> <code>double</code> Min velocity at lateral acceleration limit [m/ss] 2.74 <code>decel_distance_before_curve</code> <code>double</code> Distance to slowdown before a curve for lateral acceleration limit [m] 3.5 <code>decel_distance_after_curve</code> <code>double</code> Distance to slowdown after a curve for lateral acceleration limit [m] 2.0 <code>min_decel_for_lateral_acc_lim_filter</code> <code>double</code> Deceleration limit to avoid sudden braking by the lateral acceleration filter [m/ss]. Strong limitation degrades the deceleration response to the appearance of sharp curves due to obstacle avoidance, etc. -2.5"},{"location":"planning/motion_velocity_smoother/#engage-replan-parameters","title":"Engage &amp; replan parameters","text":"Name Type Description Default value <code>replan_vel_deviation</code> <code>double</code> Velocity deviation to replan initial velocity [m/s] 5.53 <code>engage_velocity</code> <code>double</code> Engage velocity threshold [m/s] (if the trajectory velocity is higher than this value, use this velocity for engage vehicle speed) 0.25 <code>engage_acceleration</code> <code>double</code> Engage acceleration [m/ss] (use this acceleration when engagement) 0.1 <code>engage_exit_ratio</code> <code>double</code> Exit engage sequence to normal velocity planning when the velocity exceeds engage_exit_ratio x engage_velocity. 0.5 <code>stop_dist_to_prohibit_engage</code> <code>double</code> If the stop point is in this distance, the speed is set to 0 not to move the vehicle [m] 0.5"},{"location":"planning/motion_velocity_smoother/#stopping-velocity-parameters","title":"Stopping velocity parameters","text":"Name Type Description Default value <code>stopping_velocity</code> <code>double</code> change target velocity to this value before v=0 point [m/s] 2.778 <code>stopping_distance</code> <code>double</code> distance for the stopping_velocity [m]. 0 means the stopping velocity is not applied. 0.0"},{"location":"planning/motion_velocity_smoother/#extraction-parameters","title":"Extraction parameters","text":"Name Type Description Default value <code>extract_ahead_dist</code> <code>double</code> Forward trajectory distance used for planning [m] 200.0 <code>extract_behind_dist</code> <code>double</code> backward trajectory distance used for planning [m] 5.0 <code>delta_yaw_threshold</code> <code>double</code> Allowed delta yaw between ego pose and trajectory pose [radian] 1.0472"},{"location":"planning/motion_velocity_smoother/#resampling-parameters","title":"Resampling parameters","text":"Name Type Description Default value <code>max_trajectory_length</code> <code>double</code> Max trajectory length for resampling [m] 200.0 <code>min_trajectory_length</code> <code>double</code> Min trajectory length for resampling [m] 30.0 <code>resample_time</code> <code>double</code> Resample total time [s] 10.0 <code>dense_dt</code> <code>double</code> resample time interval for dense sampling [s] 0.1 <code>dense_min_interval_distance</code> <code>double</code> minimum points-interval length for dense sampling [m] 0.1 <code>sparse_dt</code> <code>double</code> resample time interval for sparse sampling [s] 0.5 <code>sparse_min_interval_distance</code> <code>double</code> minimum points-interval length for sparse sampling [m] 4.0"},{"location":"planning/motion_velocity_smoother/#resampling-parameters-for-post-process","title":"Resampling parameters for post process","text":"Name Type Description Default value <code>post_max_trajectory_length</code> <code>double</code> max trajectory length for resampling [m] 300.0 <code>post_min_trajectory_length</code> <code>double</code> min trajectory length for resampling [m] 30.0 <code>post_resample_time</code> <code>double</code> resample total time for dense sampling [s] 10.0 <code>post_dense_dt</code> <code>double</code> resample time interval for dense sampling [s] 0.1 <code>post_dense_min_interval_distance</code> <code>double</code> minimum points-interval length for dense sampling [m] 0.1 <code>post_sparse_dt</code> <code>double</code> resample time interval for sparse sampling [s] 0.1 <code>post_sparse_min_interval_distance</code> <code>double</code> minimum points-interval length for sparse sampling [m] 1.0"},{"location":"planning/motion_velocity_smoother/#limit-steering-angle-rate-parameters","title":"Limit steering angle rate parameters","text":"Name Type Description Default value <code>max_steering_angle_rate</code> <code>double</code> Maximum steering angle rate [degree/s] 40.0 <code>resample_ds</code> <code>double</code> Distance between trajectory points [m] 0.1 <code>curvature_threshold</code> <code>double</code> If curvature &gt; curvature_threshold, steeringRateLimit is triggered [1/m] 0.02 <code>curvature_calculation_distance</code> <code>double</code> Distance of points while curvature is calculating [m] 1.0"},{"location":"planning/motion_velocity_smoother/#weights-for-optimization","title":"Weights for optimization","text":""},{"location":"planning/motion_velocity_smoother/#jerkfiltered_1","title":"JerkFiltered","text":"Name Type Description Default value <code>jerk_weight</code> <code>double</code> Weight for \"smoothness\" cost for jerk 10.0 <code>over_v_weight</code> <code>double</code> Weight for \"over speed limit\" cost 100000.0 <code>over_a_weight</code> <code>double</code> Weight for \"over accel limit\" cost 5000.0 <code>over_j_weight</code> <code>double</code> Weight for \"over jerk limit\" cost 1000.0"},{"location":"planning/motion_velocity_smoother/#l2_1","title":"L2","text":"Name Type Description Default value <code>pseudo_jerk_weight</code> <code>double</code> Weight for \"smoothness\" cost 100.0 <code>over_v_weight</code> <code>double</code> Weight for \"over speed limit\" cost 100000.0 <code>over_a_weight</code> <code>double</code> Weight for \"over accel limit\" cost 1000.0"},{"location":"planning/motion_velocity_smoother/#linf_1","title":"Linf","text":"Name Type Description Default value <code>pseudo_jerk_weight</code> <code>double</code> Weight for \"smoothness\" cost 100.0 <code>over_v_weight</code> <code>double</code> Weight for \"over speed limit\" cost 100000.0 <code>over_a_weight</code> <code>double</code> Weight for \"over accel limit\" cost 1000.0"},{"location":"planning/motion_velocity_smoother/#others","title":"Others","text":"Name Type Description Default value <code>over_stop_velocity_warn_thr</code> <code>double</code> Threshold to judge that the optimized velocity exceeds the input velocity on the stop point [m/s] 1.389"},{"location":"planning/motion_velocity_smoother/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>Assume that the velocity limit or the stopping point is properly set at the point on the reference trajectory</li> <li>If the velocity limit set in the reference path cannot be achieved by the designated constraints of the deceleration and the jerk, decelerate while suppressing the velocity, the acceleration and the jerk deviation as much as possible</li> <li>The importance of the deviations is set in the config file</li> </ul>"},{"location":"planning/motion_velocity_smoother/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"planning/motion_velocity_smoother/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"planning/motion_velocity_smoother/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>[1] B. Stellato, et al., \"OSQP: an operator splitting solver for quadratic programs\", Mathematical Programming Computation, 2020, 10.1007/s12532-020-00179-2.</p> <p>[2] Y. Zhang, et al., \"Toward a More Complete, Flexible, and Safer Speed Planning for Autonomous Driving via Convex Optimization\", Sensors, vol. 18, no. 7, p. 2185, 2018, 10.3390/s18072185</p>"},{"location":"planning/motion_velocity_smoother/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"planning/motion_velocity_smoother/README.ja/","title":"Motion Velocity Smoother","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#purpose","title":"Purpose","text":"<p><code>motion_velocity_smoother</code>\u306f\u76ee\u6a19\u8ecc\u9053\u4e0a\u306e\u5404\u70b9\u306b\u304a\u3051\u308b\u671b\u307e\u3057\u3044\u8eca\u901f\u3092\u8a08\u753b\u3057\u3066\u51fa\u529b\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308b\u3002 \u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u901f\u5ea6\u306e\u6700\u5927\u5316\u3068\u4e57\u308a\u5fc3\u5730\u306e\u826f\u3055\u3092\u4e21\u7acb\u3059\u308b\u305f\u3081\u306b\u3001\u4e8b\u524d\u306b\u6307\u5b9a\u3055\u308c\u305f\u5236\u9650\u901f\u5ea6\u3001\u5236\u9650\u52a0\u901f\u5ea6\u304a\u3088\u3073\u5236\u9650\u8e8d\u5ea6\u306e\u7bc4\u56f2\u3067\u8eca\u901f\u3092\u8a08\u753b\u3059\u308b\u3002 \u52a0\u901f\u5ea6\u3084\u8e8d\u5ea6\u306e\u5236\u9650\u3092\u4e0e\u3048\u308b\u3053\u3068\u306f\u8eca\u901f\u306e\u5909\u5316\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b\u3053\u3068\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092<code>motion_velocity_smoother</code>\u3068\u547c\u3093\u3067\u3044\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#flow-chart","title":"Flow chart","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#extract-trajectory","title":"Extract trajectory","text":"<p>\u81ea\u8eca\u5f8c\u8f2a\u8ef8\u4e2d\u5fc3\u4f4d\u7f6e\u306b\u6700\u3082\u8fd1\u3044\u53c2\u7167\u7d4c\u8def\u4e0a\u306e\u70b9\u306b\u5bfe\u3057\u3001<code>extract_behind_dist</code>\u3060\u3051\u623b\u3063\u305f\u70b9\u304b\u3089<code>extract_ahead_dist</code>\u3060\u3051\u9032\u3093\u3060\u70b9\u307e\u3067\u306e\u53c2\u7167\u7d4c\u8def\u3092\u629c\u304d\u51fa\u3059\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#apply-external-velocity-limit","title":"Apply external velocity limit","text":"<p>\u30e2\u30b8\u30e5\u30fc\u30eb\u5916\u90e8\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u901f\u5ea6\u5236\u9650\u3092\u9069\u7528\u3059\u308b\u3002 \u3053\u3053\u3067\u6271\u3046\u5916\u90e8\u306e\u901f\u5ea6\u5236\u9650\u306f<code>/planning/scenario_planning/max_velocity</code>\u306e topic \u3067\u6e21\u3055\u308c\u308b\u3082\u306e\u3067\u3001\u5730\u56f3\u4e0a\u3067\u8a2d\u5b9a\u3055\u308c\u305f\u901f\u5ea6\u5236\u9650\u306a\u3069\u3001\u53c2\u7167\u7d4c\u8def\u306b\u3059\u3067\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5236\u9650\u901f\u5ea6\u3068\u306f\u5225\u3067\u3042\u308b\u3002 \u5916\u90e8\u304b\u3089\u6307\u5b9a\u3055\u308c\u308b\u901f\u5ea6\u5236\u9650\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u6e1b\u901f\u5ea6\u304a\u3088\u3073\u8e8d\u5ea6\u306e\u5236\u9650\u306e\u7bc4\u56f2\u3067\u6e1b\u901f\u53ef\u80fd\u306a\u4f4d\u7f6e\u304b\u3089\u901f\u5ea6\u5236\u9650\u3092\u9069\u7528\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#apply-stop-approaching-velocity","title":"Apply stop approaching velocity","text":"<p>\u505c\u6b62\u70b9\u306b\u8fd1\u3065\u3044\u305f\u3068\u304d\u306e\u901f\u5ea6\u3092\u8a2d\u5b9a\u3059\u308b\u3002\u969c\u5bb3\u7269\u8fd1\u508d\u307e\u3067\u8fd1\u3065\u304f\u5834\u5408\u3084\u3001\u6b63\u7740\u7cbe\u5ea6\u5411\u4e0a\u306a\u3069\u306e\u76ee\u7684\u306b\u7528\u3044\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#apply-lateral-acceleration-limit","title":"Apply lateral acceleration limit","text":"<p>\u7d4c\u8def\u306e\u66f2\u7387\u306b\u5fdc\u3058\u3066\u3001\u6307\u5b9a\u3055\u308c\u305f\u6700\u5927\u6a2a\u52a0\u901f\u5ea6<code>max_lateral_accel</code>\u3092\u8d85\u3048\u306a\u3044\u901f\u5ea6\u3092\u5236\u9650\u901f\u5ea6\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u5236\u9650\u901f\u5ea6\u306f<code>min_curve_velocity</code>\u3092\u4e0b\u56de\u3089\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#resample-trajectory","title":"Resample trajectory","text":"<p>\u6307\u5b9a\u3055\u308c\u305f\u6642\u9593\u9593\u9694\u3067\u7d4c\u8def\u306e\u70b9\u3092\u518d\u30b5\u30f3\u30d7\u30eb\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u7d4c\u8def\u5168\u4f53\u306e\u9577\u3055\u306f<code>min_trajectory_length</code>\u304b\u3089<code>max_trajectory_length</code>\u306e\u9593\u3068\u306a\u308b\u3088\u3046\u306b\u518d\u30b5\u30f3\u30d7\u30eb\u3092\u884c\u3044\u3001\u70b9\u306e\u9593\u9694\u306f<code>min_trajectory_interval_distance</code>\u3088\u308a\u5c0f\u3055\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002 \u73fe\u5728\u8eca\u901f\u3067<code>resample_time</code>\u306e\u9593\u9032\u3080\u8ddd\u96e2\u307e\u3067\u306f\u5bc6\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3001\u305d\u308c\u4ee5\u964d\u306f\u758e\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3002 \u3053\u306e\u65b9\u6cd5\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067\u3001\u4f4e\u901f\u6642\u306f\u5bc6\u306b\u3001\u9ad8\u901f\u6642\u306f\u758e\u306b\u30b5\u30f3\u30d7\u30eb\u3055\u308c\u308b\u305f\u3081\u3001\u505c\u6b62\u7cbe\u5ea6\u3068\u8a08\u7b97\u8ca0\u8377\u8efd\u6e1b\u306e\u4e21\u7acb\u3092\u56f3\u3063\u3066\u3044\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#calculate-initial-state","title":"Calculate initial state","text":"<p>\u901f\u5ea6\u8a08\u753b\u306e\u305f\u3081\u306e\u521d\u671f\u5024\u3092\u8a08\u7b97\u3059\u308b\u3002\u521d\u671f\u5024\u306f\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u4e0b\u8868\u306e\u3088\u3046\u306b\u8a08\u7b97\u3059\u308b\u3002</p> \u72b6\u6cc1 \u521d\u671f\u901f\u5ea6 \u521d\u671f\u52a0\u901f\u5ea6 \u6700\u521d\u306e\u8a08\u7b97\u6642 \u73fe\u5728\u8eca\u901f 0.0 \u767a\u9032\u6642 <code>engage_velocity</code> <code>engage_acceleration</code> \u73fe\u5728\u8eca\u901f\u3068\u8a08\u753b\u8eca\u901f\u304c\u4e56\u96e2 \u73fe\u5728\u8eca\u901f \u524d\u56de\u8a08\u753b\u5024 \u901a\u5e38\u6642 \u524d\u56de\u8a08\u753b\u5024 \u524d\u56de\u8a08\u753b\u5024"},{"location":"planning/motion_velocity_smoother/README.ja/#smooth-velocity","title":"Smooth velocity","text":"<p>\u901f\u5ea6\u306e\u8a08\u753b\u3092\u884c\u3046\u3002\u901f\u5ea6\u8a08\u753b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f<code>JerkFiltered</code>, <code>L2</code>, <code>Linf</code>\u306e 3 \u7a2e\u985e\u306e\u3046\u3061\u304b\u3089\u30b3\u30f3\u30d5\u30a3\u30b0\u3067\u6307\u5b9a\u3059\u308b\u3002 \u6700\u9069\u5316\u306e\u30bd\u30eb\u30d0\u306f OSQP[1]\u3092\u5229\u7528\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#jerkfiltered","title":"JerkFiltered","text":"<p>\u901f\u5ea6\u306e 2 \u4e57\uff08\u6700\u5c0f\u5316\u3067\u8868\u3059\u305f\u3081\u8ca0\u5024\u3067\u8868\u73fe\uff09\u3001\u5236\u9650\u901f\u5ea6\u9038\u8131\u91cf\u306e 2 \u4e57\u3001\u5236\u9650\u52a0\u5ea6\u9038\u8131\u91cf\u306e 2 \u4e57\u3001\u5236\u9650\u30b8\u30e3\u30fc\u30af\u9038\u8131\u91cf\u306e 2 \u4e57\u3001\u30b8\u30e3\u30fc\u30af\u306e 2 \u4e57\u306e\u7dcf\u548c\u3092\u6700\u5c0f\u5316\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#l2","title":"L2","text":"<p>\u901f\u5ea6\u306e 2 \u4e57\uff08\u6700\u5c0f\u5316\u3067\u8868\u3059\u305f\u3081\u8ca0\u5024\u3067\u8868\u73fe\uff09\u3001\u5236\u9650\u901f\u5ea6\u9038\u8131\u91cf\u306e 2 \u4e57\u3001\u5236\u9650\u52a0\u5ea6\u9038\u8131\u91cf\u306e 2 \u4e57\u3001\u7591\u4f3c\u30b8\u30e3\u30fc\u30af[2]\u306e 2 \u4e57\u306e\u7dcf\u548c\u3092\u6700\u5c0f\u5316\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#linf","title":"Linf","text":"<p>\u901f\u5ea6\u306e 2 \u4e57\uff08\u6700\u5c0f\u5316\u3067\u8868\u3059\u305f\u3081\u8ca0\u5024\u3067\u8868\u73fe\uff09\u3001\u5236\u9650\u901f\u5ea6\u9038\u8131\u91cf\u306e 2 \u4e57\u3001\u5236\u9650\u52a0\u5ea6\u9038\u8131\u91cf\u306e 2 \u4e57\u306e\u7dcf\u548c\u3068\u7591\u4f3c\u30b8\u30e3\u30fc\u30af[2]\u306e\u7d76\u5bfe\u6700\u5927\u5024\u306e\u548c\u306e\u6700\u5c0f\u5316\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#post-process","title":"Post process","text":"<p>\u8a08\u753b\u3055\u308c\u305f\u8ecc\u9053\u306e\u5f8c\u51e6\u7406\u3092\u884c\u3046\u3002</p> <ul> <li>\u505c\u6b62\u70b9\u3088\u308a\u5148\u306e\u901f\u5ea6\u3092 0 \u306b\u8a2d\u5b9a</li> <li>\u901f\u5ea6\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u4e0e\u3048\u3089\u308c\u308b<code>max_velocity</code>\u4ee5\u4e0b\u3068\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a</li> <li>\u81ea\u8eca\u4f4d\u7f6e\u3088\u308a\u624b\u524d\u306e\u70b9\u306b\u304a\u3051\u308b\u901f\u5ea6\u3092\u8a2d\u5b9a</li> <li>Trajectory \u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u3066\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0(<code>post resampling</code>)</li> <li>\u30c7\u30d0\u30c3\u30b0\u30c7\u30fc\u30bf\u306e\u51fa\u529b</li> </ul> <p>\u6700\u9069\u5316\u306e\u8a08\u7b97\u304c\u7d42\u308f\u3063\u305f\u3042\u3068\u3001\u6b21\u306e\u30ce\u30fc\u30c9\u306b\u7d4c\u8def\u3092\u6e21\u3059\u524d\u306b<code>post resampling</code>\u3068\u547c\u3070\u308c\u308b\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u884c\u3046\u3002\u3053\u3053\u3067\u518d\u5ea6\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u308b\u7406\u7531\u3068\u3057\u3066\u306f\u3001\u6700\u9069\u5316\u524d\u3067\u5fc5\u8981\u306a\u7d4c\u8def\u9593\u9694\u3068\u5f8c\u6bb5\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u6e21\u3059\u7d4c\u8def\u9593\u9694\u304c\u5fc5\u305a\u3057\u3082\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3042\u308a\u3001\u305d\u306e\u5dee\u3092\u57cb\u3081\u308b\u305f\u3081\u306b\u518d\u5ea6\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u308b\u3002\u305d\u306e\u305f\u3081\u3001<code>post resampling</code>\u3067\u306f\u5f8c\u6bb5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7d4c\u8def\u4ed5\u69d8\u3092\u78ba\u8a8d\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c7a\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u306a\u304a\u3001\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a08\u7b97\u8ca0\u8377\u304c\u9ad8\u304f\u3001\u6700\u521d\u306e\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3067\u7d4c\u8def\u9593\u9694\u304c\u5f8c\u6bb5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7d4c\u8def\u4ed5\u69d8\u3088\u308a\u758e\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3001<code>post resampling</code>\u3067\u7d4c\u8def\u3092\u871c\u306b\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3002\u9006\u306b\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a08\u7b97\u8ca0\u8377\u304c\u5c0f\u3055\u304f\u3001\u6700\u521d\u306e\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3067\u7d4c\u8def\u9593\u9694\u304c\u5f8c\u6bb5\u306e\u7d4c\u8def\u4ed5\u69d8\u3088\u308a\u871c\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001<code>post resampling</code>\u3067\u7d4c\u8def\u3092\u305d\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u3066\u758e\u306b\u30ea\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3002</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#input","title":"Input","text":"Name Type Description <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Reference trajectory <code>/planning/scenario_planning/max_velocity</code> <code>std_msgs/Float32</code> External velocity limit [m/s] <code>/localization/kinematic_state</code> <code>nav_msgs/Odometry</code> Current odometry <code>/tf</code> <code>tf2_msgs/TFMessage</code> TF <code>/tf_static</code> <code>tf2_msgs/TFMessage</code> TF static"},{"location":"planning/motion_velocity_smoother/README.ja/#output","title":"Output","text":"Name Type Description <code>~/output/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Modified trajectory <code>/planning/scenario_planning/current_max_velocity</code> <code>std_msgs/Float32</code> Current external velocity limit [m/s] <code>~/closest_velocity</code> <code>std_msgs/Float32</code> Planned velocity closest to ego base_link (for debug) <code>~/closest_acceleration</code> <code>std_msgs/Float32</code> Planned acceleration closest to ego base_link (for debug) <code>~/closest_jerk</code> <code>std_msgs/Float32</code> Planned jerk closest to ego base_link (for debug) <code>~/debug/trajectory_raw</code> <code>autoware_auto_planning_msgs/Trajectory</code> Extracted trajectory (for debug) <code>~/debug/trajectory_external_velocity_limited</code> <code>autoware_auto_planning_msgs/Trajectory</code> External velocity limited trajectory (for debug) <code>~/debug/trajectory_lateral_acc_filtered</code> <code>autoware_auto_planning_msgs/Trajectory</code> Lateral acceleration limit filtered trajectory (for debug) <code>~/debug/trajectory_time_resampled</code> <code>autoware_auto_planning_msgs/Trajectory</code> Time resampled trajectory (for debug) <code>~/distance_to_stopline</code> <code>std_msgs/Float32</code> Distance to stop line from current ego pose (max 50 m) (for debug) <code>~/stop_speed_exceeded</code> <code>std_msgs/Bool</code> It publishes <code>true</code> if planned velocity on the point which the maximum velocity is zero is over threshold"},{"location":"planning/motion_velocity_smoother/README.ja/#parameters","title":"Parameters","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#constraint-parameters","title":"Constraint parameters","text":"Name Type Description Default value <code>max_velocity</code> <code>double</code> Max velocity limit [m/s] 20.0 <code>max_accel</code> <code>double</code> Max acceleration limit [m/ss] 1.0 <code>min_decel</code> <code>double</code> Min deceleration limit [m/ss] -0.5 <code>stop_decel</code> <code>double</code> Stop deceleration value at a stop point [m/ss] 0.0 <code>max_jerk</code> <code>double</code> Max jerk limit [m/sss] 1.0 <code>min_jerk</code> <code>double</code> Min jerk limit [m/sss] -0.5"},{"location":"planning/motion_velocity_smoother/README.ja/#external-velocity-limit-parameter","title":"External velocity limit parameter","text":"Name Type Description Default value <code>margin_to_insert_external_velocity_limit</code> <code>double</code> margin distance to insert external velocity limit [m] 0.3"},{"location":"planning/motion_velocity_smoother/README.ja/#curve-parameters","title":"Curve parameters","text":"Name Type Description Default value <code>max_lateral_accel</code> <code>double</code> Max lateral acceleration limit [m/ss] 0.5 <code>min_curve_velocity</code> <code>double</code> Min velocity at lateral acceleration limit [m/ss] 2.74 <code>decel_distance_before_curve</code> <code>double</code> Distance to slowdown before a curve for lateral acceleration limit [m] 3.5 <code>decel_distance_after_curve</code> <code>double</code> Distance to slowdown after a curve for lateral acceleration limit [m] 2.0"},{"location":"planning/motion_velocity_smoother/README.ja/#engage-replan-parameters","title":"Engage &amp; replan parameters","text":"Name Type Description Default value <code>replan_vel_deviation</code> <code>double</code> Velocity deviation to replan initial velocity [m/s] 5.53 <code>engage_velocity</code> <code>double</code> Engage velocity threshold [m/s] (if the trajectory velocity is higher than this value, use this velocity for engage vehicle speed) 0.25 <code>engage_acceleration</code> <code>double</code> Engage acceleration [m/ss] (use this acceleration when engagement) 0.1 <code>engage_exit_ratio</code> <code>double</code> Exit engage sequence to normal velocity planning when the velocity exceeds engage_exit_ratio x engage_velocity. 0.5 <code>stop_dist_to_prohibit_engage</code> <code>double</code> If the stop point is in this distance, the speed is set to 0 not to move the vehicle [m] 0.5"},{"location":"planning/motion_velocity_smoother/README.ja/#stopping-velocity-parameters","title":"Stopping velocity parameters","text":"Name Type Description Default value <code>stopping_velocity</code> <code>double</code> change target velocity to this value before v=0 point [m/s] 2.778 <code>stopping_distance</code> <code>double</code> distance for the stopping_velocity [m]. 0 means the stopping velocity is not applied. 0.0"},{"location":"planning/motion_velocity_smoother/README.ja/#extraction-parameters","title":"Extraction parameters","text":"Name Type Description Default value <code>extract_ahead_dist</code> <code>double</code> Forward trajectory distance used for planning [m] 200.0 <code>extract_behind_dist</code> <code>double</code> backward trajectory distance used for planning [m] 5.0 <code>delta_yaw_threshold</code> <code>double</code> Allowed delta yaw between ego pose and trajectory pose [radian] 1.0472"},{"location":"planning/motion_velocity_smoother/README.ja/#resampling-parameters","title":"Resampling parameters","text":"Name Type Description Default value <code>max_trajectory_length</code> <code>double</code> Max trajectory length for resampling [m] 200.0 <code>min_trajectory_length</code> <code>double</code> Min trajectory length for resampling [m] 30.0 <code>resample_time</code> <code>double</code> Resample total time [s] 10.0 <code>dense_resample_dt</code> <code>double</code> resample time interval for dense sampling [s] 0.1 <code>dense_min_interval_distance</code> <code>double</code> minimum points-interval length for dense sampling [m] 0.1 <code>sparse_resample_dt</code> <code>double</code> resample time interval for sparse sampling [s] 0.5 <code>sparse_min_interval_distance</code> <code>double</code> minimum points-interval length for sparse sampling [m] 4.0"},{"location":"planning/motion_velocity_smoother/README.ja/#resampling-parameters-for-post-process","title":"Resampling parameters for post process","text":"Name Type Description Default value <code>post_max_trajectory_length</code> <code>double</code> max trajectory length for resampling [m] 300.0 <code>post_min_trajectory_length</code> <code>double</code> min trajectory length for resampling [m] 30.0 <code>post_resample_time</code> <code>double</code> resample total time for dense sampling [s] 10.0 <code>post_dense_resample_dt</code> <code>double</code> resample time interval for dense sampling [s] 0.1 <code>post_dense_min_interval_distance</code> <code>double</code> minimum points-interval length for dense sampling [m] 0.1 <code>post_sparse_resample_dt</code> <code>double</code> resample time interval for sparse sampling [s] 0.1 <code>post_sparse_min_interval_distance</code> <code>double</code> minimum points-interval length for sparse sampling [m] 1.0"},{"location":"planning/motion_velocity_smoother/README.ja/#weights-for-optimization","title":"Weights for optimization","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#jerkfiltered_1","title":"JerkFiltered","text":"Name Type Description Default value <code>jerk_weight</code> <code>double</code> Weight for \"smoothness\" cost for jerk 10.0 <code>over_v_weight</code> <code>double</code> Weight for \"over speed limit\" cost 100000.0 <code>over_a_weight</code> <code>double</code> Weight for \"over accel limit\" cost 5000.0 <code>over_j_weight</code> <code>double</code> Weight for \"over jerk limit\" cost 1000.0"},{"location":"planning/motion_velocity_smoother/README.ja/#l2_1","title":"L2","text":"Name Type Description Default value <code>pseudo_jerk_weight</code> <code>double</code> Weight for \"smoothness\" cost 100.0 <code>over_v_weight</code> <code>double</code> Weight for \"over speed limit\" cost 100000.0 <code>over_a_weight</code> <code>double</code> Weight for \"over accel limit\" cost 1000.0"},{"location":"planning/motion_velocity_smoother/README.ja/#linf_1","title":"Linf","text":"Name Type Description Default value <code>pseudo_jerk_weight</code> <code>double</code> Weight for \"smoothness\" cost 100.0 <code>over_v_weight</code> <code>double</code> Weight for \"over speed limit\" cost 100000.0 <code>over_a_weight</code> <code>double</code> Weight for \"over accel limit\" cost 1000.0"},{"location":"planning/motion_velocity_smoother/README.ja/#others","title":"Others","text":"Name Type Description Default value <code>over_stop_velocity_warn_thr</code> <code>double</code> Threshold to judge that the optimized velocity exceeds the input velocity on the stop point [m/s] 1.389"},{"location":"planning/motion_velocity_smoother/README.ja/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>\u53c2\u7167\u7d4c\u8def\u4e0a\u306e\u70b9\u306b\u306f\u5236\u9650\u901f\u5ea6\uff08\u505c\u6b62\u70b9\uff09\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u4eee\u5b9a</li> <li>\u53c2\u7167\u7d4c\u8def\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5236\u9650\u901f\u5ea6\u3092\u6307\u5b9a\u3057\u305f\u6e1b\u901f\u5ea6\u3084\u30b8\u30e3\u30fc\u30af\u3067\u9054\u6210\u4e0d\u53ef\u80fd\u306a\u5834\u5408\u3001\u53ef\u80fd\u306a\u7bc4\u56f2\u3067\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u3001\u30b8\u30e3\u30fc\u30af\u306e\u9038\u8131\u91cf\u3092\u6291\u3048\u306a\u304c\u3089\u6e1b\u901f</li> <li>\u5404\u9038\u8131\u91cf\u306e\u91cd\u8996\u306e\u5ea6\u5408\u3044\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308a\u6307\u5b9a</li> </ul>"},{"location":"planning/motion_velocity_smoother/README.ja/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"planning/motion_velocity_smoother/README.ja/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>[1] B. Stellato, et al., \"OSQP: an operator splitting solver for quadratic programs\", Mathematical Programming Computation, 2020, 10.1007/s12532-020-00179-2.</p> <p>[2] Y. Zhang, et al., \"Toward a More Complete, Flexible, and Safer Speed Planning for Autonomous Driving via Convex Optimization\", Sensors, vol. 18, no. 7, p. 2185, 2018, 10.3390/s18072185</p>"},{"location":"planning/motion_velocity_smoother/README.ja/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"planning/obstacle_avoidance_planner/","title":"Index","text":""},{"location":"planning/obstacle_avoidance_planner/#purpose","title":"Purpose","text":"<p>This package generates a trajectory that is feasible to drive and collision free based on a reference path, drivable area, and static/dynamic obstacles. Only position and orientation of trajectory are calculated in this module (velocity is just aligned from the one in the path), and velocity or acceleration will be updated in the latter modules.</p>"},{"location":"planning/obstacle_avoidance_planner/#feature","title":"Feature","text":"<p>This package is able to</p> <ul> <li>follow the behavior path smoothly</li> <li>make the trajectory inside the drivable area as much as possible</li> <li>insert stop point if its trajectory point is outside the drivable area</li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/obstacle_avoidance_planner/#input","title":"input","text":"Name Type Description <code>~/input/path</code> autoware_auto_planning_msgs/Path Reference path and the corresponding drivable area <code>~/input/objects</code> autoware_auto_perception_msgs/PredictedObjects Recognized objects around the vehicle <code>/localization/kinematic_kinematics</code> nav_msgs/Odometry Current Velocity of ego vehicle <code>/planning/scenario_planning/lane_driving/obstacle_avoidance_approval</code> tier4_planning_msgs/EnableAvoidance Approval to execute obstacle avoidance"},{"location":"planning/obstacle_avoidance_planner/#output","title":"output","text":"Name Type Description <code>~/output/trajectory</code> autoware_auto_planning_msgs/Trajectory Optimized trajectory that is feasible to drive and collision-free"},{"location":"planning/obstacle_avoidance_planner/#flowchart","title":"Flowchart","text":"<p>Flowchart of functions is explained here.</p> <p></p>"},{"location":"planning/obstacle_avoidance_planner/#checkreplan","title":"checkReplan","text":"<p>When one of the following conditions are realized, callback function to generate a trajectory is called and publish the trajectory. Otherwise, previously generated (optimized) trajectory is published just with aligning the velocity from the latest behavior path.</p> <ul> <li>Ego moves a certain distance compared to the previous ego pose (default: 3.0 [m])</li> <li>Time passes (default: 1.0 [s])</li> <li>Ego is far from the previously generated trajectory</li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#getroadclearancemap","title":"getRoadClearanceMap","text":"<p>Cost map is generated according to the distance to the road boundaries.</p> <p>These cost maps are used in the optimization to generate a collision-free trajectory.</p>"},{"location":"planning/obstacle_avoidance_planner/#drawobstacleonimage","title":"drawObstacleOnImage","text":"<p>Only obstacles that are static and locate in a shoulder lane is decided to avoid. In detail, this equals to the following three conditions at the same time, and the red obstacles in the figure (id: 3, 4, 5) is to be avoided.</p> <ul> <li>Velocity is under a certain value (default: 0.1 [m/s])</li> <li>CoG of the obstacles is not on the center line<ul> <li>so that the ego will not avoid the car in front of the ego in the same lane.</li> </ul> </li> <li>At least one point of the obstacle polygon is outside the drivable area.</li> </ul> <p></p>"},{"location":"planning/obstacle_avoidance_planner/#getobstacleclearancemap","title":"getObstacleClearanceMap","text":"<p>Cost map is generated according to the distance to the target obstacles to be avoided.</p>"},{"location":"planning/obstacle_avoidance_planner/#getebtrajectory","title":"getEBTrajectory","text":"<p>The latter optimization (MPT) assumes that the reference path is smooth enough. Therefore the path from behavior is made smooth here, and send to the optimization as a format of trajectory. Obstacles are ignored in this function.</p> <p>More details can be seen in the Elastic Band section.</p>"},{"location":"planning/obstacle_avoidance_planner/#getmodelpredictivetrajectory","title":"getModelPredictiveTrajectory","text":"<p>This module makes the trajectory kinematically-feasible and collision-free. We define vehicle pose in the frenet coordinate, and minimize tracking errors by optimization. This optimization considers vehicle kinematics and collision checking with road boundary and obstacles. To decrease the computation cost, the optimization is applied to the shorter trajectory (default: 50 [m]) than the whole trajectory, and concatenate the remained trajectory with the optimized one at last.</p> <p>The trajectory just in front of the ego must not be changed a lot so that the steering wheel will be stable. Therefore, we use the previously generated trajectory in front of the ego.</p> <p>Optimization center on the vehicle, that tries to locate just on the trajectory, can be tuned along side the vehicle vertical axis. This parameter <code>mpt.kinematics.optimization center offset</code> is defined as the signed length from the back-wheel center to the optimization center. Some examples are shown in the following figure, and it is shown that the trajectory of vehicle shape differs according to the optimization center even if the reference trajectory (green one) is the same.</p> <p></p> <p>More details can be seen in the Model Predictive Trajectory section.</p>"},{"location":"planning/obstacle_avoidance_planner/#insertzerovelocityoutsidedrivablearea","title":"insertZeroVelocityOutsideDrivableArea","text":"<p>Optimized trajectory is too short for velocity planning, therefore extend the trajectory by concatenating the optimized trajectory and the behavior path considering drivability. Generated trajectory is checked if it is inside the drivable area or not, and if outside drivable area, output a trajectory inside drivable area with the behavior path or the previously generated trajectory.</p> <p>As described above, the behavior path is separated into two paths: one is for optimization and the other is the remain. The first path becomes optimized trajectory, and the second path just is transformed to a trajectory. Then a trajectory inside the drivable area is calculated as follows.</p> <ul> <li>If optimized trajectory is inside the drivable area, and the remained trajectory is inside/outside the drivable area,<ul> <li>the output trajectory will be just concatenation of those two trajectories.</li> <li>In this case, we do not care if the remained trajectory is inside or outside the drivable area since generally it is outside the drivable area (especially in a narrow road), but we want to pass a trajectory as long as possible to the latter module.</li> </ul> </li> <li>If optimized trajectory is outside the drivable area, and the remained trajectory is inside/outside the drivable area,<ul> <li>and if the previously generated trajectory is memorized,<ul> <li>the output trajectory will be the previously generated trajectory, where zero velocity is inserted to the point firstly going outside the drivable area.</li> </ul> </li> <li>and if the previously generated trajectory is not memorized,<ul> <li>the output trajectory will be a part of trajectory just transformed from the behavior path, where zero velocity is inserted to the point firstly going outside the drivable area.</li> </ul> </li> </ul> </li> </ul> <p>Optimization failure is dealt with the same as if the optimized trajectory is outside the drivable area. The output trajectory is memorized as a previously generated trajectory for the next cycle.</p> <p>Rationale In the current design, since there are some modelling errors, the constraints are considered to be soft constraints. Therefore, we have to make sure that the optimized trajectory is inside the drivable area or not after optimization.</p>"},{"location":"planning/obstacle_avoidance_planner/#alignvelocity","title":"alignVelocity","text":"<p>Velocity is assigned in the result trajectory from the velocity in the behavior path. The shapes of the trajectory and the path are different, therefore the each nearest trajectory point to the path is searched and interpolated linearly.</p>"},{"location":"planning/obstacle_avoidance_planner/#algorithms","title":"Algorithms","text":"<p>In this section, Elastic band (to make the path smooth) and Model Predictive Trajectory (to make the trajectory kinematically feasible and collision-free) will be explained in detail.</p>"},{"location":"planning/obstacle_avoidance_planner/#elastic-band","title":"Elastic band","text":""},{"location":"planning/obstacle_avoidance_planner/#abstract","title":"Abstract","text":"<p>Elastic band smooths the path generated in the behavior. Since the latter process of optimization uses the curvature and normal vector of the reference path, smoothing should be applied here so that the optimization will be stable.</p> <p>This smoothing process does not consider collision. Therefore the output path may have a collision with road boundaries or obstacles.</p>"},{"location":"planning/obstacle_avoidance_planner/#formulation","title":"Formulation","text":"<p>We formulate a QP problem minimizing the distance between the previous point and the next point for each point. Conditions that each point can move to a certain extent are used so that the path will not changed a lot but will be smoother.</p> <p>For k'th point (\\boldsymbol{p}_k = (x_k, y_k)\\boldsymbol{p}_k = (x_k, y_k)), the objective function is as follows. The beginning and end point are fixed during the optimization.</p>  \\begin{align} \\ J &amp; = \\min \\sum_{k=1}^{n-1} ||(\\boldsymbol{p}_{k+1} - \\boldsymbol{p}_{k}) - (\\boldsymbol{p}_{k} - \\boldsymbol{p}_{k-1})||^2 \\\\ \\ &amp; = \\min \\sum_{k=1}^{n-1} ||\\boldsymbol{p}_{k+1} - 2 \\boldsymbol{p}_{k} + \\boldsymbol{p}_{k-1}||^2 \\\\ \\ &amp; = \\min \\sum_{k=1}^{n-1} \\{(x_{k+1} - x_k + x_{k-1})^2 + (y_{k+1} - y_k + y_{k-1})^2\\} \\\\ \\ &amp; = \\min     \\begin{pmatrix}         \\ x_0 \\\\         \\ x_1 \\\\         \\ x_2 \\\\         \\vdots \\\\         \\ x_{n-2}\\\\         \\ x_{n-1} \\\\         \\ x_{n} \\\\         \\ y_0 \\\\         \\ y_1 \\\\         \\ y_2 \\\\         \\vdots \\\\         \\ y_{n-2}\\\\         \\ y_{n-1} \\\\         \\ y_{n} \\\\     \\end{pmatrix}^T     \\begin{pmatrix}       1 &amp; -2 &amp; 1 &amp; 0 &amp; \\dots&amp; \\\\       -2 &amp; 5 &amp; -4 &amp; 1 &amp; 0 &amp;\\dots   \\\\       1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 &amp; \\\\       0 &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp;   \\\\       \\vdots &amp; 0 &amp; \\ddots&amp;\\ddots&amp; \\ddots   \\\\       &amp; \\vdots &amp; &amp; &amp; \\\\       &amp; &amp; &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 \\\\       &amp; &amp; &amp; &amp; 1 &amp; -4 &amp; 5 &amp; -2 \\\\       &amp; &amp; &amp; &amp; &amp; 1 &amp; -2 &amp;  1&amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;1 &amp; -2 &amp; 1 &amp; 0 &amp; \\dots&amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;-2 &amp; 5 &amp; -4 &amp; 1 &amp; 0 &amp;\\dots   \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 &amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;0 &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp;   \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;\\vdots &amp; 0 &amp; \\ddots&amp;\\ddots&amp; \\ddots   \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\vdots &amp; &amp; &amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 1 &amp; -4 &amp; 5 &amp; -2 \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 1 &amp; -2 &amp;  1&amp; \\\\     \\end{pmatrix}     \\begin{pmatrix}         \\ x_0 \\\\         \\ x_1 \\\\         \\ x_2 \\\\         \\vdots \\\\         \\ x_{n-2}\\\\         \\ x_{n-1} \\\\         \\ x_{n} \\\\         \\ y_0 \\\\         \\ y_1 \\\\         \\ y_2 \\\\         \\vdots \\\\         \\ y_{n-2}\\\\         \\ y_{n-1} \\\\         \\ y_{n} \\\\     \\end{pmatrix} \\end{align}   \\begin{align} \\ J &amp; = \\min \\sum_{k=1}^{n-1} ||(\\boldsymbol{p}_{k+1} - \\boldsymbol{p}_{k}) - (\\boldsymbol{p}_{k} - \\boldsymbol{p}_{k-1})||^2 \\\\ \\ &amp; = \\min \\sum_{k=1}^{n-1} ||\\boldsymbol{p}_{k+1} - 2 \\boldsymbol{p}_{k} + \\boldsymbol{p}_{k-1}||^2 \\\\ \\ &amp; = \\min \\sum_{k=1}^{n-1} \\{(x_{k+1} - x_k + x_{k-1})^2 + (y_{k+1} - y_k + y_{k-1})^2\\} \\\\ \\ &amp; = \\min     \\begin{pmatrix}         \\ x_0 \\\\         \\ x_1 \\\\         \\ x_2 \\\\         \\vdots \\\\         \\ x_{n-2}\\\\         \\ x_{n-1} \\\\         \\ x_{n} \\\\         \\ y_0 \\\\         \\ y_1 \\\\         \\ y_2 \\\\         \\vdots \\\\         \\ y_{n-2}\\\\         \\ y_{n-1} \\\\         \\ y_{n} \\\\     \\end{pmatrix}^T     \\begin{pmatrix}       1 &amp; -2 &amp; 1 &amp; 0 &amp; \\dots&amp; \\\\       -2 &amp; 5 &amp; -4 &amp; 1 &amp; 0 &amp;\\dots   \\\\       1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 &amp; \\\\       0 &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp;   \\\\       \\vdots &amp; 0 &amp; \\ddots&amp;\\ddots&amp; \\ddots   \\\\       &amp; \\vdots &amp; &amp; &amp; \\\\       &amp; &amp; &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 \\\\       &amp; &amp; &amp; &amp; 1 &amp; -4 &amp; 5 &amp; -2 \\\\       &amp; &amp; &amp; &amp; &amp; 1 &amp; -2 &amp;  1&amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;1 &amp; -2 &amp; 1 &amp; 0 &amp; \\dots&amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;-2 &amp; 5 &amp; -4 &amp; 1 &amp; 0 &amp;\\dots   \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 &amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;0 &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp;   \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp;\\vdots &amp; 0 &amp; \\ddots&amp;\\ddots&amp; \\ddots   \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\vdots &amp; &amp; &amp; \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 1 &amp; -4 &amp; 6 &amp; -4 &amp; 1 \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 1 &amp; -4 &amp; 5 &amp; -2 \\\\       &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 1 &amp; -2 &amp;  1&amp; \\\\     \\end{pmatrix}     \\begin{pmatrix}         \\ x_0 \\\\         \\ x_1 \\\\         \\ x_2 \\\\         \\vdots \\\\         \\ x_{n-2}\\\\         \\ x_{n-1} \\\\         \\ x_{n} \\\\         \\ y_0 \\\\         \\ y_1 \\\\         \\ y_2 \\\\         \\vdots \\\\         \\ y_{n-2}\\\\         \\ y_{n-1} \\\\         \\ y_{n} \\\\     \\end{pmatrix} \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#model-predictive-trajectory","title":"Model predictive trajectory","text":""},{"location":"planning/obstacle_avoidance_planner/#abstract_1","title":"Abstract","text":"<p>Model Predictive Trajectory (MPT) calculates the trajectory that realizes the following conditions.</p> <ul> <li>Kinematically feasible for linear vehicle kinematics model</li> <li>Collision free with obstacles and road boundaries</li> </ul> <p>Conditions for collision free is considered to be not hard constraints but soft constraints. When the optimization failed or the optimized trajectory is not collision free, the output trajectory will be previously generated trajectory.</p> <p>Trajectory near the ego must be stable, therefore the condition where trajectory points near the ego are the same as previously generated trajectory is considered, and this is the only hard constraints in MPT.</p>"},{"location":"planning/obstacle_avoidance_planner/#vehicle-kinematics","title":"Vehicle kinematics","text":"<p>As the following figure, we consider the bicycle kinematics model in the frenet frame to track the reference path. At time step kk, we define lateral distance to the reference path, heading angle against the reference path, and steer angle as y_ky_k, \\theta_k\\theta_k, and \\delta_k\\delta_k respectively.</p> <p></p> <p>Assuming that the commanded steer angle is \\delta_{des, k}\\delta_{des, k}, the kinematics model in the frenet frame is formulated as follows. We also assume that the steer angle \\delta_k\\delta_k is first-order lag to the commanded one.</p>  \\begin{align} y_{k+1} &amp; = y_{k} + v \\sin \\theta_k dt \\\\ \\theta_{k+1} &amp; = \\theta_k + \\frac{v \\tan \\delta_k}{L}dt - \\kappa_k v \\cos \\theta_k dt \\\\ \\delta_{k+1} &amp; = \\delta_k - \\frac{\\delta_k - \\delta_{des,k}}{\\tau}dt \\end{align}   \\begin{align} y_{k+1} &amp; = y_{k} + v \\sin \\theta_k dt \\\\ \\theta_{k+1} &amp; = \\theta_k + \\frac{v \\tan \\delta_k}{L}dt - \\kappa_k v \\cos \\theta_k dt \\\\ \\delta_{k+1} &amp; = \\delta_k - \\frac{\\delta_k - \\delta_{des,k}}{\\tau}dt \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#linearization","title":"Linearization","text":"<p>Then we linearize these equations. y_ky_k and \\theta_k\\theta_k are tracking errors, so we assume that those are small enough. Therefore \\sin \\theta_k \\approx \\theta_k\\sin \\theta_k \\approx \\theta_k.</p> <p>Since \\delta_k\\delta_k is a steer angle, it is not always small. By using a reference steer angle \\delta_{\\mathrm{ref}, k}\\delta_{\\mathrm{ref}, k} calculated by the reference path curvature \\kappa_k\\kappa_k, we express \\delta_k\\delta_k with a small value \\Delta \\delta_k\\Delta \\delta_k.</p> <p>Note that the steer angle \\delta_k\\delta_k is within the steer angle limitation \\delta_{\\max}\\delta_{\\max}. When the reference steer angle \\delta_{\\mathrm{ref}, k}\\delta_{\\mathrm{ref}, k} is larger than the steer angle limitation \\delta_{\\max}\\delta_{\\max}, and \\delta_{\\mathrm{ref}, k}\\delta_{\\mathrm{ref}, k} is used to linearize the steer angle, \\Delta \\delta_k\\Delta \\delta_k is \\Delta \\delta_k = \\delta - \\delta_{\\mathrm{ref}, k} = \\delta_{\\max} - \\delta_{\\mathrm{ref}, k}\\Delta \\delta_k = \\delta - \\delta_{\\mathrm{ref}, k} = \\delta_{\\max} - \\delta_{\\mathrm{ref}, k}, and the absolute \\Delta \\delta_k\\Delta \\delta_k gets larger. Therefore, we have to apply the steer angle limitation to \\delta_{\\mathrm{ref}, k}\\delta_{\\mathrm{ref}, k} as well.</p>  \\begin{align} \\delta_{\\mathrm{ref}, k} &amp; = \\mathrm{clamp}(\\arctan(L \\kappa_k), -\\delta_{\\max}, \\delta_{\\max}) \\\\ \\delta_k &amp; = \\delta_{\\mathrm{ref}, k} + \\Delta \\delta_k, \\ \\Delta \\delta_k \\ll 1 \\\\ \\end{align}   \\begin{align} \\delta_{\\mathrm{ref}, k} &amp; = \\mathrm{clamp}(\\arctan(L \\kappa_k), -\\delta_{\\max}, \\delta_{\\max}) \\\\ \\delta_k &amp; = \\delta_{\\mathrm{ref}, k} + \\Delta \\delta_k, \\ \\Delta \\delta_k \\ll 1 \\\\ \\end{align}  <p>\\mathrm{clamp}(v, v_{\\min}, v_{\\max})\\mathrm{clamp}(v, v_{\\min}, v_{\\max}) is a function to convert vv to be larger than v_{\\min}v_{\\min} and smaller than v_{\\max}v_{\\max}.</p> <p>Using this \\delta_{\\mathrm{ref}, k}\\delta_{\\mathrm{ref}, k}, \\tan \\delta_k\\tan \\delta_k is linearized as follows.</p>  \\begin{align} \\tan \\delta_k &amp; \\approx \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} \\Delta \\delta_k \\\\ &amp; = \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} (\\delta_{\\mathrm{ref}, k} - \\delta_k) \\\\ &amp; = \\tan \\delta_{\\mathrm{ref}, k} - \\frac{\\delta_{\\mathrm{ref}, k}}{\\cos^2 \\delta_{\\mathrm{ref}, k}} + \\frac{1}{\\cos^2 \\delta_{\\mathrm{ref}, k}} \\delta_k \\end{align}   \\begin{align} \\tan \\delta_k &amp; \\approx \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} \\Delta \\delta_k \\\\ &amp; = \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} (\\delta_{\\mathrm{ref}, k} - \\delta_k) \\\\ &amp; = \\tan \\delta_{\\mathrm{ref}, k} - \\frac{\\delta_{\\mathrm{ref}, k}}{\\cos^2 \\delta_{\\mathrm{ref}, k}} + \\frac{1}{\\cos^2 \\delta_{\\mathrm{ref}, k}} \\delta_k \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#one-step-state-equation","title":"One-step state equation","text":"<p>Based on the linearization, the error kinematics is formulated with the following linear equations,</p>  \\begin{align}     \\begin{pmatrix}         y_{k+1} \\\\         \\theta_{k+1}     \\end{pmatrix}     =     \\begin{pmatrix}         1 &amp; v dt \\\\         0 &amp; 1 \\\\     \\end{pmatrix}     \\begin{pmatrix}         y_k \\\\         \\theta_k \\\\     \\end{pmatrix}     +     \\begin{pmatrix}         0 \\\\         \\frac{v dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} \\\\     \\end{pmatrix}     \\delta_{k}     +     \\begin{pmatrix}         0 \\\\         \\frac{v \\tan(\\delta_{\\mathrm{ref}, k}) dt}{L} - \\frac{v \\delta_{\\mathrm{ref}, k} dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} - \\kappa_k v dt\\\\     \\end{pmatrix} \\end{align}   \\begin{align}     \\begin{pmatrix}         y_{k+1} \\\\         \\theta_{k+1}     \\end{pmatrix}     =     \\begin{pmatrix}         1 &amp; v dt \\\\         0 &amp; 1 \\\\     \\end{pmatrix}     \\begin{pmatrix}         y_k \\\\         \\theta_k \\\\     \\end{pmatrix}     +     \\begin{pmatrix}         0 \\\\         \\frac{v dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} \\\\     \\end{pmatrix}     \\delta_{k}     +     \\begin{pmatrix}         0 \\\\         \\frac{v \\tan(\\delta_{\\mathrm{ref}, k}) dt}{L} - \\frac{v \\delta_{\\mathrm{ref}, k} dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} - \\kappa_k v dt\\\\     \\end{pmatrix} \\end{align}  <p>which can be formulated as follows with the state \\boldsymbol{x}\\boldsymbol{x}, control input uu and some matrices, where \\boldsymbol{x} = (y_k, \\theta_k)\\boldsymbol{x} = (y_k, \\theta_k)</p>  \\begin{align}   \\boldsymbol{x}_{k+1} = A_k \\boldsymbol{x}_k + \\boldsymbol{b}_k u_k + \\boldsymbol{w}_k \\end{align}   \\begin{align}   \\boldsymbol{x}_{k+1} = A_k \\boldsymbol{x}_k + \\boldsymbol{b}_k u_k + \\boldsymbol{w}_k \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#time-series-state-equation","title":"Time-series state equation","text":"<p>Then, we formulate time-series state equation by concatenating states, control inputs and matrices respectively as</p>  \\begin{align}   \\boldsymbol{x} = A \\boldsymbol{x}_0 + B \\boldsymbol{u} + \\boldsymbol{w} \\end{align}   \\begin{align}   \\boldsymbol{x} = A \\boldsymbol{x}_0 + B \\boldsymbol{u} + \\boldsymbol{w} \\end{align}  <p>where</p>  \\begin{align} \\boldsymbol{x} = (\\boldsymbol{x}^T_1, \\boldsymbol{x}^T_2, \\boldsymbol{x}^T_3, \\dots, \\boldsymbol{x}^T_{n-1})^T \\\\ \\boldsymbol{u} = (u_0, u_1, u_2, \\dots, u_{n-2})^T \\\\ \\boldsymbol{w} = (\\boldsymbol{w}^T_0, \\boldsymbol{w}^T_1, \\boldsymbol{w}^T_2, \\dots, \\boldsymbol{w}^T_{n-1})^T. \\\\ \\end{align}   \\begin{align} \\boldsymbol{x} = (\\boldsymbol{x}^T_1, \\boldsymbol{x}^T_2, \\boldsymbol{x}^T_3, \\dots, \\boldsymbol{x}^T_{n-1})^T \\\\ \\boldsymbol{u} = (u_0, u_1, u_2, \\dots, u_{n-2})^T \\\\ \\boldsymbol{w} = (\\boldsymbol{w}^T_0, \\boldsymbol{w}^T_1, \\boldsymbol{w}^T_2, \\dots, \\boldsymbol{w}^T_{n-1})^T. \\\\ \\end{align}  <p>In detail, each matrices are constructed as follows.</p>  \\begin{align}     \\begin{pmatrix}         \\boldsymbol{x}_1 \\\\         \\boldsymbol{x}_2 \\\\         \\boldsymbol{x}_3 \\\\         \\vdots \\\\         \\boldsymbol{x}_{n-1}     \\end{pmatrix}     =     \\begin{pmatrix}         A_0 \\\\         A_1 A_0 \\\\         A_2 A_1 A_0\\\\         \\vdots \\\\         \\prod\\limits_{k=0}^{n-1} A_{k}     \\end{pmatrix}     \\boldsymbol{x}_0     +     \\begin{pmatrix}       B_0 &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_0 B_0 &amp; B_1 &amp; 0 &amp; \\dots &amp; 0 \\\\       A_1 A_0 B_0 &amp; A_0 B_1 &amp; B_2 &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-3} A_k B_0 &amp; \\prod\\limits_{k=0}^{n-4} A_k B_1 &amp; \\dots &amp; A_0 B_{n-3} &amp; B_{n-2}     \\end{pmatrix}     \\begin{pmatrix}         u_0 \\\\         u_1 \\\\         u_2 \\\\         \\vdots \\\\         u_{n-2}     \\end{pmatrix}     +     \\begin{pmatrix}       I &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_0 &amp; I &amp; 0 &amp; \\dots &amp; 0 \\\\       A_1 A_0 &amp; A_0 &amp; I &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-3} A_k &amp; \\prod\\limits_{k=0}^{n-4} A_k &amp; \\dots &amp; A_0 &amp; I     \\end{pmatrix}     \\begin{pmatrix}         \\boldsymbol{w}_0 \\\\         \\boldsymbol{w}_1 \\\\         \\boldsymbol{w}_2 \\\\         \\vdots \\\\         \\boldsymbol{w}_{n-2}     \\end{pmatrix} \\end{align}   \\begin{align}     \\begin{pmatrix}         \\boldsymbol{x}_1 \\\\         \\boldsymbol{x}_2 \\\\         \\boldsymbol{x}_3 \\\\         \\vdots \\\\         \\boldsymbol{x}_{n-1}     \\end{pmatrix}     =     \\begin{pmatrix}         A_0 \\\\         A_1 A_0 \\\\         A_2 A_1 A_0\\\\         \\vdots \\\\         \\prod\\limits_{k=0}^{n-1} A_{k}     \\end{pmatrix}     \\boldsymbol{x}_0     +     \\begin{pmatrix}       B_0 &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_0 B_0 &amp; B_1 &amp; 0 &amp; \\dots &amp; 0 \\\\       A_1 A_0 B_0 &amp; A_0 B_1 &amp; B_2 &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-3} A_k B_0 &amp; \\prod\\limits_{k=0}^{n-4} A_k B_1 &amp; \\dots &amp; A_0 B_{n-3} &amp; B_{n-2}     \\end{pmatrix}     \\begin{pmatrix}         u_0 \\\\         u_1 \\\\         u_2 \\\\         \\vdots \\\\         u_{n-2}     \\end{pmatrix}     +     \\begin{pmatrix}       I &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_0 &amp; I &amp; 0 &amp; \\dots &amp; 0 \\\\       A_1 A_0 &amp; A_0 &amp; I &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-3} A_k &amp; \\prod\\limits_{k=0}^{n-4} A_k &amp; \\dots &amp; A_0 &amp; I     \\end{pmatrix}     \\begin{pmatrix}         \\boldsymbol{w}_0 \\\\         \\boldsymbol{w}_1 \\\\         \\boldsymbol{w}_2 \\\\         \\vdots \\\\         \\boldsymbol{w}_{n-2}     \\end{pmatrix} \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#free-boundary-conditioned-time-series-state-equation","title":"Free-boundary-conditioned time-series state equation","text":"<p>For path planning which does not start from the current ego pose, \\boldsymbol{x}_0\\boldsymbol{x}_0 should be the design variable of optimization. Therefore, we make \\boldsymbol{u}'\\boldsymbol{u}' by concatenating \\boldsymbol{x}_0\\boldsymbol{x}_0 and \\boldsymbol{u}\\boldsymbol{u}, and redefine \\boldsymbol{x}\\boldsymbol{x} as follows.</p>  \\begin{align}   \\boldsymbol{u}' &amp; = (\\boldsymbol{x}^T_0, \\boldsymbol{u}^T)^T \\\\   \\boldsymbol{x} &amp; = (\\boldsymbol{x}^T_0, \\boldsymbol{x}^T_1, \\boldsymbol{x}^T_2, \\dots, \\boldsymbol{x}^T_{n-1})^T \\end{align}   \\begin{align}   \\boldsymbol{u}' &amp; = (\\boldsymbol{x}^T_0, \\boldsymbol{u}^T)^T \\\\   \\boldsymbol{x} &amp; = (\\boldsymbol{x}^T_0, \\boldsymbol{x}^T_1, \\boldsymbol{x}^T_2, \\dots, \\boldsymbol{x}^T_{n-1})^T \\end{align}  <p>Then we get the following state equation</p>  \\begin{align}   \\boldsymbol{x}' = B \\boldsymbol{u}' + \\boldsymbol{w}, \\end{align}   \\begin{align}   \\boldsymbol{x}' = B \\boldsymbol{u}' + \\boldsymbol{w}, \\end{align}  <p>which is in detail</p>  \\begin{align}     \\begin{pmatrix}         \\boldsymbol{x}_0 \\\\         \\boldsymbol{x}_1 \\\\         \\boldsymbol{x}_2 \\\\         \\boldsymbol{x}_3 \\\\         \\vdots \\\\         \\boldsymbol{x}_{n-1}     \\end{pmatrix}     =     \\begin{pmatrix}       I &amp; 0 &amp; \\dots &amp; &amp; &amp; 0 \\\\       A_0 &amp; B_0 &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_1 A_0 &amp; A_0 B_0 &amp; B_1 &amp; 0 &amp; \\dots &amp; 0 \\\\       A_2 A_1 A_0 &amp; A_1 A_0 B_0 &amp; A_0 B_1 &amp; B_2 &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-1} A_k &amp; \\prod\\limits_{k=0}^{n-3} A_k B_0 &amp; \\prod\\limits_{k=0}^{n-4} A_k B_1 &amp; \\dots &amp; A_0 B_{n-3} &amp; B_{n-2}     \\end{pmatrix}     \\begin{pmatrix}         \\boldsymbol{x}_0 \\\\         u_0 \\\\         u_1 \\\\         u_2 \\\\         \\vdots \\\\         u_{n-2}     \\end{pmatrix}     +     \\begin{pmatrix}       0 &amp; \\dots &amp; &amp; &amp; 0 \\\\       I &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_0 &amp; I &amp; 0 &amp; \\dots &amp; 0 \\\\       A_1 A_0 &amp; A_0 &amp; I &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-3} A_k &amp; \\prod\\limits_{k=0}^{n-4} A_k &amp; \\dots &amp; A_0 &amp; I     \\end{pmatrix}     \\begin{pmatrix}         \\boldsymbol{w}_0 \\\\         \\boldsymbol{w}_1 \\\\         \\boldsymbol{w}_2 \\\\         \\vdots \\\\         \\boldsymbol{w}_{n-2}     \\end{pmatrix}. \\end{align}   \\begin{align}     \\begin{pmatrix}         \\boldsymbol{x}_0 \\\\         \\boldsymbol{x}_1 \\\\         \\boldsymbol{x}_2 \\\\         \\boldsymbol{x}_3 \\\\         \\vdots \\\\         \\boldsymbol{x}_{n-1}     \\end{pmatrix}     =     \\begin{pmatrix}       I &amp; 0 &amp; \\dots &amp; &amp; &amp; 0 \\\\       A_0 &amp; B_0 &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_1 A_0 &amp; A_0 B_0 &amp; B_1 &amp; 0 &amp; \\dots &amp; 0 \\\\       A_2 A_1 A_0 &amp; A_1 A_0 B_0 &amp; A_0 B_1 &amp; B_2 &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-1} A_k &amp; \\prod\\limits_{k=0}^{n-3} A_k B_0 &amp; \\prod\\limits_{k=0}^{n-4} A_k B_1 &amp; \\dots &amp; A_0 B_{n-3} &amp; B_{n-2}     \\end{pmatrix}     \\begin{pmatrix}         \\boldsymbol{x}_0 \\\\         u_0 \\\\         u_1 \\\\         u_2 \\\\         \\vdots \\\\         u_{n-2}     \\end{pmatrix}     +     \\begin{pmatrix}       0 &amp; \\dots &amp; &amp; &amp; 0 \\\\       I &amp; 0 &amp; &amp; \\dots &amp; 0 \\\\       A_0 &amp; I &amp; 0 &amp; \\dots &amp; 0 \\\\       A_1 A_0 &amp; A_0 &amp; I &amp; \\dots &amp; 0 \\\\       \\vdots &amp; \\vdots &amp; &amp; \\ddots &amp; 0 \\\\       \\prod\\limits_{k=0}^{n-3} A_k &amp; \\prod\\limits_{k=0}^{n-4} A_k &amp; \\dots &amp; A_0 &amp; I     \\end{pmatrix}     \\begin{pmatrix}         \\boldsymbol{w}_0 \\\\         \\boldsymbol{w}_1 \\\\         \\boldsymbol{w}_2 \\\\         \\vdots \\\\         \\boldsymbol{w}_{n-2}     \\end{pmatrix}. \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#objective-function","title":"Objective function","text":"<p>The objective function for smoothing and tracking is shown as follows, which can be formulated with value function matrices Q, RQ, R.</p>  \\begin{align} J_1 (\\boldsymbol{x}', \\boldsymbol{u}') &amp; = w_y \\sum_{k} y_k^2 + w_{\\theta} \\sum_{k} \\theta_k^2 + w_{\\delta} \\sum_k \\delta_k^2 + w_{\\dot{\\delta}} \\sum_k \\dot{\\delta}_k^2 + w_{\\ddot{\\delta}} \\sum_k \\ddot{\\delta}_k^2 \\\\ &amp; = \\boldsymbol{x}'^T Q \\boldsymbol{x}' + \\boldsymbol{u}'^T R \\boldsymbol{u}' \\\\ &amp; = \\boldsymbol{u}'^T H \\boldsymbol{u}' + \\boldsymbol{u}'^T \\boldsymbol{f} \\end{align}   \\begin{align} J_1 (\\boldsymbol{x}', \\boldsymbol{u}') &amp; = w_y \\sum_{k} y_k^2 + w_{\\theta} \\sum_{k} \\theta_k^2 + w_{\\delta} \\sum_k \\delta_k^2 + w_{\\dot{\\delta}} \\sum_k \\dot{\\delta}_k^2 + w_{\\ddot{\\delta}} \\sum_k \\ddot{\\delta}_k^2 \\\\ &amp; = \\boldsymbol{x}'^T Q \\boldsymbol{x}' + \\boldsymbol{u}'^T R \\boldsymbol{u}' \\\\ &amp; = \\boldsymbol{u}'^T H \\boldsymbol{u}' + \\boldsymbol{u}'^T \\boldsymbol{f} \\end{align}  <p>As mentioned before, the constraints to be collision free with obstacles and road boundaries are formulated to be soft constraints. Assuming that the lateral distance to the road boundaries or obstacles from the back wheel center, front wheel center, and the point between them are y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k}y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} respectively, and slack variables for each point are \\lambda_{\\mathrm{base}}, \\lambda_{\\mathrm{top}}, \\lambda_{\\mathrm{mid}}\\lambda_{\\mathrm{base}}, \\lambda_{\\mathrm{top}}, \\lambda_{\\mathrm{mid}}, the soft constraints can be formulated as follows.</p>  y_{\\mathrm{base}, k, \\min} - \\lambda_{\\mathrm{base}, k} \\leq y_{\\mathrm{base}, k} (y_k)  \\leq y_{\\mathrm{base}, k, \\max} + \\lambda_{\\mathrm{base}, k}\\\\ y_{\\mathrm{top}, k, \\min} - \\lambda_{\\mathrm{top}, k} \\leq y_{\\mathrm{top}, k} (y_k) \\leq y_{\\mathrm{top}, k, \\max} + \\lambda_{\\mathrm{top}, k}\\\\ y_{\\mathrm{mid}, k, \\min} - \\lambda_{\\mathrm{mid}, k} \\leq y_{\\mathrm{mid}, k} (y_k) \\leq y_{\\mathrm{mid}, k, \\max} + \\lambda_{\\mathrm{mid}, k} \\\\ 0 \\leq \\lambda_{\\mathrm{base}, k} \\\\ 0 \\leq \\lambda_{\\mathrm{top}, k} \\\\ 0 \\leq \\lambda_{\\mathrm{mid}, k}   y_{\\mathrm{base}, k, \\min} - \\lambda_{\\mathrm{base}, k} \\leq y_{\\mathrm{base}, k} (y_k)  \\leq y_{\\mathrm{base}, k, \\max} + \\lambda_{\\mathrm{base}, k}\\\\ y_{\\mathrm{top}, k, \\min} - \\lambda_{\\mathrm{top}, k} \\leq y_{\\mathrm{top}, k} (y_k) \\leq y_{\\mathrm{top}, k, \\max} + \\lambda_{\\mathrm{top}, k}\\\\ y_{\\mathrm{mid}, k, \\min} - \\lambda_{\\mathrm{mid}, k} \\leq y_{\\mathrm{mid}, k} (y_k) \\leq y_{\\mathrm{mid}, k, \\max} + \\lambda_{\\mathrm{mid}, k} \\\\ 0 \\leq \\lambda_{\\mathrm{base}, k} \\\\ 0 \\leq \\lambda_{\\mathrm{top}, k} \\\\ 0 \\leq \\lambda_{\\mathrm{mid}, k}  <p>Since y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k}y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} is formulated as a linear function of y_ky_k, the objective function for soft constraints is formulated as follows.</p>  \\begin{align} J_2 &amp; (\\boldsymbol{\\lambda}_\\mathrm{base}, \\boldsymbol{\\lambda}_\\mathrm{top}, \\boldsymbol {\\lambda}_\\mathrm{mid})\\\\ &amp; = w_{\\mathrm{base}} \\sum_{k} \\lambda_{\\mathrm{base}, k} + w_{\\mathrm{mid}} \\sum_k \\lambda_{\\mathrm{mid}, k} + w_{\\mathrm{top}} \\sum_k \\lambda_{\\mathrm{top}, k} \\end{align}   \\begin{align} J_2 &amp; (\\boldsymbol{\\lambda}_\\mathrm{base}, \\boldsymbol{\\lambda}_\\mathrm{top}, \\boldsymbol {\\lambda}_\\mathrm{mid})\\\\ &amp; = w_{\\mathrm{base}} \\sum_{k} \\lambda_{\\mathrm{base}, k} + w_{\\mathrm{mid}} \\sum_k \\lambda_{\\mathrm{mid}, k} + w_{\\mathrm{top}} \\sum_k \\lambda_{\\mathrm{top}, k} \\end{align}  <p>Slack variables are also design variables for optimization. We define a vector \\boldsymbol{v}\\boldsymbol{v}, that concatenates all the design variables.</p>  \\begin{align} \\boldsymbol{v} = \\begin{pmatrix}   \\boldsymbol{u}'^T &amp; \\boldsymbol{\\lambda}_\\mathrm{base}^T &amp; \\boldsymbol{\\lambda}_\\mathrm{top}^T &amp; \\boldsymbol{\\lambda}_\\mathrm{mid}^T \\end{pmatrix}^T \\end{align}   \\begin{align} \\boldsymbol{v} = \\begin{pmatrix}   \\boldsymbol{u}'^T &amp; \\boldsymbol{\\lambda}_\\mathrm{base}^T &amp; \\boldsymbol{\\lambda}_\\mathrm{top}^T &amp; \\boldsymbol{\\lambda}_\\mathrm{mid}^T \\end{pmatrix}^T \\end{align}  <p>The summation of these two objective functions is the objective function for the optimization problem.</p>  \\begin{align} \\min_{\\boldsymbol{v}} J (\\boldsymbol{v}) = \\min_{\\boldsymbol{v}} J_1 (\\boldsymbol{u}') + J_2 (\\boldsymbol{\\lambda}_\\mathrm{base}, \\boldsymbol{\\lambda}_\\mathrm{top}, \\boldsymbol{\\lambda}_\\mathrm{mid}) \\end{align}   \\begin{align} \\min_{\\boldsymbol{v}} J (\\boldsymbol{v}) = \\min_{\\boldsymbol{v}} J_1 (\\boldsymbol{u}') + J_2 (\\boldsymbol{\\lambda}_\\mathrm{base}, \\boldsymbol{\\lambda}_\\mathrm{top}, \\boldsymbol{\\lambda}_\\mathrm{mid}) \\end{align}  <p>As mentioned before, we use hard constraints where some trajectory points in front of the ego are the same as the previously generated trajectory points. This hard constraints is formulated as follows.</p>  \\begin{align} \\delta_k = \\delta_{k}^{\\mathrm{prev}} (0 \\leq i \\leq N_{\\mathrm{fix}}) \\end{align}   \\begin{align} \\delta_k = \\delta_{k}^{\\mathrm{prev}} (0 \\leq i \\leq N_{\\mathrm{fix}}) \\end{align}  <p>Finally we transform those objective functions to the following QP problem, and solve it.</p>  \\begin{align} \\min_{\\boldsymbol{v}} \\ &amp; \\frac{1}{2} \\boldsymbol{v}^T \\boldsymbol{H} \\boldsymbol{v} + \\boldsymbol{f} \\boldsymbol{v} \\\\ \\mathrm{s.t.} \\ &amp; \\boldsymbol{b}_{lower} \\leq \\boldsymbol{A} \\boldsymbol{v} \\leq \\boldsymbol{b}_{upper} \\end{align}   \\begin{align} \\min_{\\boldsymbol{v}} \\ &amp; \\frac{1}{2} \\boldsymbol{v}^T \\boldsymbol{H} \\boldsymbol{v} + \\boldsymbol{f} \\boldsymbol{v} \\\\ \\mathrm{s.t.} \\ &amp; \\boldsymbol{b}_{lower} \\leq \\boldsymbol{A} \\boldsymbol{v} \\leq \\boldsymbol{b}_{upper} \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#constraints","title":"Constraints","text":""},{"location":"planning/obstacle_avoidance_planner/#steer-angle-limitation","title":"Steer angle limitation","text":"<p>Steer angle has a certain limitation (\\delta_{max}\\delta_{max}, \\delta_{min}\\delta_{min}). Therefore we add linear inequality equations.</p>  \\begin{align} \\delta_{min} \\leq \\delta_i \\leq \\delta_{max} \\end{align}   \\begin{align} \\delta_{min} \\leq \\delta_i \\leq \\delta_{max} \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#collision-free","title":"Collision free","text":"<p>To realize collision-free path planning, we have to formulate constraints that the vehicle is inside the road (moreover, a certain meter far from the road boundary) and does not collide with obstacles in linear equations. For linearity, we chose a method to approximate the vehicle shape with a set of circles, that is reliable and easy to implement.</p> <p>Now we formulate the linear constraints where a set of circles on each trajectory point is collision-free. For collision checking, we have a drivable area in the format of an image where walls or obstacles are filled with a color. By using this drivable area, we calculate upper (left) and lower (right) boundaries along reference points so that we can interpolate boundaries on any position on the trajectory.</p> <p>Assuming that upper and lower boundaries are b_lb_l, b_ub_u respectively, and rr is a radius of a circle, lateral deviation of the circle center y'y' has to be</p>  b_l + r \\leq y' \\leq b_u - r.   b_l + r \\leq y' \\leq b_u - r.  <p>Based on the following figure, y'y' can be formulated as follows.</p>  \\begin{align} y' &amp; = L \\sin(\\theta + \\beta) + y \\cos \\beta - l \\sin(\\gamma - \\phi_a) \\\\ &amp; = L \\sin \\theta \\cos \\beta + L \\cos \\theta \\sin \\beta + y \\cos \\beta - l \\sin(\\gamma - \\phi_a) \\\\ &amp; \\approx L \\theta \\cos \\beta + L \\sin \\beta + y \\cos \\beta - l \\sin(\\gamma - \\phi_a) \\end{align}   \\begin{align} y' &amp; = L \\sin(\\theta + \\beta) + y \\cos \\beta - l \\sin(\\gamma - \\phi_a) \\\\ &amp; = L \\sin \\theta \\cos \\beta + L \\cos \\theta \\sin \\beta + y \\cos \\beta - l \\sin(\\gamma - \\phi_a) \\\\ &amp; \\approx L \\theta \\cos \\beta + L \\sin \\beta + y \\cos \\beta - l \\sin(\\gamma - \\phi_a) \\end{align}   b_l + r - \\lambda \\leq y' \\leq b_u - r + \\lambda.   b_l + r - \\lambda \\leq y' \\leq b_u - r + \\lambda.   \\begin{align} y' &amp; = C_1 \\boldsymbol{x} + C_2 \\\\ &amp; = C_1 (B \\boldsymbol{v} + \\boldsymbol{w}) + C_2 \\\\ &amp; = C_1 B \\boldsymbol{v} + \\boldsymbol{w} + C_2 \\end{align}   \\begin{align} y' &amp; = C_1 \\boldsymbol{x} + C_2 \\\\ &amp; = C_1 (B \\boldsymbol{v} + \\boldsymbol{w}) + C_2 \\\\ &amp; = C_1 B \\boldsymbol{v} + \\boldsymbol{w} + C_2 \\end{align}  <p>Note that longitudinal position of the circle center and the trajectory point to calculate boundaries are different. But each boundaries are vertical against the trajectory, resulting in less distortion by the longitudinal position difference since road boundaries does not change so much. For example, if the boundaries are not vertical against the trajectory and there is a certain difference of longitudinal position between the circe center and the trajectory point, we can easily guess that there is much more distortion when comparing lateral deviation and boundaries.</p>  \\begin{align}     A_{blk} &amp; =     \\begin{pmatrix}         C_1 B &amp; O &amp; \\dots &amp; O &amp; I_{N_{ref} \\times N_{ref}} &amp; O \\dots &amp; O\\\\         -C_1 B &amp; O &amp; \\dots &amp; O &amp; I &amp; O \\dots &amp; O\\\\         O &amp; O &amp; \\dots &amp; O &amp; I &amp; O \\dots &amp; O     \\end{pmatrix}     \\in \\boldsymbol{R}^{3 N_{ref} \\times D_v + N_{circle} N_{ref}} \\\\     \\boldsymbol{b}_{lower, blk} &amp; =     \\begin{pmatrix}         \\boldsymbol{b}_{lower} - C_1 \\boldsymbol{w} - C_2 \\\\         -\\boldsymbol{b}_{upper} + C_1 \\boldsymbol{w} + C_2 \\\\         O     \\end{pmatrix}     \\in \\boldsymbol{R}^{3 N_{ref}} \\\\     \\boldsymbol{b}_{upper, blk} &amp; = \\boldsymbol{\\infty}     \\in \\boldsymbol{R}^{3 N_{ref}} \\end{align}   \\begin{align}     A_{blk} &amp; =     \\begin{pmatrix}         C_1 B &amp; O &amp; \\dots &amp; O &amp; I_{N_{ref} \\times N_{ref}} &amp; O \\dots &amp; O\\\\         -C_1 B &amp; O &amp; \\dots &amp; O &amp; I &amp; O \\dots &amp; O\\\\         O &amp; O &amp; \\dots &amp; O &amp; I &amp; O \\dots &amp; O     \\end{pmatrix}     \\in \\boldsymbol{R}^{3 N_{ref} \\times D_v + N_{circle} N_{ref}} \\\\     \\boldsymbol{b}_{lower, blk} &amp; =     \\begin{pmatrix}         \\boldsymbol{b}_{lower} - C_1 \\boldsymbol{w} - C_2 \\\\         -\\boldsymbol{b}_{upper} + C_1 \\boldsymbol{w} + C_2 \\\\         O     \\end{pmatrix}     \\in \\boldsymbol{R}^{3 N_{ref}} \\\\     \\boldsymbol{b}_{upper, blk} &amp; = \\boldsymbol{\\infty}     \\in \\boldsymbol{R}^{3 N_{ref}} \\end{align}  <p>We will explain options for optimization.</p>"},{"location":"planning/obstacle_avoidance_planner/#l-infinity-optimization","title":"L-infinity optimization","text":"<p>The above formulation is called L2 norm for slack variables. Instead, if we use L-infinity norm where slack variables are shared by enabling <code>l_inf_norm</code>.</p>  \\begin{align}     A_{blk} =     \\begin{pmatrix}         C_1 B &amp; I_{N_{ref} \\times N_{ref}} \\\\         -C_1 B &amp; I \\\\         O &amp; I     \\end{pmatrix} \\in \\boldsymbol{R}^{3N_{ref} \\times D_v + N_{ref}} \\end{align}   \\begin{align}     A_{blk} =     \\begin{pmatrix}         C_1 B &amp; I_{N_{ref} \\times N_{ref}} \\\\         -C_1 B &amp; I \\\\         O &amp; I     \\end{pmatrix} \\in \\boldsymbol{R}^{3N_{ref} \\times D_v + N_{ref}} \\end{align}"},{"location":"planning/obstacle_avoidance_planner/#two-step-soft-constraints","title":"Two-step soft constraints","text":"\\begin{align} \\boldsymbol{v}' =   \\begin{pmatrix}     \\boldsymbol{v} \\\\     \\boldsymbol{\\lambda}^{soft_1} \\\\     \\boldsymbol{\\lambda}^{soft_2} \\\\   \\end{pmatrix}   \\in \\boldsymbol{R}^{D_v + 2N_{slack}} \\end{align}   \\begin{align} \\boldsymbol{v}' =   \\begin{pmatrix}     \\boldsymbol{v} \\\\     \\boldsymbol{\\lambda}^{soft_1} \\\\     \\boldsymbol{\\lambda}^{soft_2} \\\\   \\end{pmatrix}   \\in \\boldsymbol{R}^{D_v + 2N_{slack}} \\end{align}  <p>** depends on whether to use L2 norm or L-infinity optimization.</p>  \\begin{align}     A_{blk} &amp; =     \\begin{pmatrix}         A^{soft_1}_{blk} \\\\         A^{soft_2}_{blk} \\\\     \\end{pmatrix}\\\\     &amp; =     \\begin{pmatrix}         C_1^{soft_1} B &amp; &amp; \\\\         -C_1^{soft_1} B &amp; \\Huge{*} &amp; \\Huge{O} \\\\         O &amp; &amp; \\\\         C_1^{soft_2} B &amp; &amp; \\\\         -C_1^{soft_2} B &amp; \\Huge{O} &amp; \\Huge{*} \\\\         O &amp; &amp;     \\end{pmatrix}     \\in \\boldsymbol{R}^{6 N_{ref} \\times D_v + 2 N_{slack}} \\end{align}   \\begin{align}     A_{blk} &amp; =     \\begin{pmatrix}         A^{soft_1}_{blk} \\\\         A^{soft_2}_{blk} \\\\     \\end{pmatrix}\\\\     &amp; =     \\begin{pmatrix}         C_1^{soft_1} B &amp; &amp; \\\\         -C_1^{soft_1} B &amp; \\Huge{*} &amp; \\Huge{O} \\\\         O &amp; &amp; \\\\         C_1^{soft_2} B &amp; &amp; \\\\         -C_1^{soft_2} B &amp; \\Huge{O} &amp; \\Huge{*} \\\\         O &amp; &amp;     \\end{pmatrix}     \\in \\boldsymbol{R}^{6 N_{ref} \\times D_v + 2 N_{slack}} \\end{align}  <p>N_{slack}N_{slack} is N_{circle}N_{circle} when L2 optimization, or 11 when L-infinity optimization. N_{circle}N_{circle} is the number of circles to check collision.</p>"},{"location":"planning/obstacle_avoidance_planner/#tuning","title":"Tuning","text":""},{"location":"planning/obstacle_avoidance_planner/#vehicle","title":"Vehicle","text":"<ul> <li>max steering wheel degree<ul> <li><code>mpt.kinematics.max_steer_deg</code></li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#boundary-search","title":"Boundary search","text":"<ul> <li><code>advanced.mpt.bounds_search_widths</code><ul> <li>In order to efficiently search precise lateral boundaries on each trajectory point, different resolutions of search widths are defined.</li> <li>By default, [0.45, 0.15, 0.05, 0.01] is used. In this case, the goal is to get the boundaries' length on each trajectory point with 0.01 [m] resolution.</li> <li>Firstly, lateral boundaries are searched with a rough resolution (= 0.45 [m]).</li> <li>Then, within its 0.45 [m] resolution which boundaries are inside, they are searched again with a bit precise resolution (= 0.15 [m]).</li> <li>Following this rule, finally boundaries with 0.01 [m] will be found.</li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#assumptions","title":"Assumptions","text":"<ul> <li>EB optimized trajectory length should be longer than MPT optimized trajectory length<ul> <li>since MPT result may be jerky because of non-fixed reference path (= EB optimized trajectory)</li> <li>At least, EB fixed optimized trajectory length must be longer than MPT fixed optimization trajectory length<ul> <li>This causes the case that there is a large difference between MPT fixed optimized point and MPT optimized point just after the point.</li> </ul> </li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#drivability-in-narrow-roads","title":"Drivability in narrow roads","text":"<ul> <li>set <code>option.drivability_check.use_vehicle_circles</code> true<ul> <li>use a set of circles as a shape of the vehicle when checking if the generated trajectory will be outside the drivable area.</li> </ul> </li> <li>make <code>mpt.clearance.soft_clearance_from_road</code> smaller</li> <li> <p>make <code>mpt.kinematics.optimization_center_offset</code> different</p> <ul> <li>The point on the vehicle, offset forward from the base link` tries to follow the reference path.</li> </ul> <ul> <li>This may cause the a part of generated trajectory will be outside the drivable area.</li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#computation-time","title":"Computation time","text":"<ul> <li> <p>Loose EB optimization</p> <ul> <li> <ol> <li>make <code>eb.common.delta_arc_length_for_eb</code> large and <code>eb.common.num_sampling_points_for_eb</code> small</li> <li>This makes the number of design variables smaller</li> <li>Be careful about the trajectory length between MPT and EB as shown in Assumptions.</li> <li>However, empirically this causes large turn at the corner (e.g. The vehicle turns a steering wheel to the opposite side (=left) a bit just before the corner turning to right)</li> </ol> </li> <li> <ol> <li>make <code>eb.qp.eps_abs</code> and <code>eb.qp.eps_rel</code> small</li> <li>This causes very unstable reference path generation for MPT, or turning a steering wheel a little bit larger</li> </ol> </li> </ul> </li> </ul> <ul> <li> <p>Enable computation reduction flag</p> <ul> <li> <ol> <li>set l_inf_norm true (by default)</li> <li>use L-inf norm optimization for MPT w.r.t. slack variables, resulting in lower number of design variables</li> </ol> </li> <li> <ol> <li>set enable_warm_start true</li> </ol> </li> <li> <ol> <li>set enable_manual_warm_start true (by default)</li> </ol> </li> <li> <ol> <li>set steer_limit_constraint false</li> <li>This causes no assumption for trajectory generation where steering angle will not exceeds its hardware limitation</li> </ol> </li> <li> <ol> <li>make the number of collision-free constraints small</li> <li>How to change parameters depend on the type of collision-free constraints<ul> <li>If</li> </ul> </li> <li>This may cause the trajectory generation where a part of ego vehicle is out of drivable area</li> </ol> </li> </ul> </li> </ul> <ul> <li>Disable publishing debug visualization markers<ul> <li>set <code>option.is_publishing_*</code> false</li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#robustness","title":"Robustness","text":"<ul> <li>Check if the trajectory before EB, after EB, or after MPT is not robust<ul> <li>if the trajectory before EB is not robust</li> <li>if the trajectory after EB is not robust</li> <li>if the trajectory after MPT is not robust<ul> <li>make <code>mpt.weight.steer_input_weight</code> or <code>mpt.weight.steer_rate_weight</code> larger, which are stability of steering wheel along the trajectory.</li> </ul> </li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#other-options","title":"Other options","text":"<ul> <li><code>option.skip_optimization</code> skips EB and MPT optimization.</li> <li><code>option.enable_pre_smoothing</code> enables EB which is smoothing the trajectory for MPT.<ul> <li>EB is not required if the reference path for MPT is smooth enough and does not change its shape suddenly</li> </ul> </li> <li><code>option.is_showing_calculation_time</code> enables showing each calculation time for functions and total calculation time on the terminal.</li> <li><code>option.is_stopping_if_outside_drivable_area</code> enables stopping just before the generated trajectory point will be outside the drivable area.</li> <li><code>mpt.option.plan_from_ego</code> enables planning from the ego pose when the ego's velocity is zero.</li> <li><code>mpt.option.max_plan_from_ego_length</code> maximum length threshold to plan from ego. it is enabled when the length of trajectory is shorter than this value.</li> <li><code>mpt.option.two_step_soft_constraint</code> enables two step of soft constraints for collision free<ul> <li><code>mpt.option.soft_clearance_from_road</code> and <code>mpt.option.soft_second_clearance_from_road</code> are the weight.</li> </ul> </li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#limitation","title":"Limitation","text":"<ul> <li>When turning right or left in the intersection, the output trajectory is close to the outside road boundary.</li> <li>Roles of planning for behavior_path_planner and obstacle_avoidance_planner are not decided clearly.</li> <li>High computation cost</li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#comparison-to-other-methods","title":"Comparison to other methods","text":"<p>Planning a trajectory that satisfies kinematic feasibility and collision-free has two main characteristics that makes hard to be solved: one is non-convex and the other is high dimension. According to the characteristics, we investigate pros and cons of the typical planning methods: optimization-based, sampling-based, and learning-based method.</p>"},{"location":"planning/obstacle_avoidance_planner/#optimization-based-method","title":"Optimization-based method","text":"<ul> <li>pros: comparatively fast against high dimension by leveraging the gradient descent</li> <li>cons: often converge to the local minima in the non-convex problem</li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#sampling-based-method","title":"Sampling-based method","text":"<ul> <li>pros: realize global optimization</li> <li>cons: high computation cost especially in the complex case</li> </ul>"},{"location":"planning/obstacle_avoidance_planner/#learning-based-method","title":"Learning-based method","text":"<p>under research yet</p> <p>Based on these pros/cons, we chose the optimization-based planner first. Although it has a cons to converge to the local minima, it can get a good solution by the preprocessing to approximate the convex problem that almost equals to the original non-convex problem.</p>"},{"location":"planning/obstacle_avoidance_planner/#debug","title":"Debug","text":"<p>Debug information are written here.</p>"},{"location":"planning/obstacle_avoidance_planner/debug/","title":"Debug","text":""},{"location":"planning/obstacle_avoidance_planner/debug/#debug-visualization","title":"Debug visualization","text":"<p>Topics for debugging will be explained in this section.</p> <ul> <li>Drivable area<ul> <li>Drivable area to cover the road. Whether this area is continuous and covers the road can be checked.</li> <li><code>/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/debug/drivable_area</code>, whose type is <code>nav_msgs/msg/OccupancyGrid</code></li> </ul> </li> </ul> <p></p> <ul> <li>Path from behavior<ul> <li>The input path of obstacle_avoidance_planner. Whether this path is continuous and the curvature is not so high can be checked.</li> <li><code>Path</code> or <code>PathFootprint</code> rviz plugin.</li> </ul> </li> </ul> <p></p> <ul> <li>EB trajectory<ul> <li>The output trajectory of elastic band. Whether this trajectory is very smooth and a sampling width is constant can be checked.</li> <li><code>Trajectory</code> or <code>TrajectoryFootprint</code> rviz plugin.</li> </ul> </li> </ul> <p></p> <ul> <li>MPT reference trajectory<ul> <li>The reference trajectory of model predictive trajectory. Whether this trajectory is very smooth and a sampling width is constant can be checked.</li> <li><code>Trajectory</code> or <code>TrajectoryFootprint</code> rviz plugin.</li> </ul> </li> </ul> <p></p> <ul> <li>MPT fixed trajectory<ul> <li>The fixed trajectory around the ego of model predictive trajectory.</li> <li><code>Trajectory</code> or <code>TrajectoryFootprint</code> rviz plugin.</li> </ul> </li> </ul> <p></p> <ul> <li>bounds<ul> <li>Lateral Distance to the road or object boundaries to check collision in model predictive trajectory.</li> <li>Whether these lines' ends align the road or obstacle boundaries can be checked.</li> <li><code>bounds*</code> of <code>/planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/debug/marker</code> whose type is <code>visualization_msgs/msg/MarkerArray</code></li> </ul> </li> </ul> <p></p> <ul> <li>MPT trajectory<ul> <li>The output of model predictive trajectory. Whether this trajectory is smooth enough and inside the drivable area can be checked.</li> <li><code>Trajectory</code> or <code>TrajectoryFootprint</code> rviz plugin.</li> </ul> </li> </ul> <p></p> <ul> <li>Output trajectory<ul> <li>The output of obstacle_avoidance_planner. Whether this trajectory is smooth enough can be checked.</li> <li><code>Trajectory</code> or <code>TrajectoryFootprint</code> rviz plugin.</li> </ul> </li> </ul> <p></p>"},{"location":"planning/obstacle_avoidance_planner/debug/#calculation-cost","title":"Calculation cost","text":"<p>Obstacle avoidance planner consists of many functions such as clearance map generation, boundary search, reference path smoothing, trajectory optimization, ... We can see the calculation time for each function as follows.</p>"},{"location":"planning/obstacle_avoidance_planner/debug/#raw-data","title":"Raw data","text":"<pre><code>$ ros2 topic echo /planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/debug/calculation_time --field data\n\n      getDrivableAreaInCV:= 0.21 [ms]\ngetClearanceMap:= 1.327 [ms]\ndrawObstaclesOnImage:= 0.436 [ms]\ngetAreaWithObjects:= 0.029 [ms]\ngetClearanceMap:= 2.186 [ms]\ngetMaps:= 4.213 [ms]\ncalculateTrajectory:= 2.417 [ms]\ngetOptimizedTrajectory:= 5.203 [ms]\ngetEBTrajectory:= 5.231 [ms]\ncalcBounds:= 0.821 [ms]\ncalcVehicleBounds:= 0.27 [ms]\ngetReferencePoints:= 2.866 [ms]\ngenerateMPTMatrix:= 0.195 [ms]\ngenerateValueMatrix:= 0.019 [ms]\ngetObjectiveMatrix:= 0.559 [ms]\ngetConstraintMatrix:= 1.776 [ms]\ninitOsqp:= 9.074 [ms]\nsolveOsqp:= 3.809 [ms]\nexecuteOptimization:= 15.46 [ms]\ngetMPTPoints:= 0.049 [ms]\ngetModelPredictiveTrajectory:= 18.928 [ms]\noptimizeTrajectory:= 24.234 [ms]\ninsertZeroVelocityOutsideDrivableArea:= 0.023 [ms]\ngetDebugVisualizationMarker:= 0.446 [ms]\npublishDebugVisualizationMarker:= 2.146 [ms]\ngetDebugVisualizationWallMarker:= 0.001 [ms]\npublishDebugVisualizationWallMarker:= 0.013 [ms]\npublishDebugDataInOptimization:= 2.696 [ms]\ngetExtendedTrajectory:= 0.016 [ms]\ngenerateFineTrajectoryPoints:= 0.118 [ms]\nalignVelocity:= 1.227 [ms]\ngeneratePostProcessedTrajectory:= 1.375 [ms]\nmakePrevTrajectories:= 1.411 [ms]\ngenerateOptimizedTrajectory:= 33.284 [ms]\ngetExtendedTrajectory:= 0.018 [ms]\ngenerateFineTrajectoryPoints:= 0.084 [ms]\nalignVelocity:= 1.109 [ms]\ngeneratePostProcessedTrajectory:= 1.217 [ms]\ngetDebugCostMap * 3:= 0 [ms]\npublishDebugDataInMain:= 0.023 [ms]\npathCallback:= 34.614 [ms]\n</code></pre>"},{"location":"planning/obstacle_avoidance_planner/debug/#plot","title":"Plot","text":"<p>With a script, we can plot some of above time as follows.</p> <pre><code>python3 scripts/calclation_time_analyzer.py -f \"solveOsqp,initOsqp,pathCallback\"\n</code></pre> <p></p>"},{"location":"planning/obstacle_cruise_planner/","title":"Obstacle Cruise Planner","text":""},{"location":"planning/obstacle_cruise_planner/#overview","title":"Overview","text":"<p>The <code>obstacle_cruise_planner</code> package has following modules.</p> <ul> <li>Stop planning<ul> <li>stop when there is a static obstacle near the trajectory.</li> </ul> </li> <li>Cruise planning<ul> <li>slow down when there is a dynamic obstacle to cruise near the trajectory</li> </ul> </li> </ul>"},{"location":"planning/obstacle_cruise_planner/#interfaces","title":"Interfaces","text":""},{"location":"planning/obstacle_cruise_planner/#input-topics","title":"Input topics","text":"Name Type Description <code>~/input/trajectory</code> autoware_auto_planning_msgs::Trajectory input trajectory <code>~/input/objects</code> autoware_auto_perception_msgs::PredictedObjects dynamic objects <code>~/input/odometry</code> nav_msgs::msg::Odometry ego odometry"},{"location":"planning/obstacle_cruise_planner/#output-topics","title":"Output topics","text":"Name Type Description <code>~/output/trajectory</code> autoware_auto_planning_msgs::Trajectory output trajectory <code>~/output/velocity_limit</code> tier4_planning_msgs::VelocityLimit velocity limit for cruising <code>~/output/clear_velocity_limit</code> tier4_planning_msgs::VelocityLimitClearCommand clear command for velocity limit <code>~/output/stop_reasons</code> tier4_planning_msgs::StopReasonArray reasons that make the vehicle to stop"},{"location":"planning/obstacle_cruise_planner/#design","title":"Design","text":"<p>Design for the following functions is defined here.</p> <ul> <li>Obstacle candidates selection</li> <li>Obstacle stop planning</li> <li>Adaptive cruise planning</li> </ul> <p>A data structure for cruise and stop planning is as follows. This planner data is created first, and then sent to the planning algorithm.</p> <pre><code>struct ObstacleCruisePlannerData\n{\nrclcpp::Time current_time;\nautoware_auto_planning_msgs::msg::Trajectory traj;\ngeometry_msgs::msg::Pose current_pose;\ndouble current_vel;\ndouble current_acc;\nstd::vector&lt;TargetObstacle&gt; target_obstacles;\n};\n</code></pre> <pre><code>struct TargetObstacle\n{\nrclcpp::Time time_stamp;\ngeometry_msgs::msg::Pose pose;\nbool orientation_reliable;\ndouble velocity;\nbool velocity_reliable;\nObjectClassification classification;\nstd::string uuid;\nstd::vector&lt;PredictedPath&gt; predicted_paths;\nstd::vector&lt;geometry_msgs::msg::PointStamped&gt; collision_points;\nbool has_stopped;\n};\n</code></pre>"},{"location":"planning/obstacle_cruise_planner/#obstacle-candidates-selection","title":"Obstacle candidates selection","text":"<p>In this function, target obstacles for stopping or cruising are selected based on their pose and velocity.</p> <p>By default, objects that realize one of the following conditions are considered to be the target obstacle candidates. Some terms will be defined in the following subsections.</p> <ul> <li>Vehicle objects \"inside the detection area\" other than \"far crossing vehicles\".</li> <li>non vehicle objects \"inside the detection area\"</li> <li>\"Near cut-in vehicles\" outside the detection area</li> </ul> <p>Note that currently the obstacle candidates selection algorithm is for autonomous driving. However, we have following parameters as well for stop and cruise respectively so that we can extend the obstacles candidates selection algorithm for non vehicle robots. By default, unknown and vehicles are obstacles to cruise and stop, and non vehicles are obstacles just to stop.</p> Parameter Type Description <code>cruise_obstacle_type.unknown</code> bool flag to consider unknown objects as being cruised <code>cruise_obstacle_type.car</code> bool flag to consider unknown objects as being cruised <code>cruise_obstacle_type.truck</code> bool flag to consider unknown objects as being cruised ... bool ... <code>stop_obstacle_type.unknown</code> bool flag to consider unknown objects as being stopped ... bool ..."},{"location":"planning/obstacle_cruise_planner/#inside-the-detection-area","title":"Inside the detection area","text":"<p>To calculate obstacles inside the detection area, firstly, obstacles whose distance to the trajectory is less than <code>rough_detection_area_expand_width</code> are selected. Then, the detection area, which is a trajectory with some lateral margin, is calculated as shown in the figure. The detection area width is a vehicle's width + <code>detection_area_expand_width</code>, and it is represented as a polygon resampled with <code>decimate_trajectory_step_length</code> longitudinally. The roughly selected obstacles inside the detection area are considered as inside the detection area.</p> <p></p> <p>This two-step detection is used for calculation efficiency since collision checking of polygons is heavy. Boost.Geometry is used as a library to check collision among polygons.</p> <p>In the <code>obstacle_filtering</code> namespace,</p> Parameter Type Description <code>rough_detection_area_expand_width</code> double rough lateral margin for rough detection area expansion [m] <code>detection_area_expand_width</code> double lateral margin for precise detection area expansion [m] <code>decimate_trajectory_step_length</code> double longitudinal step length to calculate trajectory polygon for collision checking [m]"},{"location":"planning/obstacle_cruise_planner/#far-crossing-vehicles","title":"Far crossing vehicles","text":"<p>Near crossing vehicles (= not far crossing vehicles) are defined as vehicle objects realizing either of following conditions.</p> <ul> <li>whose yaw angle against the nearest trajectory point is greater than <code>crossing_obstacle_traj_angle_threshold</code></li> <li>whose velocity is less than <code>crossing_obstacle_velocity_threshold</code>.</li> </ul> <p>Assuming <code>t_1</code> to be the time for the ego to reach the current crossing obstacle position with the constant velocity motion, and <code>t_2</code> to be the time for the crossing obstacle to go outside the detection area, if the following condition is realized, the crossing vehicle will be ignored.</p>  t_1 - t_2 &gt; \\mathrm{margin\\_for\\_collision\\_time}  <p>In the <code>obstacle_filtering</code> namespace,</p> Parameter Type Description <code>crossing_obstacle_velocity_threshold</code> double velocity threshold to decide crossing obstacle [m/s] <code>crossing_obstacle_traj_angle_threshold</code> double yaw threshold of crossing obstacle against the nearest trajectory point [rad] <code>collision_time_margin</code> double time threshold of collision between obstacle and ego [s]"},{"location":"planning/obstacle_cruise_planner/#near-cut-in-vehicles","title":"Near Cut-in vehicles","text":"<p>Near Cut-in vehicles are defined as vehicle objects</p> <ul> <li>whose predicted path's footprints from the current time to <code>max_prediction_time_for_collision_check</code> overlap with the detection area longer than <code>ego_obstacle_overlap_time_threshold</code>.</li> </ul> <p>In the <code>obstacle_filtering</code> namespace,</p> Parameter Type Description <code>ego_obstacle_overlap_time_threshold</code> double time threshold to decide cut-in obstacle for cruise or stop [s] <code>max_prediction_time_for_collision_check</code> double prediction time to check collision between obstacle and ego [s] <code>outside_obstacle_min_velocity_threshold</code> double minimum velocity threshold of target obstacle for cut-in detection [m/s]"},{"location":"planning/obstacle_cruise_planner/#stop-planning","title":"Stop planning","text":"Parameter Type Description <code>common.min_strong_accel</code> double ego's minimum acceleration to stop [m/ss] <code>common.safe_distance_margin</code> double distance with obstacles for stop [m] <code>common.terminal_safe_distance_margin</code> double terminal_distance with obstacles for stop, which cannot be exceed safe distance margin [m] <p>The role of the stop planning is keeping a safe distance with static vehicle objects or dynamic/static non vehicle objects.</p> <p>The stop planning just inserts the stop point in the trajectory to keep a distance with obstacles inside the detection area. The safe distance is parameterized as <code>common.safe_distance_margin</code>. When it stops at the end of the trajectory, and obstacle is on the same point, the safe distance becomes <code>terminal_safe_distance_margin</code>.</p> <p>When inserting the stop point, the required acceleration for the ego to stop in front of the stop point is calculated. If the acceleration is less than <code>common.min_strong_accel</code>, the stop planning will be cancelled since this package does not assume a strong sudden brake for emergency.</p>"},{"location":"planning/obstacle_cruise_planner/#adaptive-cruise-planning","title":"Adaptive cruise planning","text":"Parameter Type Description <code>common.safe_distance_margin</code> double minimum distance with obstacles for cruise [m] <p>The role of the adaptive cruise planning is keeping a safe distance with dynamic vehicle objects with smoothed velocity transition. This includes not only cruising a front vehicle, but also reacting a cut-in and cut-out vehicle.</p> <p>The safe distance is calculated dynamically based on the Responsibility-Sensitive Safety (RSS) by the following equation.</p>  d_{rss} = v_{ego} t_{idling} + \\frac{1}{2} a_{ego} t_{idling}^2 + \\frac{v_{ego}^2}{2 a_{ego}} - \\frac{v_{obstacle}^2}{2 a_{obstacle}},   d_{rss} = v_{ego} t_{idling} + \\frac{1}{2} a_{ego} t_{idling}^2 + \\frac{v_{ego}^2}{2 a_{ego}} - \\frac{v_{obstacle}^2}{2 a_{obstacle}},  <p>assuming that d_rssd_rss is the calculated safe distance, t_{idling}t_{idling} is the idling time for the ego to detect the front vehicle's deceleration, v_{ego}v_{ego} is the ego's current velocity, v_{obstacle}v_{obstacle} is the front obstacle's current velocity, a_{ego}a_{ego} is the ego's acceleration, and a_{obstacle}a_{obstacle} is the obstacle's acceleration. These values are parameterized as follows. Other common values such as ego's minimum acceleration is defined in <code>common.param.yaml</code>.</p> Parameter Type Description <code>common.idling_time</code> double idling time for the ego to detect the front vehicle starting deceleration [s] <code>common.min_ego_accel_for_rss</code> double ego's acceleration for RSS [m/ss] <code>common.min_object_accel_for_rss</code> double front obstacle's acceleration for RSS [m/ss] <p>The detailed formulation is as follows.</p>  d_{error} = d - d_{rss} \\\\ d_{normalized} = lpf(d_{error} / d_{obstacle}) \\\\ d_{quad, normalized} = sign(d_{normalized}) *d_{normalized}*d_{normalized} \\\\ v_{pid} = pid(d_{quad, normalized}) \\\\ v_{add} = v_{pid} &gt; 0 ? v_{pid}* w_{acc} : v_{pid} \\\\ v_{target} = max(v_{ego} + v_{add}, v_{min, cruise})   d_{error} = d - d_{rss} \\\\ d_{normalized} = lpf(d_{error} / d_{obstacle}) \\\\ d_{quad, normalized} = sign(d_{normalized}) *d_{normalized}*d_{normalized} \\\\ v_{pid} = pid(d_{quad, normalized}) \\\\ v_{add} = v_{pid} &gt; 0 ? v_{pid}* w_{acc} : v_{pid} \\\\ v_{target} = max(v_{ego} + v_{add}, v_{min, cruise})  Variable Description <code>d</code> actual distane to obstacle <code>d_{rss}</code> ideal distance to obstacle based on RSS <code>v_{min, cruise}</code> <code>min_cruise_target_vel</code> <code>w_{acc}</code> <code>output_ratio_during_accel</code> <code>lpf(val)</code> apply low-pass filter to <code>val</code> <code>pid(val)</code> apply pid to <code>val</code>"},{"location":"planning/obstacle_cruise_planner/#implementation","title":"Implementation","text":""},{"location":"planning/obstacle_cruise_planner/#flowchart","title":"Flowchart","text":"<p>Successive functions consist of <code>obstacle_cruise_planner</code> as follows.</p> <p>Various algorithms for stop and cruise planning will be implemented, and one of them is designated depending on the use cases. The core algorithm implementation <code>generateTrajectory</code> depends on the designated algorithm.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#algorithm-selection","title":"Algorithm selection","text":"<p>Currently, only a PID-based planner is supported. Each planner will be explained in the following.</p> Parameter Type Description <code>common.planning_method</code> string cruise and stop planning algorithm, selected from \"pid_base\""},{"location":"planning/obstacle_cruise_planner/#pid-based-planner","title":"PID-based planner","text":""},{"location":"planning/obstacle_cruise_planner/#stop-planning_1","title":"Stop planning","text":"<p>In the <code>pid_based_planner</code> namespace,</p> Parameter Type Description <code>obstacle_velocity_threshold_from_cruise_to_stop</code> double obstacle velocity threshold to be stopped from cruised [m/s] <p>Only one obstacle is targeted for the stop planning. It is the obstacle among obstacle candidates whose velocity is less than <code>obstacle_velocity_threshold_from_cruise_to_stop</code>, and which is the nearest to the ego along the trajectory. A stop point is inserted keeping<code>common.safe_distance_margin</code> distance between the ego and obstacle.</p> <p>Note that, as explained in the stop planning design, a stop planning which requires a strong acceleration (less than <code>common.min_strong_accel</code>) will be canceled.</p>"},{"location":"planning/obstacle_cruise_planner/#adaptive-cruise-planning_1","title":"Adaptive cruise planning","text":"<p>In the <code>pid_based_planner</code> namespace,</p> Parameter Type Description <code>kp</code> double p gain for pid control [-] <code>ki</code> double i gain for pid control [-] <code>kd</code> double d gain for pid control [-] <code>output_ratio_during_accel</code> double The output velocity will be multiplied by the ratio during acceleration to follow the front vehicle. [-] <code>vel_to_acc_weight</code> double target acceleration is target velocity * <code>vel_to_acc_weight</code> [-] <code>min_cruise_target_vel</code> double minimum target velocity during cruise [m/s] <p>In order to keep the safe distance, the target velocity and acceleration is calculated and sent as an external velocity limit to the velocity smoothing package (<code>motion_velocity_smoother</code> by default). The target velocity and acceleration is respectively calculated with the PID controller according to the error between the reference safe distance and the actual distance.</p>"},{"location":"planning/obstacle_cruise_planner/#optimization-based-planner","title":"Optimization-based planner","text":"<p>under construction</p>"},{"location":"planning/obstacle_cruise_planner/#minor-functions","title":"Minor functions","text":""},{"location":"planning/obstacle_cruise_planner/#prioritization-of-behavior-modules-stop-point","title":"Prioritization of behavior module's stop point","text":"<p>When stopping for a pedestrian walking on the crosswalk, the behavior module inserts the zero velocity in the trajectory in front of the crosswalk. Also <code>obstacle_cruise_planner</code>'s stop planning also works, and the ego may not reach the behavior module's stop point since the safe distance defined in <code>obstacle_cruise_planner</code> may be longer than the behavior module's safe distance. To resolve this non-alignment of the stop point between the behavior module and <code>obstacle_cruise_planner</code>, <code>common.min_behavior_stop_margin</code> is defined. In the case of the crosswalk described above, <code>obstacle_cruise_planner</code> inserts the stop point with a distance <code>common.min_behavior_stop_margin</code> at minimum between the ego and obstacle.</p> Parameter Type Description <code>common.min_behavior_stop_margin</code> double minimum stop margin when stopping with the behavior module enabled [m]"},{"location":"planning/obstacle_cruise_planner/#a-function-to-keep-the-closest-stop-obstacle-in-target-obstacles","title":"A function to keep the closest stop obstacle in target obstacles","text":"<p>In order to keep the closest stop obstacle in the target obstacles, we check whether it is disappeared or not from the target obstacles in the <code>checkConsistency</code> function. If the previous closest stop obstacle is remove from the lists, we keep it in the lists for <code>stop_obstacle_hold_time_threshold</code> seconds. Note that if a new stop obstacle appears and the previous closest obstacle removes from the lists, we do not add it to the target obstacles again.</p> Parameter Type Description <code>obstacle_filtering.stop_obstacle_hold_time_threshold</code> double maximum time for holding closest stop obstacle [s]"},{"location":"planning/obstacle_cruise_planner/#visualization-for-debugging","title":"Visualization for debugging","text":""},{"location":"planning/obstacle_cruise_planner/#detection-area","title":"Detection area","text":"<p>Green polygons which is a detection area is visualized by <code>detection_polygons</code> in the <code>~/debug/marker</code> topic.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#collision-point","title":"Collision point","text":"<p>Red point which is a collision point with obstacle is visualized by <code>collision_points</code> in the <code>~/debug/marker</code> topic.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#obstacle-for-cruise","title":"Obstacle for cruise","text":"<p>Yellow sphere which is a obstacle for cruise is visualized by <code>obstacles_to_cruise</code> in the <code>~/debug/marker</code> topic.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#obstacle-for-stop","title":"Obstacle for stop","text":"<p>Red sphere which is a obstacle for stop is visualized by <code>obstacles_to_stop</code> in the <code>~/debug/marker</code> topic.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#obstacle-cruise-wall","title":"Obstacle cruise wall","text":"<p>Yellow wall which means a safe distance to cruise if the ego's front meets the wall is visualized in the <code>~/debug/cruise_wall_marker</code> topic.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#obstacle-stop-wall","title":"Obstacle stop wall","text":"<p>Red wall which means a safe distance to stop if the ego's front meets the wall is visualized in the <code>~/debug/stop_wall_marker</code> topic.</p> <p></p>"},{"location":"planning/obstacle_cruise_planner/#known-limits","title":"Known Limits","text":"<ul> <li>Common<ul> <li>When the obstacle pose or velocity estimation has a delay, the ego sometimes will go close to the front vehicle keeping deceleration.</li> <li>Current implementation only uses predicted objects message for static/dynamic obstacles and does not use pointcloud. Therefore, if object recognition is lost, the ego cannot deal with the lost obstacle.</li> <li>The current predicted paths for obstacle's lane change does not have enough precision for obstacle_cruise_planner. Therefore, we set <code>rough_detection_area</code> a small value.</li> </ul> </li> <li>PID-based planner<ul> <li>The algorithm strongly depends on the velocity smoothing package (<code>motion_velocity_smoother</code> by default) whether or not the ego realizes the designated target speed. If the velocity smoothing package is updated, please take care of the vehicle's behavior as much as possible.</li> </ul> </li> </ul>"},{"location":"planning/obstacle_stop_planner/","title":"Obstacle Stop Planner","text":""},{"location":"planning/obstacle_stop_planner/#overview","title":"Overview","text":"<p><code>obstacle_stop_planner</code> has following modules</p> <ul> <li>Obstacle Stop Planner<ul> <li>inserts a stop point in trajectory when there is a static point cloud on the trajectory.</li> </ul> </li> <li>Slow Down Planner<ul> <li>inserts a deceleration section in trajectory when there is a point cloud near the trajectory.</li> </ul> </li> <li>Adaptive Cruise Controller (ACC)<ul> <li>embeds target velocity in trajectory when there is a dynamic point cloud on the trajectory.</li> </ul> </li> </ul>"},{"location":"planning/obstacle_stop_planner/#input-topics","title":"Input topics","text":"Name Type Description <code>~/input/pointcloud</code> sensor_msgs::PointCloud2 obstacle pointcloud <code>~/input/trajectory</code> autoware_auto_planning_msgs::Trajectory trajectory <code>~/input/vector_map</code> autoware_auto_mapping_msgs::HADMapBin vector map <code>~/input/odometry</code> nav_msgs::Odometry vehicle velocity <code>~/input/dynamic_objects</code> autoware_auto_perception_msgs::PredictedObjects dynamic objects <code>~/input/expand_stop_range</code> tier4_planning_msgs::msg::ExpandStopRange expand stop range"},{"location":"planning/obstacle_stop_planner/#output-topics","title":"Output topics","text":"Name Type Description <code>~output/trajectory</code> autoware_auto_planning_msgs::Trajectory trajectory to be followed <code>~output/stop_reasons</code> tier4_planning_msgs::StopReasonArray reasons that cause the vehicle to stop"},{"location":"planning/obstacle_stop_planner/#common-parameter","title":"Common Parameter","text":"Parameter Type Description <code>enable_slow_down</code> bool enable slow down planner [-] <code>max_velocity</code> double max velocity [m/s] <code>chattering_threshold</code> double even if the obstacle disappears, the stop judgment continues for chattering_threshold [s]"},{"location":"planning/obstacle_stop_planner/#obstacle-stop-planner_1","title":"Obstacle Stop Planner","text":""},{"location":"planning/obstacle_stop_planner/#role","title":"Role","text":"<p>This module inserts the stop point before the obstacle with margin. In nominal case, the margin is the sum of <code>baselink_to_front</code> and <code>max_longitudinal_margin</code>. The <code>baselink_to_front</code> means the distance between <code>baselink</code>(center of rear-wheel axis) and front of the car. The detection area is generated along the processed trajectory as following figure. (This module cut off the input trajectory behind the ego position and decimates the trajectory points for reducing computational costs.)</p> <p> </p> parameters for obstacle stop planner <p> </p> target for obstacle stop planner <p>If another stop point has already been inserted by other modules within <code>max_longitudinal_margin</code>, the margin is the sum of <code>baselink_to_front</code> and <code>min_longitudinal_margin</code>. This feature exists to avoid stopping unnaturally position. (For example, the ego stops unnaturally far away from stop line of crosswalk that pedestrians cross to without this feature.)</p> <p> </p> minimum longitudinal margin <p>The module searches the obstacle pointcloud within detection area. When the pointcloud is found, <code>Adaptive Cruise Controller</code> modules starts to work. only when <code>Adaptive Cruise Controller</code> modules does not insert target velocity, the stop point is inserted to the trajectory. The stop point means the point with 0 velocity.</p>"},{"location":"planning/obstacle_stop_planner/#restart-prevention","title":"Restart prevention","text":"<p>If it needs X meters (e.g. 0.5 meters) to stop once the vehicle starts moving due to the poor vehicle control performance, the vehicle goes over the stopping position that should be strictly observed when the vehicle starts to moving in order to approach the near stop point (e.g. 0.3 meters away).</p> <p>This module has parameter <code>hold_stop_margin_distance</code> in order to prevent from these redundant restart. If the vehicle is stopped within <code>hold_stop_margin_distance</code> meters from stop point of the module, the module judges that the vehicle has already stopped for the module's stop point and plans to keep stopping current position even if the vehicle is stopped due to other factors.</p> <p> </p> parameters <p> </p> outside the hold_stop_margin_distance <p> </p> inside the hold_stop_margin_distance"},{"location":"planning/obstacle_stop_planner/#parameters","title":"Parameters","text":""},{"location":"planning/obstacle_stop_planner/#stop-position","title":"Stop position","text":"Parameter Type Description <code>max_longitudinal_margin</code> double margin between obstacle and the ego's front [m] <code>min_longitudinal_margin</code> double if any obstacle exists within <code>max_longitudinal_margin</code>, this module set margin as the value of stop margin to <code>min_longitudinal_margin</code> [m] <code>hold_stop_margin_distance</code> double parameter for restart prevention (See above section) [m]"},{"location":"planning/obstacle_stop_planner/#obstacle-detection-area","title":"Obstacle detection area","text":"Parameter Type Description <code>lateral_margin</code> double lateral margin from the vehicle footprint for collision obstacle detection area [m] <code>step_length</code> double step length for pointcloud search range [m] <code>extend_distance</code> double extend trajectory to consider after goal obstacle in the extend_distance [m]"},{"location":"planning/obstacle_stop_planner/#flowchart","title":"Flowchart","text":""},{"location":"planning/obstacle_stop_planner/#slow-down-planner","title":"Slow Down Planner","text":""},{"location":"planning/obstacle_stop_planner/#role_1","title":"Role","text":"<p>This module inserts the slow down section before the obstacle with forward margin and backward margin. The forward margin is the sum of <code>baselink_to_front</code> and <code>longitudinal_forward_margin</code>, and the backward margin is the sum of <code>baselink_to_front</code> and <code>longitudinal_backward_margin</code>. The ego keeps slow down velocity in slow down section. The velocity is calculated the following equation.</p> <p>v_{target} = v_{min} + \\frac{l_{ld} - l_{vw}/2}{l_{margin}} (v_{max} - v_{min} )</p> <ul> <li>v_{target}v_{target} : slow down target velocity [m/s]</li> <li>v_{min}v_{min} : <code>min_slow_down_velocity</code> [m/s]</li> <li>v_{max}v_{max} : <code>max_slow_down_velocity</code> [m/s]</li> <li>l_{ld}l_{ld} : lateral deviation between the obstacle and the ego footprint [m]</li> <li>l_{margin}l_{margin} : <code>lateral_margin</code> [m]</li> <li>l_{vw}l_{vw} : width of the ego footprint [m]</li> </ul> <p>The above equation means that the smaller the lateral deviation of the pointcloud, the lower the velocity of the slow down section.</p> <p> </p> parameters for slow down planner <p> </p> target for slow down planner"},{"location":"planning/obstacle_stop_planner/#parameters_1","title":"Parameters","text":""},{"location":"planning/obstacle_stop_planner/#slow-down-section","title":"Slow down section","text":"Parameter Type Description <code>longitudinal_forward_margin</code> double margin between obstacle and the ego's front [m] <code>longitudinal_backward_margin</code> double margin between obstacle and the ego's rear [m]"},{"location":"planning/obstacle_stop_planner/#obstacle-detection-area_1","title":"Obstacle detection area","text":"Parameter Type Description <code>lateral_margin</code> double lateral margin from the vehicle footprint for slow down obstacle detection area [m]"},{"location":"planning/obstacle_stop_planner/#slow-down-target-velocity","title":"Slow down target velocity","text":"Parameter Type Description <code>max_slow_down_velocity</code> double max slow down velocity [m/s] <code>min_slow_down_velocity</code> double min slow down velocity [m/s]"},{"location":"planning/obstacle_stop_planner/#flowchart_1","title":"Flowchart","text":""},{"location":"planning/obstacle_stop_planner/#adaptive-cruise-controller","title":"Adaptive Cruise Controller","text":""},{"location":"planning/obstacle_stop_planner/#role_2","title":"Role","text":"<p><code>Adaptive Cruise Controller</code> module embeds maximum velocity in trajectory when there is a dynamic point cloud on the trajectory. The value of maximum velocity depends on the own velocity, the velocity of the point cloud ( = velocity of the front car), and the distance to the point cloud (= distance to the front car).</p> Parameter Type Description <code>adaptive_cruise_control.use_object_to_estimate_vel</code> bool use dynamic objects for estimating object velocity or not <code>adaptive_cruise_control.use_pcl_to_estimate_vel</code> bool use raw pointclouds for estimating object velocity or not <code>adaptive_cruise_control.consider_obj_velocity</code> bool consider forward vehicle velocity to calculate target velocity in adaptive cruise or not <code>adaptive_cruise_control.obstacle_velocity_thresh_to_start_acc</code> double start adaptive cruise control when the velocity of the forward obstacle exceeds this value [m/s] <code>adaptive_cruise_control.obstacle_velocity_thresh_to_stop_acc</code> double stop acc when the velocity of the forward obstacle falls below this value [m/s] <code>adaptive_cruise_control.emergency_stop_acceleration</code> double supposed minimum acceleration (deceleration) in emergency stop [m/ss] <code>adaptive_cruise_control.emergency_stop_idling_time</code> double supposed idling time to start emergency stop [s] <code>adaptive_cruise_control.min_dist_stop</code> double minimum distance of emergency stop [m] <code>adaptive_cruise_control.obstacle_emergency_stop_acceleration</code> double supposed minimum acceleration (deceleration) in emergency stop [m/ss] <code>adaptive_cruise_control.max_standard_acceleration</code> double supposed maximum acceleration in active cruise control [m/ss] <code>adaptive_cruise_control.min_standard_acceleration</code> double supposed minimum acceleration (deceleration) in active cruise control [m/ss] <code>adaptive_cruise_control.standard_idling_time</code> double supposed idling time to react object in active cruise control [s] <code>adaptive_cruise_control.min_dist_standard</code> double minimum distance in active cruise control [m] <code>adaptive_cruise_control.obstacle_min_standard_acceleration</code> double supposed minimum acceleration of forward obstacle [m/ss] <code>adaptive_cruise_control.margin_rate_to_change_vel</code> double rate of margin distance to insert target velocity [-] <code>adaptive_cruise_control.use_time_compensation_to_calc_distance</code> bool use time-compensation to calculate distance to forward vehicle <code>adaptive_cruise_control.p_coefficient_positive</code> double coefficient P in PID control (used when target dist -current_dist &gt;=0) [-] <code>adaptive_cruise_control.p_coefficient_negative</code> double coefficient P in PID control (used when target dist -current_dist &lt;0) [-] <code>adaptive_cruise_control.d_coefficient_positive</code> double coefficient D in PID control (used when delta_dist &gt;=0) [-] <code>adaptive_cruise_control.d_coefficient_negative</code> double coefficient D in PID control (used when delta_dist &lt;0) [-] <code>adaptive_cruise_control.object_polygon_length_margin</code> double The distance to extend the polygon length the object in pointcloud-object matching [m] <code>adaptive_cruise_control.object_polygon_width_margin</code> double The distance to extend the polygon width the object in pointcloud-object matching [m] <code>adaptive_cruise_control.valid_estimated_vel_diff_time</code> double Maximum time difference treated as continuous points in speed estimation using a point cloud [s] <code>adaptive_cruise_control.valid_vel_que_time</code> double Time width of information used for speed estimation in speed estimation using a point cloud [s] <code>adaptive_cruise_control.valid_estimated_vel_max</code> double Maximum value of valid speed estimation results in speed estimation using a point cloud [m/s] <code>adaptive_cruise_control.valid_estimated_vel_min</code> double Minimum value of valid speed estimation results in speed estimation using a point cloud [m/s] <code>adaptive_cruise_control.thresh_vel_to_stop</code> double Embed a stop line if the maximum speed calculated by ACC is lower than this speed [m/s] <code>adaptive_cruise_control.lowpass_gain_of_upper_velocity</code> double Lowpass-gain of target velocity <code>adaptive_cruise_control.use_rough_velocity_estimation:</code> bool Use rough estimated velocity if the velocity estimation is failed <code>adaptive_cruise_control.rough_velocity_rate</code> double In the rough velocity estimation, the velocity of front car is estimated as self current velocity * this value"},{"location":"planning/obstacle_stop_planner/#flowchart_2","title":"Flowchart","text":"<p>(*1) The target vehicle point is calculated as a closest obstacle PointCloud from ego along the trajectory.</p> <p>(*2) The sources of velocity estimation can be changed by the following ROS parameters.</p> <ul> <li><code>adaptive_cruise_control.use_object_to_estimate_vel</code></li> <li><code>adaptive_cruise_control.use_pcl_to_estimate_vel</code></li> </ul> <p>This module works only when the target point is found in the detection area of the <code>Obstacle stop planner</code> module.</p> <p>The first process of this module is to estimate the velocity of the target vehicle point. The velocity estimation uses the velocity information of dynamic objects or the travel distance of the target vehicle point from the previous step. The dynamic object information is primal, and the travel distance estimation is used as a backup in case of the perception failure. If the target vehicle point is contained in the bounding box of a dynamic object geometrically, the velocity of the dynamic object is used as the target point velocity. Otherwise, the target point velocity is calculated by the travel distance of the target point from the previous step; that is <code>(current_position - previous_position) / dt</code>. Note that this travel distance based estimation fails when the target point is detected in the first time (it mainly happens in the cut-in situation). To improve the stability of the estimation, the median of the calculation result for several steps is used.</p> <p>If the calculated velocity is within the threshold range, it is used as the target point velocity.</p> <p>Only when the estimation is succeeded and the estimated velocity exceeds the value of <code>obstacle_stop_velocity_thresh_*</code>, the distance to the pointcloud from self-position is calculated. For prevent chattering in the mode transition, <code>obstacle_velocity_thresh_to_start_acc</code> is used for the threshold to start adaptive cruise, and <code>obstacle_velocity_thresh_to_stop_acc</code> is used for the threshold to stop adaptive cruise. When the calculated distance value exceeds the emergency distance d\\_{emergency}d\\_{emergency} calculated by emergency_stop parameters, target velocity to insert is calculated.</p> <p>The emergency distance d\\_{emergency}d\\_{emergency} is calculated as follows.</p> <p>d_{emergency} = d_{margin_{emergency}} + t_{idling_{emergency}} \\cdot v_{ego} + (-\\frac{v_{ego}^2}{2 \\cdot  a_{ego_{emergency}}}) - (-\\frac{v_{obj}^2}{2 \\cdot a_{obj_{emergency}}})d_{emergency} = d_{margin_{emergency}} + t_{idling_{emergency}} \\cdot v_{ego} + (-\\frac{v_{ego}^2}{2 \\cdot  a_{ego_{emergency}}}) - (-\\frac{v_{obj}^2}{2 \\cdot a_{obj_{emergency}}})</p> <ul> <li>d_{margin_{emergency}}d_{margin_{emergency}} is a minimum margin to the obstacle pointcloud. The value of d_{margin_{emergency}}d_{margin_{emergency}} depends on the parameter <code>min_dist_stop</code></li> <li>t_{idling_{emergency}}t_{idling_{emergency}} is a supposed idling time. The value of t_{idling_{emergency}}t_{idling_{emergency}} depends on the parameter <code>emergency_stop_idling_time</code></li> <li>v_{ego}v_{ego} is a current velocity of own vehicle</li> <li>a_{ego_{_{emergency}}}a_{ego_{_{emergency}}} is a minimum acceleration (maximum deceleration) of own vehicle. The value of a_{ego_{_{emergency}}}a_{ego_{_{emergency}}} depends on the parameter <code>emergency_stop_acceleration</code></li> <li>v_{obj}v_{obj} is a current velocity of obstacle pointcloud.</li> <li>a_{obj_{_{emergency}}}a_{obj_{_{emergency}}} is a supposed minimum acceleration of obstacle pointcloud. The value of a_{obj_{_{emergency}}}a_{obj_{_{emergency}}} depends on the parameter <code>obstacle_emergency_stop_acceleration</code></li> <li>*Above X_{_{emergency}}X_{_{emergency}} parameters are used only in emergency situation.</li> </ul> <p>The target velocity is determined to keep the distance to the obstacle pointcloud from own vehicle at the standard distance d\\_{standard}d\\_{standard} calculated as following. Therefore, if the distance to the obstacle pointcloud is longer than standard distance, The target velocity becomes higher than the current velocity, and vice versa. For keeping the distance, a PID controller is used.</p> <p>d_{standard} = d_{margin_{standard}} + t_{idling_{standard}} \\cdot v_{ego} + (-\\frac{v_{ego}^2}{2 \\cdot  a_{ego_{standard}}}) - (-\\frac{v_{obj}^2}{2 \\cdot a_{obj_{standard}}})d_{standard} = d_{margin_{standard}} + t_{idling_{standard}} \\cdot v_{ego} + (-\\frac{v_{ego}^2}{2 \\cdot  a_{ego_{standard}}}) - (-\\frac{v_{obj}^2}{2 \\cdot a_{obj_{standard}}})</p> <ul> <li>d_{margin_{standard}}d_{margin_{standard}} is a minimum margin to the obstacle pointcloud. The value of d_{margin_{standard}}d_{margin_{standard}} depends on the parameter <code>min_dist_stop</code></li> <li>t_{idling_{standard}}t_{idling_{standard}} is a supposed idling time. The value of t_{idling_{standard}}t_{idling_{standard}} depends on the parameter <code>standard_stop_idling_time</code></li> <li>v_{ego}v_{ego} is a current velocity of own vehicle</li> <li>a_{ego_{_{standard}}}a_{ego_{_{standard}}} is a minimum acceleration (maximum deceleration) of own vehicle. The value of a_{ego_{_{standard}}}a_{ego_{_{standard}}} depends on the parameter <code>min_standard_acceleration</code></li> <li>v_{obj}v_{obj} is a current velocity of obstacle pointcloud.</li> <li>a_{obj_{_{standard}}}a_{obj_{_{standard}}} is a supposed minimum acceleration of obstacle pointcloud. The value of a_{obj_{_{standard}}}a_{obj_{_{standard}}} depends on the parameter <code>obstacle_min_standard_acceleration</code></li> <li>*Above X_{_{standard}}X_{_{standard}} parameters are used only in non-emergency situation.</li> </ul> <p></p> <p>If the target velocity exceeds the value of <code>thresh_vel_to_stop</code>, the target velocity is embedded in the trajectory.</p>"},{"location":"planning/obstacle_stop_planner/#known-limits","title":"Known Limits","text":"<ul> <li>It is strongly depends on velocity planning module whether or not it moves according to the target speed embedded by <code>Adaptive Cruise Controller</code> module. If the velocity planning module is updated, please take care of the vehicle's behavior as much as possible and always be ready for overriding.</li> </ul> <ul> <li>The velocity estimation algorithm in <code>Adaptive Cruise Controller</code> is depend on object tracking module. Please note that if the object-tracking fails or the tracking result is incorrect, it the possibility that the vehicle behaves dangerously.</li> </ul> <ul> <li>It does not work for backward driving, but publishes the path of the input as it is. Please use obstacle_cruise_planner if you want to stop against an obstacle when backward driving.</li> </ul>"},{"location":"planning/obstacle_velocity_limiter/","title":"Obstacle Velocity Limiter","text":""},{"location":"planning/obstacle_velocity_limiter/#purpose","title":"Purpose","text":"<p>This node limits the velocity when driving in the direction of an obstacle. For example, it allows to reduce the velocity when driving close to a guard rail in a curve.</p> Without this node With this node"},{"location":"planning/obstacle_velocity_limiter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Using a parameter <code>min_ttc</code> (minimum time to collision), the node set velocity limits such that no collision with an obstacle would occur, even without new control inputs for a duration of <code>min_ttc</code>.</p> <p>To achieve this, the motion of the ego vehicle is simulated forward in time at each point of the trajectory to create a corresponding footprint. If the footprint collides with some obstacle, the velocity at the trajectory point is reduced such that the new simulated footprint do not have any collision.</p>"},{"location":"planning/obstacle_velocity_limiter/#simulated-motion-footprint-and-collision-distance","title":"Simulated Motion, Footprint, and Collision Distance","text":"<p>The motion of the ego vehicle is simulated at each trajectory point using the <code>heading</code>, <code>velocity</code>, and <code>steering</code> defined at the point. Footprints are then constructed from these simulations and checked for collision. If a collision is found, the distance from the trajectory point is used to calculate the adjusted velocity that would produce a collision-free footprint. Parameter <code>simulation.distance_method</code> allow to switch between an exact distance calculation and a less expensive approximation using a simple euclidian distance.</p> <p>Two models can be selected with parameter <code>simulation.model</code> for simulating the motion of the vehicle: a simple particle model and a more complicated bicycle model.</p>"},{"location":"planning/obstacle_velocity_limiter/#particle-model","title":"Particle Model","text":"<p>The particle model uses the constant heading and velocity of the vehicle at a trajectory point to simulate the future motion. The simulated forward motion corresponds to a straight line and the footprint to a rectangle.</p>"},{"location":"planning/obstacle_velocity_limiter/#footprint","title":"Footprint","text":"<p>The rectangle footprint is built from 2 lines parallel to the simulated forward motion and at a distance of half the vehicle width.</p> <p></p>"},{"location":"planning/obstacle_velocity_limiter/#distance","title":"Distance","text":"<p>When a collision point is found within the footprint, the distance is calculated as described in the following figure.</p> <p></p>"},{"location":"planning/obstacle_velocity_limiter/#bicycle-model","title":"Bicycle Model","text":"<p>The bicycle model uses the constant heading, velocity, and steering of the vehicle at a trajectory point to simulate the future motion. The simulated forward motion corresponds to an arc around the circle of curvature associated with the steering. Uncertainty in the steering can be introduced with the <code>simulation.steering_offset</code> parameter which will generate a range of motion from a left-most to a right-most steering. This results in 3 curved lines starting from the same trajectory point. A parameter <code>simulation.nb_points</code> is used to adjust the precision of these lines, with a minimum of <code>2</code> resulting in straight lines and higher values increasing the precision of the curves.</p> <p>By default, the steering values contained in the trajectory message are used. Parameter <code>trajectory_preprocessing.calculate_steering_angles</code> allows to recalculate these values when set to <code>true</code>.</p>"},{"location":"planning/obstacle_velocity_limiter/#footprint_1","title":"Footprint","text":"<p>The footprint of the bicycle model is created from lines parallel to the left and right simulated motion at a distance of half the vehicle width. In addition, the two points on the left and right of the end point of the central simulated motion are used to complete the polygon.</p> <p></p>"},{"location":"planning/obstacle_velocity_limiter/#distance_1","title":"Distance","text":"<p>The distance to a collision point is calculated by finding the curvature circle passing through the trajectory point and the collision point.</p> <p></p>"},{"location":"planning/obstacle_velocity_limiter/#obstacle-detection","title":"Obstacle Detection","text":"<p>Obstacles are represented as points or linestrings (i.e., sequence of points) around the obstacles and are constructed from an occupancy grid, a pointcloud, or the lanelet map. The lanelet map is always checked for obstacles but the other source is switched using parameter <code>obstacles.dynamic_source</code>.</p> <p>To efficiently find obstacles intersecting with a footprint, they are stored in a R-tree. Two trees are used, one for the obstacle points, and one for the obstacle linestrings (which are decomposed into segments to simplify the R-tree).</p>"},{"location":"planning/obstacle_velocity_limiter/#obstacle-masks","title":"Obstacle masks","text":""},{"location":"planning/obstacle_velocity_limiter/#dynamic-obstacles","title":"Dynamic obstacles","text":"<p>Moving obstacles such as other cars should not be considered by this module. These obstacles are detected by the perception modules and represented as polygons. Obstacles inside these polygons are ignored.</p> <p>Only dynamic obstacles with a velocity above parameter <code>obstacles.dynamic_obstacles_min_vel</code> are removed.</p> <p>To deal with delays and precision errors, the polygons can be enlarged with parameter <code>obstacles.dynamic_obstacles_buffer</code>.</p>"},{"location":"planning/obstacle_velocity_limiter/#obstacles-outside-of-the-safety-envelope","title":"Obstacles outside of the safety envelope","text":"<p>Obstacles that are not inside any forward simulated footprint are ignored if parameter <code>obstacles.filter_envelope</code> is set to true. The safety envelope polygon is built from all the footprints and used as a positive mask on the occupancy grid or pointcloud.</p> <p>This option can reduce the total number of obstacles which reduces the cost of collision detection. However, the cost of masking the envelope is usually too high to be interesting.</p>"},{"location":"planning/obstacle_velocity_limiter/#obstacles-on-the-ego-path","title":"Obstacles on the ego path","text":"<p>If parameter <code>obstacles.ignore_obstacles_on_path</code> is set to <code>true</code>, a polygon mask is built from the trajectory and the vehicle dimension. Any obstacle in this polygon is ignored.</p> <p>The size of the polygon can be increased using parameter <code>obstacles.ignore_extra_distance</code> which is added to the vehicle lateral offset.</p> <p>This option is a bit expensive and should only be used in case of noisy dynamic obstacles where obstacles are wrongly detected on the ego path, causing unwanted velocity limits.</p>"},{"location":"planning/obstacle_velocity_limiter/#lanelet-map","title":"Lanelet Map","text":"<p>Information about static obstacles can be stored in the Lanelet map using the value of the <code>type</code> tag of linestrings. If any linestring has a <code>type</code> with one of the value from parameter <code>obstacles.static_map_tags</code>, then it will be used as an obstacle.</p> <p>Obstacles from the lanelet map are not impacted by the masks.</p>"},{"location":"planning/obstacle_velocity_limiter/#occupancy-grid","title":"Occupancy Grid","text":"<p>Masking is performed by iterating through the cells inside each polygon mask using the <code>grid_map_utils::PolygonIterator</code> function. A threshold is then applied to only keep cells with an occupancy value above parameter <code>obstacles.occupancy_grid_threshold</code>. Finally, the image is converted to an image and obstacle linestrings are extracted using the opencv function <code>findContour</code>.</p>"},{"location":"planning/obstacle_velocity_limiter/#pointcloud","title":"Pointcloud","text":"<p>Masking is performed using the <code>pcl::CropHull</code> function. Points from the pointcloud are then directly used as obstacles.</p>"},{"location":"planning/obstacle_velocity_limiter/#velocity-adjustment","title":"Velocity Adjustment","text":"<p>If a collision is found, the velocity at the trajectory point is adjusted such that the resulting footprint would no longer collide with an obstacle: velocity = \\frac{dist\\_to\\_collision}{min\\_ttc}</p> <p>To prevent sudden deceleration of the ego vehicle, the parameter <code>max_deceleration</code> limits the deceleration relative to the current ego velocity. For a trajectory point occuring at a duration <code>t</code> in the future (calculated from the original velocity profile), the adjusted velocity cannot be set lower than v_{current} - t * max\\_decelerationv_{current} - t * max\\_deceleration.</p> <p>Furthermore, a parameter <code>min_adjusted_velocity</code> provides a lower bound on the modified velocity.</p>"},{"location":"planning/obstacle_velocity_limiter/#trajectory-preprocessing","title":"Trajectory preprocessing","text":"<p>The node only modifies part of the input trajectory, starting from the current ego position. Parameter <code>trajectory_preprocessing.start_distance</code> is used to adjust how far ahead of the ego position the velocities will start being modified. Parameters <code>trajectory_preprocessing.max_length</code> and <code>trajectory_preprocessing.max_duration</code> are used to control how much of the trajectory will see its velocity adjusted.</p> <p>To reduce computation cost at the cost of precision, the trajectory can be downsampled using parameter <code>trajectory_preprocessing.downsample_factor</code>. For example a value of <code>1</code> means all trajectory points will be evaluated while a value of <code>10</code> means only 1/10th of the points will be evaluated.</p>"},{"location":"planning/obstacle_velocity_limiter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/obstacle_velocity_limiter/#inputs","title":"Inputs","text":"Name Type Description <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Reference trajectory <code>~/input/occupancy_grid</code> <code>nav_msgs/OccupancyGrid</code> Occupancy grid with obstacle information <code>~/input/obstacle_pointcloud</code> <code>sensor_msgs/PointCloud2</code> Pointcloud containing only obstacle points <code>~/input/dynamic_obstacles</code> <code>autoware_auto_perception_msgs/PredictedObjects</code> Dynamic objects <code>~/input/odometry</code> <code>nav_msgs/Odometry</code> Odometry used to retrieve the current ego velocity <code>~/input/map</code> <code>autoware_auto_mapping_msgs/HADMapBin</code> Vector map used to retrieve static obstacles"},{"location":"planning/obstacle_velocity_limiter/#outputs","title":"Outputs","text":"Name Type Description <code>~/output/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Trajectory with adjusted velocities <code>~/output/debug_markers</code> <code>visualization_msgs/MarkerArray</code> Debug markers (envelopes, obstacle polygons) <code>~/output/runtime_microseconds</code> <code>std_msgs/Int64</code> Time taken to calculate the trajectory (in microseconds)"},{"location":"planning/obstacle_velocity_limiter/#parameters","title":"Parameters","text":"Name Type Description <code>min_ttc</code> float [s] required minimum time with no collision at each point of the trajectory assuming constant heading and velocity. <code>distance_buffer</code> float [m] required distance buffer with the obstacles. <code>min_adjusted_velocity</code> float [m/s] minimum adjusted velocity this node can set. <code>max_deceleration</code> float [m/s\u00b2] maximum deceleration an adjusted velocity can cause. <code>trajectory_preprocessing.start_distance</code> float [m] controls from which part of the trajectory (relative to the current ego pose) the velocity is adjusted. <code>trajectory_preprocessing.max_length</code> float [m] controls the maximum length (starting from the <code>start_distance</code>) where the velocity is adjusted. <code>trajectory_preprocessing.max_distance</code> float [s] controls the maximum duration (measured from the <code>start_distance</code>) where the velocity is adjusted. <code>trajectory_preprocessing.downsample_factor</code> int trajectory downsampling factor to allow tradeoff between precision and performance. <code>trajectory_preprocessing.calculate_steering_angle</code> bool if true, the steering angles of the trajectory message are not used but are recalculated. <code>simulation.model</code> string model to use for forward simulation. Either \"particle\" or \"bicycle\". <code>simulation.distance_method</code> string method to use for calculating distance to collision. Either \"exact\" or \"approximation\". <code>simulation.steering_offset</code> float offset around the steering used by the bicycle model. <code>simulation.nb_points</code> int number of points used to simulate motion with the bicycle model. <code>obstacles.dynamic_source</code> string source of dynamic obstacle used for collision checking. Can be \"occupancy_grid\", \"point_cloud\", or \"static_only\" (no dynamic obstacle). <code>obstacles.occupancy_grid_threshold</code> int value in the occupancy grid above which a cell is considered an obstacle. <code>obstacles.dynamic_obstacles_buffer</code> float buffer around dynamic obstacles used when masking an obstacle in order to prevent noise. <code>obstacles.dynamic_obstacles_min_vel</code> float velocity above which to mask a dynamic obstacle. <code>obstacles.static_map_tags</code> string list linestring of the lanelet map with this tags are used as obstacles. <code>obstacles.filter_envelope</code> bool wether to use the safety envelope to filter the dynamic obstacles source."},{"location":"planning/obstacle_velocity_limiter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>The velocity profile produced by this node is not meant to be a realistic velocity profile and can contain sudden jumps of velocity with no regard for acceleration and jerk. This velocity profile is meant to be used as an upper bound on the actual velocity of the vehicle.</p>"},{"location":"planning/obstacle_velocity_limiter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":"<p>The critical case for this node is when an obstacle is falsely detected very close to the trajectory such that the corresponding velocity suddenly becomes very low. This can cause a sudden brake and two mechanisms can be used to mitigate these errors.</p> <p>Parameter <code>min_adjusted_velocity</code> allow to set a minimum to the adjusted velocity, preventing the node to slow down the vehicle too much. Parameter <code>max_deceleration</code> allow to set a maximum deceleration (relative to the current ego velocity) that the adjusted velocity would incur.</p>"},{"location":"planning/obstacle_velocity_limiter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"planning/obstacle_velocity_limiter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"planning/obstacle_velocity_limiter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"planning/planning_debug_tools/Readme/","title":"Planning Debug Tools","text":"<p>This package contains several planning-related debug tools.</p> <ul> <li>Trajectory analyzer: visualizes the information (speed, curvature, yaw, etc) along the trajectory</li> <li>Closest velocity checker: prints the velocity information indicated by each modules</li> </ul>"},{"location":"planning/planning_debug_tools/Readme/#trajectory-analyzer","title":"Trajectory analyzer","text":"<p>The <code>trajectory_analyzer</code> visualizes the information (speed, curvature, yaw, etc) along the trajectory. This feature would be helpful for purposes such as \"investigating the reason why the vehicle decelerates here\". This feature employs the OSS PlotJuggler.</p> <p></p>"},{"location":"planning/planning_debug_tools/Readme/#stop-reason-visualizer","title":"Stop reason visualizer","text":"<p>This is to visualize stop factor and reason. see the details</p>"},{"location":"planning/planning_debug_tools/Readme/#how-to-use","title":"How to use","text":"<p>please launch the analyzer node</p> <pre><code>ros2 launch planning_debug_tools trajectory_analyzer.launch.xml\n</code></pre> <p>and visualize the analyzed data on the plot juggler following below.</p>"},{"location":"planning/planning_debug_tools/Readme/#setup-plotjuggler","title":"setup PlotJuggler","text":"<p>For the first time, please add the following code to reactive script and save it as the picture below! (Looking for the way to automatically load the configuration file...)</p> <p>You can customize what you plot by editing this code.</p> <p></p> <p>in Global code</p> <pre><code>behavior_path = '/planning/scenario_planning/lane_driving/behavior_planning/path_with_lane_id/debug_info'\nbehavior_velocity = '/planning/scenario_planning/lane_driving/behavior_planning/path/debug_info'\nmotion_avoid = '/planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/trajectory/debug_info'\nmotion_smoother_latacc = '/planning/scenario_planning/motion_velocity_smoother/debug/trajectory_lateral_acc_filtered/debug_info'\nmotion_smoother = '/planning/scenario_planning/trajectory/debug_info'\n</code></pre> <p>in function(tracker_time)</p> <pre><code>PlotCurvatureOverArclength('k_behavior_path', behavior_path, tracker_time)\nPlotCurvatureOverArclength('k_behavior_velocity', behavior_velocity, tracker_time)\nPlotCurvatureOverArclength('k_motion_avoid', motion_avoid, tracker_time)\nPlotCurvatureOverArclength('k_motion_smoother', motion_smoother, tracker_time)\n\nPlotVelocityOverArclength('v_behavior_path', behavior_path, tracker_time)\nPlotVelocityOverArclength('v_behavior_velocity', behavior_velocity, tracker_time)\nPlotVelocityOverArclength('v_motion_avoid', motion_avoid, tracker_time)\nPlotVelocityOverArclength('v_motion_smoother_latacc', motion_smoother_latacc, tracker_time)\nPlotVelocityOverArclength('v_motion_smoother', motion_smoother, tracker_time)\n\nPlotAccelerationOverArclength('a_behavior_path', behavior_path, tracker_time)\nPlotAccelerationOverArclength('a_behavior_velocity', behavior_velocity, tracker_time)\nPlotAccelerationOverArclength('a_motion_avoid', motion_avoid, tracker_time)\nPlotAccelerationOverArclength('a_motion_smoother_latacc', motion_smoother_latacc, tracker_time)\nPlotAccelerationOverArclength('a_motion_smoother', motion_smoother, tracker_time)\n\nPlotYawOverArclength('yaw_behavior_path', behavior_path, tracker_time)\nPlotYawOverArclength('yaw_behavior_velocity', behavior_velocity, tracker_time)\nPlotYawOverArclength('yaw_motion_avoid', motion_avoid, tracker_time)\nPlotYawOverArclength('yaw_motion_smoother_latacc', motion_smoother_latacc, tracker_time)\nPlotYawOverArclength('yaw_motion_smoother', motion_smoother, tracker_time)\n\nPlotCurrentVelocity('localization_kinematic_state', '/localization/kinematic_state', tracker_time)\n</code></pre> <p>in Function Library </p> <pre><code>function PlotValue(name, path, timestamp, value)\n  new_series = ScatterXY.new(name)\n  index = 0\n  while(true) do\n    series_k = TimeseriesView.find( string.format( \"%s/\"..value..\".%d\", path, index) )\n    series_s = TimeseriesView.find( string.format( \"%s/arclength.%d\", path, index) )\n    series_size = TimeseriesView.find( string.format( \"%s/size\", path) )\n\n    if series_k == nil or series_s == nil then break end\n\n    k = series_k:atTime(timestamp)\n    s = series_s:atTime(timestamp)\n    size = series_size:atTime(timestamp)\n\n    if index &gt;= size then break end\n\n    new_series:push_back(s,k)\n    index = index+1\n  end\nend\n\nfunction PlotCurvatureOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"curvature\")\nend\n\nfunction PlotVelocityOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"velocity\")\nend\n\nfunction PlotAccelerationOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"acceleration\")\nend\n\nfunction PlotYawOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"yaw\")\nend\n\nfunction PlotCurrentVelocity(name, kinematics_name, timestamp)\n  new_series = ScatterXY.new(name)\n  series_v = TimeseriesView.find( string.format( \"%s/twist/twist/linear/x\", kinematics_name))\n  if series_v == nil then\n    print(\"error\")\n    return\n  end\n  v = series_v:atTime(timestamp)\n  new_series:push_back(0.0, v)\nend\n</code></pre> <p>Then, run the plot juggler.</p>"},{"location":"planning/planning_debug_tools/Readme/#how-to-customize-the-plot","title":"How to customize the plot","text":"<p>Add Path/PathWithLaneIds/Trajectory topics you want to plot in the <code>trajectory_analyzer.launch.xml</code>, then the analyzed topics for these messages will be published with <code>TrajectoryDebugINfo.msg</code> type. You can then visualize these data by editing the reactive script on the PlotJuggler.</p>"},{"location":"planning/planning_debug_tools/Readme/#requirements","title":"Requirements","text":"<p>The version of the plotJuggler must be &gt; <code>3.5.0</code></p>"},{"location":"planning/planning_debug_tools/Readme/#closest-velocity-checker","title":"Closest velocity checker","text":"<p>This node prints the velocity information indicated by planning/control modules on a terminal. For trajectories calculated by planning modules, the target velocity on the trajectory point which is closest to the ego vehicle is printed. For control commands calculated by control modules, the target velocity and acceleration is directly printed. This feature would be helpful for purposes such as \"investigating the reason why the vehicle does not move\".</p> <p>You can launch by</p> <pre><code>ros2 run planning_debug_tools closest_velocity_checker.py\n</code></pre> <p></p>"},{"location":"planning/planning_debug_tools/Readme/#trajectory-visualizer","title":"Trajectory visualizer","text":"<p>The old version of the trajectory analyzer. It is written in Python and more flexible, but very slow.</p>"},{"location":"planning/planning_debug_tools/Readme/#for-other-use-case-experimental","title":"For other use case (experimental)","text":"<p>To see behavior velocity planner's internal plath with lane id add below example value to behavior velocity analyzer and set <code>is_publish_debug_path: true</code></p> <pre><code>crosswalk ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/crosswalk/debug_info'\nintersection ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/intersection/debug_info'\ntraffic_light ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/traffic_light/debug_info'\nmerge_from_private ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/merge_from_private/debug_info'\nocclusion_spot ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/occlusion_spot/debug_info'\n</code></pre> <pre><code>PlotVelocityOverArclength('v_crosswalk', crosswalk, tracker_time)\nPlotVelocityOverArclength('v_intersection', intersection, tracker_time)\nPlotVelocityOverArclength('v_merge_from_private', merge_from_private, tracker_time)\nPlotVelocityOverArclength('v_traffic_light', traffic_light, tracker_time)\nPlotVelocityOverArclength('v_occlusion', occlusion_spot, tracker_time)\n\nPlotYawOverArclength('yaw_crosswalk', crosswalk, tracker_time)\nPlotYawOverArclength('yaw_intersection', intersection, tracker_time)\nPlotYawOverArclength('yaw_merge_from_private', merge_from_private, tracker_time)\nPlotYawOverArclength('yaw_traffic_light', traffic_light, tracker_time)\nPlotYawOverArclength('yaw_occlusion', occlusion_spot, tracker_time)\n\nPlotCurrentVelocity('localization_kinematic_state', '/localization/kinematic_state', tracker_time)\n</code></pre>"},{"location":"planning/planning_debug_tools/doc-stop-reason-visualizer/","title":"Doc stop reason visualizer","text":""},{"location":"planning/planning_debug_tools/doc-stop-reason-visualizer/#stop_reason_visualizer","title":"stop_reason_visualizer","text":"<p>This module is to visualize stop factor quickly without selecting correct debug markers. This is supposed to use with virtual wall marker like below. </p>"},{"location":"planning/planning_debug_tools/doc-stop-reason-visualizer/#how-to-use","title":"How to use","text":"<p>Run this node.</p> <pre><code>ros2 run planning_debug_tools stop_reason_visualizer_exe\n</code></pre> <p>Add stop reason debug marker from rviz.</p> <p></p> <p>Note: ros2 process can be sometimes deleted only from <code>killall stop_reason_visualizer_exe</code></p> <p>Reference</p>"},{"location":"planning/planning_error_monitor/","title":"Planning Error Monitor","text":""},{"location":"planning/planning_error_monitor/#purpose","title":"Purpose","text":"<p><code>planning_error_monitor</code> checks a trajectory that if it has any invalid numerical values in its positions, twist and accel values. In addition, it also checks the distance between any two consecutive points and curvature value at a certain point. This package basically monitors if a trajectory, which is generated by planning module, has any unexpected errors.</p>"},{"location":"planning/planning_error_monitor/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/planning_error_monitor/#point-value-checker-ontrajectorypointvaluechecker","title":"Point Value Checker (onTrajectoryPointValueChecker)","text":"<p>This function checks position, twist and accel values of all points on a trajectory. If they have <code>Nan</code> or <code>Infinity</code>, this function outputs error status.</p>"},{"location":"planning/planning_error_monitor/#interval-checker-ontrajectoryintervalchecker","title":"Interval Checker (onTrajectoryIntervalChecker)","text":"<p>This function computes interval distance between two consecutive points, and will output error messages if the distance is over the <code>interval_threshold</code>.</p>"},{"location":"planning/planning_error_monitor/#curvature-checker-ontrajectorycurvaturechecker","title":"Curvature Checker (onTrajectoryCurvatureChecker)","text":"<p>This function checks if the curvature at each point on a trajectory has an appropriate value. Calculation details are described in the following picture. First, we choose one point(green point in the picture) that are 1.0[m] behind the current point. Then we get a point(blue point in the picture) 1.0[m] ahead of the current point. Using these three points, we calculate the curvature by this method.</p>"},{"location":"planning/planning_error_monitor/#relative-angle-checker-ontrajectoryrelativeanglechecker","title":"Relative Angle Checker (onTrajectoryRelativeAngleChecker)","text":"<p>This function checks if the relative angle at point1 generated from point2 and 3 on a trajectory has an appropriate value.</p> <p></p>"},{"location":"planning/planning_error_monitor/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/planning_error_monitor/#input","title":"Input","text":"Name Type Description <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs/Trajectory</code> Planned Trajectory by planning modules"},{"location":"planning/planning_error_monitor/#output","title":"Output","text":"Name Type Description <code>/diagnostics</code> <code>diagnostic_msgs/DiagnosticArray</code> diagnostics outputs <code>~/debug/marker</code> <code>visualization_msgs/MarkerArray</code> visualization markers"},{"location":"planning/planning_error_monitor/#parameters","title":"Parameters","text":"Name Type Description Default value <code>error_interval</code> <code>double</code> Error Interval Distance Threshold [m] 100.0 <code>error_curvature</code> <code>double</code> Error Curvature Threshold 1.0 <code>error_sharp_angle</code> <code>double</code> Error Sharp Angle Threshold \\pi/4 <code>ignore_too_close_points</code> <code>double</code> Ignore Too Close Distance Threshold 0.005"},{"location":"planning/planning_error_monitor/#visualization","title":"Visualization","text":"<p>When the trajectory error occurs, markers for visualization are published at the topic <code>~/debug/marker</code>.</p> <ul> <li>trajectory_interval: An error occurs when the distance between two points exceeds a certain large value. The two points where the error occurred will be visualized.</li> <li>trajectory_curvature: An error occurs when the curvature exceeds a certain large value. The three points used to calculate the curvature will be visualized.</li> <li>trajectory_relative_angle: An error occurs when the angle in the direction of the path point changes significantly. The three points used to calculate the relative angle will be visualized.</li> </ul>"},{"location":"planning/planning_error_monitor/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>It cannot compute curvature values at start and end points of the trajectory.</li> <li>If trajectory points are too close, curvature calculation might output incorrect values.</li> </ul>"},{"location":"planning/planning_error_monitor/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Collision checker with obstacles may be implemented in the future.</li> </ul>"},{"location":"planning/planning_error_monitor/#error-detection-and-handling","title":"Error detection and handling","text":"<p>For the onsite validation, you can use the <code>invalid_trajectory_publisher</code> node. Please launch the node with the following command when the target trajectory is being published.</p> <pre><code>ros2 launch planning_error_monitor invalid_trajectory_publisher.launch.xml\n</code></pre> <p>This node subscribes the target trajectory, inserts the invalid point, and publishes it with the same name. The invalid trajectory is supposed to be detected by the <code>planning_error_monitor</code>.</p> <p>Limitation: Once the <code>invalid_trajectory_publisher</code> receives the trajectory, it will turn off the subscriber. This is to prevent the trajectory from looping in the same node, therefore, only the one pattern of invalid trajectory is generated.</p>"},{"location":"planning/planning_evaluator/","title":"Planning Evaluator","text":""},{"location":"planning/planning_evaluator/#purpose","title":"Purpose","text":"<p>This package provides nodes that generate metrics to evaluate the quality of planning and control.</p>"},{"location":"planning/planning_evaluator/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The evaluation node calculates metrics each time it receives a trajectory <code>T(0)</code>. Metrics are calculated using the following information:</p> <ul> <li>the trajectory <code>T(0)</code> itself.</li> <li>the previous trajectory <code>T(-1)</code>.</li> <li>the reference trajectory assumed to be used as the reference to plan <code>T(0)</code>.</li> <li>the current ego pose.</li> <li>the set of objects in the environment.</li> </ul> <p>These information are maintained by an instance of class <code>MetricsCalculator</code> which is also responsible for calculating metrics.</p>"},{"location":"planning/planning_evaluator/#stat","title":"Stat","text":"<p>Each metric is calculated using a <code>Stat</code> instance which contains the minimum, maximum, and mean values calculated for the metric as well as the number of values measured.</p>"},{"location":"planning/planning_evaluator/#metric-calculation-and-adding-more-metrics","title":"Metric calculation and adding more metrics","text":"<p>All possible metrics are defined in the <code>Metric</code> enumeration defined <code>include/planning_evaluator/metrics/metric.hpp</code>. This file also defines conversions from/to string as well as human readable descriptions to be used as header of the output file.</p> <p>The <code>MetricsCalculator</code> is responsible for calculating metric statistics through calls to function:</p> <pre><code>Stat&lt;double&gt; MetricsCalculator::calculate(const Metric metric, const Trajectory &amp; traj) const;\n</code></pre> <p>Adding a new metric <code>M</code> requires the following steps:</p> <ul> <li><code>metrics/metric.hpp</code>: add <code>M</code> to the <code>enum</code>, to the from/to string conversion maps, and to the description map.</li> <li><code>metrics_calculator.cpp</code>: add <code>M</code> to the <code>switch/case</code> statement of the <code>calculate</code> function.</li> <li>Add <code>M</code> to the <code>selected_metrics</code> parameters.</li> </ul>"},{"location":"planning/planning_evaluator/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/planning_evaluator/#inputs","title":"Inputs","text":"Name Type Description <code>~/input/trajectory</code> <code>autoware_auto_planning_msgs::msg::Trajectory</code> Main trajectory to evaluate <code>~/input/reference_trajectory</code> <code>autoware_auto_planning_msgs::msg::Trajectory</code> Reference trajectory to use for deviation metrics <code>~/input/objects</code> <code>autoware_auto_perception_msgs::msg::PredictedObjects</code> Obstacles"},{"location":"planning/planning_evaluator/#outputs","title":"Outputs","text":"<p>Each metric is published on a topic named after the metric name.</p> Name Type Description <code>~/metrics</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> DiagnosticArray with a DiagnosticStatus for each metric <p>When shut down, the evaluation node writes the values of the metrics measured during its lifetime to a file as specified by the <code>output_file</code> parameter.</p>"},{"location":"planning/planning_evaluator/#parameters","title":"Parameters","text":"Name Type Description <code>output_file</code> <code>string</code> file used to write metrics <code>ego_frame</code> <code>string</code> frame used for the ego pose <code>selected_metrics</code> List metrics to measure and publish <code>trajectory.min_point_dist_m</code> <code>double</code> minimum distance between two successive points to use for angle calculation <code>trajectory.lookahead.max_dist_m</code> <code>double</code> maximum distance from ego along the trajectory to use for calculation <code>trajectory.lookahead.max_time_m</code> <code>double</code> maximum time ahead of ego along the trajectory to use for calculation <code>obstacle.dist_thr_m</code> <code>double</code> distance between ego and the obstacle below which a collision is considered"},{"location":"planning/planning_evaluator/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>There is a strong assumption that when receiving a trajectory <code>T(0)</code>, it has been generated using the last received reference trajectory and objects. This can be wrong if a new reference trajectory or objects are published while <code>T(0)</code> is being calculated.</p> <p>Precision is currently limited by the resolution of the trajectories. It is possible to interpolate the trajectory and reference trajectory to increase precision but would make computation significantly more expensive.</p>"},{"location":"planning/planning_evaluator/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Use <code>Route</code> or <code>Path</code> messages as reference trajectory.</li> <li>RSS metrics (done in another node https://tier4.atlassian.net/browse/AJD-263).</li> <li>Add option to publish the <code>min</code> and <code>max</code> metric values. For now only the <code>mean</code> value is published.</li> <li><code>motion_evaluator_node</code>.<ul> <li>Node which constructs a trajectory over time from the real motion of ego.</li> <li>Only a proof of concept is currently implemented.</li> </ul> </li> </ul>"},{"location":"planning/planning_validator/","title":"Planning Validator","text":"<p>The <code>planning_validator</code> is a module that checks the validity of a trajectory before it is published. The status of the validation can be viewed in the <code>/diagnostics</code> and <code>/validation_status</code> topics. When an invalid trajectory is detected, the <code>planning_validator</code> will process the trajectory following the selected option: \"0. publish the trajectory as it is\", \"1. stop publishing the trajectory\", \"2. publish the last validated trajectory\".</p> <p></p>"},{"location":"planning/planning_validator/#supported-features","title":"Supported features","text":"<p>The following features are supported for trajectory validation and can have thresholds set by parameters:</p> <ul> <li>Invalid field : e.g. Inf, Nan</li> <li>Trajectory points interval : invalid if any of the distance of trajectory points is too large</li> <li>Curvature : invalid if the trajectory has too sharp turns that is not feasible for the given vehicle kinematics</li> <li>Relative angle : invalid if the yaw angle changes too fast in the sequence of trajectory points</li> <li>Lateral acceleration : invalid if the expected lateral acceleration/deceleration is too large</li> <li>Longitudinal acceleration/deceleration : invalid if the acceleration/deceleration in the trajectory point is too large</li> <li>Steering angle : invalid if the expected steering value is too large estimated from trajectory curvature</li> <li>Steering angle rate : invalid if the expected steering rate value is too large</li> <li>Velocity deviation : invalid if the planning velocity is too far from the ego velocity</li> <li>Distance deviation : invalid if the ego is too far from the trajectory</li> </ul> <p>The following features are to be implemented.</p> <ul> <li>(TODO) TTC calculation : invalid if the expected time-to-collision is too short on the trajectory</li> </ul>"},{"location":"planning/planning_validator/#inputsoutputs","title":"Inputs/Outputs","text":""},{"location":"planning/planning_validator/#inputs","title":"Inputs","text":"<p>The <code>planning_validator</code> takes in the following inputs:</p> Name Type Description <code>~/input/kinematics</code> nav_msgs/Odometry ego pose and twist <code>~/input/trajectory</code> autoware_auto_planning_msgs/Trajectory target trajectory to be validated in this node"},{"location":"planning/planning_validator/#outputs","title":"Outputs","text":"<p>It outputs the following:</p> Name Type Description <code>~/output/trajectory</code> autoware_auto_planning_msgs/Trajectory validated trajectory <code>~/output/validation_status</code> planning_validator/PlanningValidatorStatus validator status to inform the reason why the trajectory is valid/invalid <code>/diagnostics</code> diagnostic_msgs/DiagnosticStatus diagnostics to report errors"},{"location":"planning/planning_validator/#parameters","title":"Parameters","text":"<p>The following parameters can be set for the <code>planning_validator</code>:</p>"},{"location":"planning/planning_validator/#system-parameters","title":"System parameters","text":"Name Type Description Default value <code>invalid_trajectory_handling_type</code> int set the operation when the invalid trajectory is detected. 0: publish the trajectory even if it is invalid, 1: stop publishing the trajectory, 2: publish the last validated trajectory. 0 <code>publish_diag</code> bool the Diag will be set to ERROR when the number of consecutive invalid trajectory exceeds this threshold. (For example, threshold = 1 means, even if the trajectory is invalid, the Diag will not be ERROR if the next trajectory is valid.) true <code>diag_error_count_threshold</code> int if true, diagnostics msg is published. true <code>display_on_terminal</code> bool show error msg on terminal true"},{"location":"planning/planning_validator/#algorithm-parameters","title":"Algorithm parameters","text":""},{"location":"planning/planning_validator/#thresholds","title":"Thresholds","text":"<p>The input trajectory is detected as invalid if the index exceeds the following thresholds.</p> Name Type Description Default value <code>thresholds.interval</code> double invalid threshold of the distance of two neighboring trajectory points 100.0 <code>thresholds.relative_angle</code> double invalid threshold of the relative angle of two neighboring trajectory points 2.0 <code>thresholds.curvature</code> double invalid threshold of the curvature in each trajectory point 1.0 <code>thresholds.lateral_acc</code> double invalid threshold of the lateral acceleration in each trajectory point 9.8 <code>thresholds.longitudinal_max_acc</code> double invalid threshold of the maximum longitudinal acceleration in each trajectory point 9.8 <code>thresholds.longitudinal_min_acc</code> double invalid threshold of the minimum longitudinal deceleration in each trajectory point -9.8 <code>thresholds.steering</code> double invalid threshold of the steering angle in each trajectory point 1.414 <code>thresholds.steering_rate</code> double invalid threshold of the steering angle rate in each trajectory point 10.0 <code>thresholds.velocity_deviation</code> double invalid threshold of the velocity deviation between the ego velocity and the trajectory point closest to ego. 100.0 <code>thresholds.distance_deviation</code> double invalid threshold of the distance deviation between the ego position and the trajectory point closest to ego. 100.0"},{"location":"planning/route_handler/","title":"route handler","text":"<p><code>route_handler</code> is a library for calculating driving route on the lanelet map.</p>"},{"location":"planning/rtc_auto_mode_manager/","title":"RTC Auto Mode Manager","text":""},{"location":"planning/rtc_auto_mode_manager/#purpose","title":"Purpose","text":"<p>RTC Auto Mode Manager is a node to approve request to cooperate from behavior planning modules automatically.</p>"},{"location":"planning/rtc_auto_mode_manager/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/rtc_auto_mode_manager/#input","title":"Input","text":"Name Type Description <code>/planning/enable_auto_mode/**</code> tier4_rtc_msgs/srv/AutoMode Service to enable auto mode for the module"},{"location":"planning/rtc_auto_mode_manager/#output","title":"Output","text":"Name Type Description <code>/planning/enable_auto_mode/internal/**</code> tier4_rtc_msgs/srv/AutoMode Service to enable auto mode for the module"},{"location":"planning/rtc_auto_mode_manager/#parameters","title":"Parameters","text":"Name Type Description <code>module_list</code> List of <code>string</code> Module names managing in <code>rtc_auto_mode_manager</code> <code>default_enable_list</code> List of <code>string</code> Module names enabled auto mode at initialization"},{"location":"planning/rtc_auto_mode_manager/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/rtc_auto_mode_manager/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"planning/rtc_auto_mode_manager/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":""},{"location":"planning/rtc_interface/","title":"RTC Interface","text":""},{"location":"planning/rtc_interface/#purpose","title":"Purpose","text":"<p>RTC Interface is an interface to publish the decision status of behavior planning modules and receive execution command from external of an autonomous driving system.</p>"},{"location":"planning/rtc_interface/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/rtc_interface/#usage-example","title":"Usage example","text":"<pre><code>// Generate instance (in this example, \"intersection\" is selected)\nrtc_interface::RTCInterface rtc_interface(node, \"intersection\");\n\n// Generate UUID\nconst unique_identifier_msgs::msg::UUID uuid = generateUUID(getModuleId());\n\n// Repeat while module is running\nwhile (...) {\n// Get safety status of the module corresponding to the module id\nconst bool safe = ...\n\n// Get distance to the object corresponding to the module id\nconst double start_distance = ...\nconst double finish_distance = ...\n\n// Get time stamp\nconst rclcpp::Time stamp = ...\n\n// Update status\nrtc_interface.updateCooperateStatus(uuid, safe, start_distance, finish_distance, stamp);\n\nif (rtc_interface.isActivated(uuid)) {\n// Execute planning\n} else {\n// Stop planning\n}\n// Get time stamp\nconst rclcpp::Time stamp = ...\n\n// Publish status topic\nrtc_interface.publishCooperateStatus(stamp);\n}\n\n// Remove the status from array\nrtc_interface.removeCooperateStatus(uuid);\n</code></pre>"},{"location":"planning/rtc_interface/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/rtc_interface/#rtcinterface-constructor","title":"RTCInterface (Constructor)","text":"<pre><code>rtc_interface::RTCInterface(rclcpp::Node &amp; node, const std::string &amp; name);\n</code></pre>"},{"location":"planning/rtc_interface/#description","title":"Description","text":"<p>A constructor for <code>rtc_interface::RTCInterface</code>.</p>"},{"location":"planning/rtc_interface/#input","title":"Input","text":"<ul> <li><code>node</code> : Node calling this interface</li> <li><code>name</code> : Name of cooperate status array topic and cooperate commands service<ul> <li>Cooperate status array topic name : <code>~/{name}/cooperate_status</code></li> <li>Cooperate commands service name : <code>~/{name}/cooperate_commands</code></li> </ul> </li> </ul>"},{"location":"planning/rtc_interface/#output","title":"Output","text":"<p>An instance of <code>RTCInterface</code></p>"},{"location":"planning/rtc_interface/#publishcooperatestatus","title":"publishCooperateStatus","text":"<pre><code>rtc_interface::publishCooperateStatus(const rclcpp::Time &amp; stamp)\n</code></pre>"},{"location":"planning/rtc_interface/#description_1","title":"Description","text":"<p>Publish registered cooperate status.</p>"},{"location":"planning/rtc_interface/#input_1","title":"Input","text":"<ul> <li><code>stamp</code> : Time stamp</li> </ul>"},{"location":"planning/rtc_interface/#output_1","title":"Output","text":"<p>Nothing</p>"},{"location":"planning/rtc_interface/#updatecooperatestatus","title":"updateCooperateStatus","text":"<pre><code>rtc_interface::updateCooperateStatus(const unique_identifier_msgs::msg::UUID &amp; uuid, const bool safe, const double start_distance, const double finish_distance, const rclcpp::Time &amp; stamp)\n</code></pre>"},{"location":"planning/rtc_interface/#description_2","title":"Description","text":"<p>Update cooperate status corresponding to <code>uuid</code>. If cooperate status corresponding to <code>uuid</code> is not registered yet, add new cooperate status.</p>"},{"location":"planning/rtc_interface/#input_2","title":"Input","text":"<ul> <li><code>uuid</code> : UUID for requesting module</li> <li><code>safe</code> : Safety status of requesting module</li> <li><code>start_distance</code> : Distance to the start object from ego vehicle</li> <li><code>finish_distance</code> : Distance to the finish object from ego vehicle</li> <li><code>stamp</code> : Time stamp</li> </ul>"},{"location":"planning/rtc_interface/#output_2","title":"Output","text":"<p>Nothing</p>"},{"location":"planning/rtc_interface/#removecooperatestatus","title":"removeCooperateStatus","text":"<pre><code>rtc_interface::removeCooperateStatus(const unique_identifier_msgs::msg::UUID &amp; uuid)\n</code></pre>"},{"location":"planning/rtc_interface/#description_3","title":"Description","text":"<p>Remove cooperate status corresponding to <code>uuid</code> from registered statuses.</p>"},{"location":"planning/rtc_interface/#input_3","title":"Input","text":"<ul> <li><code>uuid</code> : UUID for expired module</li> </ul>"},{"location":"planning/rtc_interface/#output_3","title":"Output","text":"<p>Nothing</p>"},{"location":"planning/rtc_interface/#clearcooperatestatus","title":"clearCooperateStatus","text":"<pre><code>rtc_interface::clearCooperateStatus()\n</code></pre>"},{"location":"planning/rtc_interface/#description_4","title":"Description","text":"<p>Remove all cooperate statuses.</p>"},{"location":"planning/rtc_interface/#input_4","title":"Input","text":"<p>Nothing</p>"},{"location":"planning/rtc_interface/#output_4","title":"Output","text":"<p>Nothing</p>"},{"location":"planning/rtc_interface/#isactivated","title":"isActivated","text":"<pre><code>rtc_interface::isActivated(const unique_identifier_msgs::msg::UUID &amp; uuid)\n</code></pre>"},{"location":"planning/rtc_interface/#description_5","title":"Description","text":"<p>Return received command status corresponding to <code>uuid</code>.</p>"},{"location":"planning/rtc_interface/#input_5","title":"Input","text":"<ul> <li><code>uuid</code> : UUID for checking module</li> </ul>"},{"location":"planning/rtc_interface/#output_5","title":"Output","text":"<p>If auto mode is enabled, return based on the safety status. If not, if received command is <code>ACTIVATED</code>, return <code>true</code>. If not, return <code>false</code>.</p>"},{"location":"planning/rtc_interface/#isregistered","title":"isRegistered","text":"<pre><code>rtc_interface::isRegistered(const unique_identifier_msgs::msg::UUID &amp; uuid)\n</code></pre>"},{"location":"planning/rtc_interface/#description_6","title":"Description","text":"<p>Return <code>true</code> if <code>uuid</code> is registered.</p>"},{"location":"planning/rtc_interface/#input_6","title":"Input","text":"<ul> <li><code>uuid</code> : UUID for checking module</li> </ul>"},{"location":"planning/rtc_interface/#output_6","title":"Output","text":"<p>If <code>uuid</code> is registered, return <code>true</code>. If not, return <code>false</code>.</p>"},{"location":"planning/rtc_interface/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"planning/rtc_interface/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":""},{"location":"planning/rtc_replayer/","title":"rtc_replayer","text":""},{"location":"planning/rtc_replayer/#purpose","title":"Purpose","text":"<p>The current issue for RTC commands is that service is not recorded to rosbag, so it's very hard to analyze what was happened exactly. So this package makes it possible to replay rtc commands service from rosbag rtc status topic to resolve that issue.</p>"},{"location":"planning/rtc_replayer/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/rtc_replayer/#input","title":"Input","text":"Name Type Description <code>/debug/rtc_status</code> tier4_rtc_msgs::msg::CooperateStatusArray CooperateStatusArray that is recorded in rosbag"},{"location":"planning/rtc_replayer/#output","title":"Output","text":"Name Type Description <code>/api/external/set/rtc_commands</code> tier4_rtc_msgs::msg::CooperateCommands CooperateCommands that is replayed by this package"},{"location":"planning/rtc_replayer/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/rtc_replayer/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>This package can't replay CooperateCommands correctly if CooperateStatusArray is not stable. And this replay is always later one step than actual however it will not affect much for behavior.</p>"},{"location":"planning/rtc_replayer/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<p>tbd.</p>"},{"location":"planning/scenario_selector/","title":"scenario_selector","text":""},{"location":"planning/scenario_selector/#scenario_selector_node","title":"scenario_selector_node","text":"<p><code>scenario_selector_node</code> is a node that switches trajectories from each scenario.</p>"},{"location":"planning/scenario_selector/#input-topics","title":"Input topics","text":"Name Type Description <code>~input/lane_driving/trajectory</code> autoware_auto_planning_msgs::Trajectory trajectory of LaneDriving scenario <code>~input/parking/trajectory</code> autoware_auto_planning_msgs::Trajectory trajectory of Parking scenario <code>~input/lanelet_map</code> autoware_auto_mapping_msgs::HADMapBin <code>~input/route</code> autoware_planning_msgs::LaneletRoute route and goal pose <code>~input/odometry</code> nav_msgs::Odometry for checking whether vehicle is stopped <code>is_parking_completed</code> bool (implemented as rosparam) whether all split trajectory of Parking are published"},{"location":"planning/scenario_selector/#output-topics","title":"Output topics","text":"Name Type Description <code>~output/scenario</code> tier4_planning_msgs::Scenario current scenario and scenarios to be activated <code>~output/trajectory</code> autoware_auto_planning_msgs::Trajectory trajectory to be followed"},{"location":"planning/scenario_selector/#output-tfs","title":"Output TFs","text":"<p>None</p>"},{"location":"planning/scenario_selector/#how-to-launch","title":"How to launch","text":"<ol> <li>Write your remapping info in <code>scenario_selector.launch</code> or add args when executing <code>roslaunch</code></li> <li><code>roslaunch scenario_selector scenario_selector.launch</code><ul> <li>If you would like to use only a single scenario, <code>roslaunch scenario_selector dummy_scenario_selector_{scenario_name}.launch</code></li> </ul> </li> </ol>"},{"location":"planning/scenario_selector/#parameters","title":"Parameters","text":"Parameter Type Description <code>update_rate</code> double timer's update rate <code>th_max_message_delay_sec</code> double threshold time of input messages' maximum delay <code>th_arrived_distance_m</code> double threshold distance to check if vehicle has arrived at the trajectory's endpoint <code>th_stopped_time_sec</code> double threshold time to check if vehicle is stopped <code>th_stopped_velocity_mps</code> double threshold velocity to check if vehicle is stopped"},{"location":"planning/scenario_selector/#flowchart","title":"Flowchart","text":""},{"location":"planning/static_centerline_optimizer/","title":"Static Centerline Optimizer","text":""},{"location":"planning/static_centerline_optimizer/#purpose","title":"Purpose","text":"<p>This package statically calculates the centerline satisfying path footprints inside the drivable area.</p> <p>On narrow-road driving, the default centerline, which is the middle line between lanelets' right and left boundaries, often causes path footprints outside the drivable area. To make path footprints inside the drivable area, we use online path shape optimization by the obstacle_avoidance_planner package.</p> <p>Instead of online path shape optimization, we introduce static centerline optimization. With this static centerline optimization, we have following advantages.</p> <ul> <li>We can see the optimized centerline shape in advance.<ul> <li>With the default autoware, path shape is not determined until the vehicle drives there.</li> <li>This enables offline path shape evaluation.</li> </ul> </li> <li>We do not have to calculate a heavy and sometimes unstable path optimization since the path footprints are already inside the drivable area.</li> </ul>"},{"location":"planning/static_centerline_optimizer/#use-cases","title":"Use cases","text":"<p>There are two interfaces to communicate with the centerline optimizer.</p>"},{"location":"planning/static_centerline_optimizer/#vector-map-builder-interface","title":"Vector Map Builder Interface","text":"<p>Note: This function of Vector Map Builder has not been released. Please wait for a while. Currently there is no documentation about Vector Map Builder's operation for this function.</p> <p>The optimized centerline can be generated from Vector Map Builder's operation.</p> <p>We can run</p> <ul> <li>path planning server</li> <li>http server to connect path planning server and Vector Map Builder</li> </ul> <p>with the following command by designating <code>&lt;vehicle_model&gt;</code></p> <pre><code>ros2 launch static_centerline_optimizer run_planning_server.launch.xml vehicle_model:=&lt;vehicle-model&gt;\n</code></pre> <p>FYI, port ID of the http server is 4010 by default.</p>"},{"location":"planning/static_centerline_optimizer/#command-line-interface","title":"Command Line Interface","text":"<p>The optimized centerline can be generated from the command line interface by designating</p> <ul> <li><code>&lt;input-osm-path&gt;</code></li> <li><code>&lt;output-osm-path&gt;</code> (not mandatory)</li> <li><code>&lt;start-lanelet-id&gt;</code></li> <li><code>&lt;end-lanelet-id&gt;</code></li> <li><code>&lt;vehicle-model&gt;</code></li> </ul> <pre><code>ros2 launch static_centerline_optimizer static_centerline_optimizer.launch.xml run_backgrond:=false lanelet2_input_file_path:=&lt;input-osm-path&gt; lanelet2_output_file_path:=&lt;output-osm-path&gt; start_lanelet_id:=&lt;start-lane-id&gt; end_lanelet_id:=&lt;end-lane-id&gt; vehicle_model:=&lt;vehicle-model&gt;\n</code></pre> <p>The default output map path containing the optimized centerline locates <code>/tmp/lanelet2_map.osm</code>. If you want to change the output map path, you can remap the path by designating <code>&lt;output-osm-path&gt;</code>.</p>"},{"location":"planning/static_centerline_optimizer/#visualization","title":"Visualization","text":"<p>When launching the path planning server, rviz is launched as well as follows. </p> <ul> <li>The yellow footprints are the original ones from the osm map file.<ul> <li>FYI: Footprints are generated based on the centerline and vehicle size.</li> </ul> </li> <li>The red footprints are the optimized ones.</li> <li>The gray area is the drivable area.</li> <li>You can see that the red footprints are inside the drivable area although the yellow ones are outside.</li> </ul>"},{"location":"planning/static_centerline_optimizer/#unsafe-footprints","title":"Unsafe footprints","text":"<p>Sometimes the optimized centerline footprints are close to the lanes' boundaries. We can check how close they are with <code>unsafe footprints</code> marker as follows.</p> <p>Footprints' color depends on its distance to the boundaries, and text expresses its distance.</p> <p></p> <p>By default, footprints' color is</p> <ul> <li>when the distance is less than 0.1 [m] : red</li> <li>when the distance is less than 0.2 [m] : green</li> <li>when the distance is less than 0.3 [m] : blue</li> </ul>"},{"location":"planning/surround_obstacle_checker/","title":"Surround Obstacle Checker","text":""},{"location":"planning/surround_obstacle_checker/#purpose","title":"Purpose","text":"<p>This module subscribes required data (ego-pose, obstacles, etc), and publishes zero velocity limit to keep stopping if any of stop conditions are satisfied.</p>"},{"location":"planning/surround_obstacle_checker/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/surround_obstacle_checker/#flow-chart","title":"Flow chart","text":""},{"location":"planning/surround_obstacle_checker/#algorithms","title":"Algorithms","text":""},{"location":"planning/surround_obstacle_checker/#check-data","title":"Check data","text":"<p>Check that <code>surround_obstacle_checker</code> receives no ground pointcloud, dynamic objects and current velocity data.</p>"},{"location":"planning/surround_obstacle_checker/#get-distance-to-nearest-object","title":"Get distance to nearest object","text":"<p>Calculate distance between ego vehicle and the nearest object. In this function, it calculates the minimum distance between the polygon of ego vehicle and all points in pointclouds and the polygons of dynamic objects.</p>"},{"location":"planning/surround_obstacle_checker/#stop-requirement","title":"Stop requirement","text":"<p>If it satisfies all following conditions, it plans stopping.</p> <ul> <li>Ego vehicle is stopped</li> <li>It satisfies any following conditions<ol> <li>The distance to nearest obstacle satisfies following conditions<ul> <li>If state is <code>State::PASS</code>, the distance is less than <code>surround_check_distance</code></li> <li>If state is <code>State::STOP</code>, the distance is less than <code>surround_check_recover_distance</code></li> </ul> </li> <li>If it does not satisfies the condition in 1, elapsed time from the time it satisfies the condition in 1 is less than <code>state_clear_time</code></li> </ol> </li> </ul>"},{"location":"planning/surround_obstacle_checker/#states","title":"States","text":"<p>To prevent chattering, <code>surround_obstacle_checker</code> manages two states. As mentioned in stop condition section, it prevents chattering by changing threshold to find surround obstacle depending on the states.</p> <ul> <li><code>State::PASS</code> : Stop planning is released</li> <li><code>State::STOP</code> \uff1aWhile stop planning</li> </ul>"},{"location":"planning/surround_obstacle_checker/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/surround_obstacle_checker/#input","title":"Input","text":"Name Type Description <code>/perception/obstacle_segmentation/pointcloud</code> <code>sensor_msgs::msg::PointCloud2</code> Pointcloud of obstacles which the ego-vehicle should stop or avoid <code>/perception/object_recognition/objects</code> <code>autoware_auto_perception_msgs::msg::PredictedObjects</code> Dynamic objects <code>/localization/kinematic_state</code> <code>nav_msgs::msg::Odometry</code> Current twist <code>/tf</code> <code>tf2_msgs::msg::TFMessage</code> TF <code>/tf_static</code> <code>tf2_msgs::msg::TFMessage</code> TF static"},{"location":"planning/surround_obstacle_checker/#output","title":"Output","text":"Name Type Description <code>~/output/velocity_limit_clear_command</code> <code>tier4_planning_msgs::msg::VelocityLimitClearCommand</code> Velocity limit clear command <code>~/output/max_velocity</code> <code>tier4_planning_msgs::msg::VelocityLimit</code> Velocity limit command <code>~/output/no_start_reason</code> <code>diagnostic_msgs::msg::DiagnosticStatus</code> No start reason <code>~/output/stop_reasons</code> <code>tier4_planning_msgs::msg::StopReasonArray</code> Stop reasons <code>~/debug/marker</code> <code>visualization_msgs::msg::MarkerArray</code> Marker for visualization <code>~/debug/footprint</code> <code>geometry_msgs::msg::PolygonStamped</code> Ego vehicle base footprint for visualization <code>~/debug/footprint_offset</code> <code>geometry_msgs::msg::PolygonStamped</code> Ego vehicle footprint with <code>surround_check_distance</code> offset for visualization <code>~/debug/footprint_recover_offset</code> <code>geometry_msgs::msg::PolygonStamped</code> Ego vehicle footprint with <code>surround_check_recover_distance</code> offset for visualization"},{"location":"planning/surround_obstacle_checker/#parameters","title":"Parameters","text":"Name Type Description Default value <code>use_pointcloud</code> <code>bool</code> Use pointcloud as obstacle check <code>true</code> <code>use_dynamic_object</code> <code>bool</code> Use dynamic object as obstacle check <code>true</code> <code>surround_check_distance</code> <code>double</code> If objects exist in this distance, transit to \"exist-surrounding-obstacle\" status [m] 0.5 <code>surround_check_recover_distance</code> <code>double</code> If no object exists in this distance, transit to \"non-surrounding-obstacle\" status [m] 0.8 <code>state_clear_time</code> <code>double</code> Threshold to clear stop state [s] 2.0 <code>stop_state_ego_speed</code> <code>double</code> Threshold to check ego vehicle stopped [m/s] 0.1 <code>stop_state_entry_duration_time</code> <code>double</code> Threshold to check ego vehicle stopped [s] 0.1 <code>publish_debug_footprints</code> <code>bool</code> Publish vehicle footprint with/without offsets <code>true</code>"},{"location":"planning/surround_obstacle_checker/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>To perform stop planning, it is necessary to get obstacle pointclouds data. Hence, it does not plan stopping if the obstacle is in blind spot.</p>"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/","title":"Surround Obstacle Checker","text":""},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#purpose","title":"Purpose","text":"<p><code>surround_obstacle_checker</code> \u306f\u3001\u81ea\u8eca\u304c\u505c\u8eca\u4e2d\u3001\u81ea\u8eca\u306e\u5468\u56f2\u306b\u969c\u5bb3\u7269\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306b\u767a\u9032\u3057\u306a\u3044\u3088\u3046\u306b\u505c\u6b62\u8a08\u753b\u3092\u884c\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308b\u3002</p>"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#flow-chart","title":"Flow chart","text":""},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#algorithms","title":"Algorithms","text":""},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#check-data","title":"Check data","text":"<p>\u70b9\u7fa4\u3001\u52d5\u7684\u7269\u4f53\u3001\u81ea\u8eca\u901f\u5ea6\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002</p>"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#get-distance-to-nearest-object","title":"Get distance to nearest object","text":"<p>\u81ea\u8eca\u3068\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u81ea\u8eca\u306e\u30dd\u30ea\u30b4\u30f3\u3092\u8a08\u7b97\u3057\u3001\u70b9\u7fa4\u306e\u5404\u70b9\u304a\u3088\u3073\u5404\u52d5\u7684\u7269\u4f53\u306e\u30dd\u30ea\u30b4\u30f3\u3068\u306e\u8ddd\u96e2\u3092\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\u3053\u3068\u3067\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3002</p>"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#stop-condition","title":"Stop condition","text":"<p>\u6b21\u306e\u6761\u4ef6\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u3068\u304d\u3001\u81ea\u8eca\u306f\u505c\u6b62\u8a08\u753b\u3092\u884c\u3046\u3002</p> <ul> <li>\u81ea\u8eca\u304c\u505c\u8eca\u3057\u3066\u3044\u308b\u3053\u3068</li> <li>\u6b21\u306e\u3046\u3061\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3053\u3068<ol> <li>\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u304c\u6b21\u306e\u6761\u4ef6\u3092\u307f\u305f\u3059\u3053\u3068<ul> <li><code>State::PASS</code> \u306e\u3068\u304d\u3001<code>surround_check_distance</code> \u672a\u6e80\u3067\u3042\u308b</li> <li><code>State::STOP</code> \u306e\u3068\u304d\u3001<code>surround_check_recover_distance</code> \u4ee5\u4e0b\u3067\u3042\u308b</li> </ul> </li> <li>1 \u3092\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u3068\u304d\u30011 \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u6642\u523b\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u304c <code>state_clear_time</code> \u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068</li> </ol> </li> </ul>"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#states","title":"States","text":"<p>\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u9632\u6b62\u306e\u305f\u3081\u3001<code>surround_obstacle_checker</code> \u3067\u306f\u72b6\u614b\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u3002 Stop condition \u306e\u9805\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u72b6\u614b\u306b\u3088\u3063\u3066\u969c\u5bb3\u7269\u5224\u5b9a\u306e\u3057\u304d\u3044\u5024\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u3092\u9632\u6b62\u3057\u3066\u3044\u308b\u3002</p> <ul> <li><code>State::PASS</code> \uff1a\u505c\u6b62\u8a08\u753b\u89e3\u9664\u4e2d</li> <li><code>State::STOP</code> \uff1a\u505c\u6b62\u8a08\u753b\u4e2d</li> </ul>"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#input","title":"Input","text":"Name Type Description <code>/perception/obstacle_segmentation/pointcloud</code> <code>sensor_msgs::msg::PointCloud2</code> Pointcloud of obstacles which the ego-vehicle should stop or avoid <code>/perception/object_recognition/objects</code> <code>autoware_auto_perception_msgs::msg::PredictedObjects</code> Dynamic objects <code>/localization/kinematic_state</code> <code>nav_msgs::msg::Odometry</code> Current twist <code>/tf</code> <code>tf2_msgs::msg::TFMessage</code> TF <code>/tf_static</code> <code>tf2_msgs::msg::TFMessage</code> TF static"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#output","title":"Output","text":"Name Type Description <code>~/output/velocity_limit_clear_command</code> <code>tier4_planning_msgs::msg::VelocityLimitClearCommand</code> Velocity limit clear command <code>~/output/max_velocity</code> <code>tier4_planning_msgs::msg::VelocityLimit</code> Velocity limit command <code>~/output/no_start_reason</code> <code>diagnostic_msgs::msg::DiagnosticStatus</code> No start reason <code>~/output/stop_reasons</code> <code>tier4_planning_msgs::msg::StopReasonArray</code> Stop reasons <code>~/debug/marker</code> <code>visualization_msgs::msg::MarkerArray</code> Marker for visualization"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#parameters","title":"Parameters","text":"Name Type Description Default value <code>use_pointcloud</code> <code>bool</code> Use pointcloud as obstacle check <code>true</code> <code>use_dynamic_object</code> <code>bool</code> Use dynamic object as obstacle check <code>true</code> <code>surround_check_distance</code> <code>double</code> If objects exist in this distance, transit to \"exist-surrounding-obstacle\" status [m] 0.5 <code>surround_check_recover_distance</code> <code>double</code> If no object exists in this distance, transit to \"non-surrounding-obstacle\" status [m] 0.8 <code>state_clear_time</code> <code>double</code> Threshold to clear stop state [s] 2.0 <code>stop_state_ego_speed</code> <code>double</code> Threshold to check ego vehicle stopped [m/s] 0.1 <code>stop_state_entry_duration_time</code> <code>double</code> Threshold to check ego vehicle stopped [s] 0.1"},{"location":"planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>\u3053\u306e\u6a5f\u80fd\u304c\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306b\u306f\u969c\u5bb3\u7269\u70b9\u7fa4\u306e\u89b3\u6e2c\u304c\u5fc5\u8981\u306a\u305f\u3081\u3001\u969c\u5bb3\u7269\u304c\u6b7b\u89d2\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u505c\u6b62\u8a08\u753b\u3092\u884c\u308f\u306a\u3044\u3002</p>"},{"location":"sensing/geo_pos_conv/","title":"geo_pos_conv","text":""},{"location":"sensing/geo_pos_conv/#purpose","title":"Purpose","text":"<p>The <code>geo_pos_conv</code> is a library to calculate the conversion between x, y positions on the plane rectangular coordinate and latitude/longitude on the earth.</p>"},{"location":"sensing/geo_pos_conv/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/geo_pos_conv/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/geo_pos_conv/#parameters","title":"Parameters","text":""},{"location":"sensing/geo_pos_conv/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/geo_pos_conv/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/geo_pos_conv/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/geo_pos_conv/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/geo_pos_conv/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/gnss_poser/","title":"gnss_poser","text":""},{"location":"sensing/gnss_poser/#purpose","title":"Purpose","text":"<p>The <code>gnss_poser</code> is a node that subscribes gnss sensing messages and calculates vehicle pose with covariance.</p>"},{"location":"sensing/gnss_poser/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/gnss_poser/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/gnss_poser/#input","title":"Input","text":"Name Type Description <code>~/input/fix</code> <code>sensor_msgs::msg::NavSatFix</code> gnss status message <code>~/input/autoware_orientation</code> <code>autoware_sensing_msgs::msg::GnssInsOrientationStamped</code> orientation click here for more details"},{"location":"sensing/gnss_poser/#output","title":"Output","text":"Name Type Description <code>~/output/pose</code> <code>geometry_msgs::msg::PoseStamped</code> vehicle pose calculated from gnss sensing data <code>~/output/gnss_pose_cov</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> vehicle pose with covariance calculated from gnss sensing data <code>~/output/gnss_fixed</code> <code>tier4_debug_msgs::msg::BoolStamped</code> gnss fix status"},{"location":"sensing/gnss_poser/#parameters","title":"Parameters","text":""},{"location":"sensing/gnss_poser/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>base_frame</code> string \"base_link\" frame id <code>gnss_frame</code> string \"gnss\" frame id <code>gnss_base_frame</code> string \"gnss_base_link\" frame id <code>map_frame</code> string \"map\" frame id <code>coordinate_system</code> int \"4\" coordinate system enumeration; 0: UTM, 1: MGRS, 2: Plane, 3: WGS84 Local Coordinate System, 4: UTM Local Coordinate System <code>plane_zone</code> int 9 identification number of the plane rectangular coordinate systems. click here for more details"},{"location":"sensing/gnss_poser/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/gnss_poser/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/gnss_poser/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/gnss_poser/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/gnss_poser/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/image_diagnostics/","title":"image_diagnostics","text":""},{"location":"sensing/image_diagnostics/#purpose","title":"Purpose","text":"<p>The <code>image_diagnostics</code> is a node that check the status of the input raw image.</p>"},{"location":"sensing/image_diagnostics/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Below figure shows the flowchart of image diagnostics node. Each image is divided into small blocks for block state assessment.</p> <p></p> <p>Each small image block state is assessed as below figure.</p> <p></p> <p>After all image's blocks state are evaluated, the whole image status is summarized as below.</p> <p></p>"},{"location":"sensing/image_diagnostics/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/image_diagnostics/#input","title":"Input","text":"Name Type Description <code>input/raw_image</code> <code>sensor_msgs::msg::Image</code> raw image"},{"location":"sensing/image_diagnostics/#output","title":"Output","text":"Name Type Description <code>image_diag/debug/gray_image</code> <code>sensor_msgs::msg::Image</code> gray image <code>image_diag/debug/dft_image</code> <code>sensor_msgs::msg::Image</code> discrete Fourier transformation image <code>image_diag/debug/diag_block_image</code> <code>sensor_msgs::msg::Image</code> each block state colorization <code>image_diag/image_state_diag</code> <code>tier4_debug_msgs::msg::Int32Stamped</code> image diagnostics status value <code>/diagnostics</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> diagnostics"},{"location":"sensing/image_diagnostics/#parameters","title":"Parameters","text":""},{"location":"sensing/image_diagnostics/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>This is proof of concept for image diagnostics and the algorithms still under further improvement.</li> </ul>"},{"location":"sensing/image_diagnostics/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/image_diagnostics/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/image_diagnostics/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/image_diagnostics/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":"<ul> <li>Consider more specific image distortion/occlusion type, for instance raindrop or dust.</li> </ul> <ul> <li>Consider degraded visibility under fog or rain condition from optical point of view</li> </ul>"},{"location":"sensing/image_transport_decompressor/","title":"image_transport_decompressor","text":""},{"location":"sensing/image_transport_decompressor/#purpose","title":"Purpose","text":"<p>The <code>image_transport_decompressor</code> is a node that decompresses images.</p>"},{"location":"sensing/image_transport_decompressor/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/image_transport_decompressor/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/image_transport_decompressor/#input","title":"Input","text":"Name Type Description <code>~/input/compressed_image</code> <code>sensor_msgs::msg::CompressedImage</code> compressed image"},{"location":"sensing/image_transport_decompressor/#output","title":"Output","text":"Name Type Description <code>~/output/raw_image</code> <code>sensor_msgs::msg::Image</code> decompressed image"},{"location":"sensing/image_transport_decompressor/#parameters","title":"Parameters","text":""},{"location":"sensing/image_transport_decompressor/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/image_transport_decompressor/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/image_transport_decompressor/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/image_transport_decompressor/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/image_transport_decompressor/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/imu_corrector/","title":"imu_corrector","text":""},{"location":"sensing/imu_corrector/#purpose","title":"Purpose","text":"<p><code>imu_corrector_node</code> is a node that correct imu data.</p> <ol> <li>Correct yaw rate offset b by reading the parameter.</li> <li>Correct yaw rate standard deviation \\sigma\\sigma by reading the parameter.</li> </ol> <p>Mathematically, we assume the following equation:</p>  \\tilde{\\omega}(t) = \\omega(t) + b(t) + n(t)   \\tilde{\\omega}(t) = \\omega(t) + b(t) + n(t)  <p>where \\tilde{\\omega}\\tilde{\\omega} denotes observed angular velocity, \\omega\\omega denotes true angular velocity, bb denotes an offset, and nn denotes a gaussian noise. We also assume that n\\sim\\mathcal{N}(0, \\sigma^2)n\\sim\\mathcal{N}(0, \\sigma^2).</p>"},{"location":"sensing/imu_corrector/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/imu_corrector/#input","title":"Input","text":"Name Type Description <code>~input</code> <code>sensor_msgs::msg::Imu</code> raw imu data"},{"location":"sensing/imu_corrector/#output","title":"Output","text":"Name Type Description <code>~output</code> <code>sensor_msgs::msg::Imu</code> corrected imu data"},{"location":"sensing/imu_corrector/#parameters","title":"Parameters","text":""},{"location":"sensing/imu_corrector/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>angular_velocity_offset_x</code> double roll rate offset in imu_link [rad/s] <code>angular_velocity_offset_y</code> double pitch rate offset imu_link [rad/s] <code>angular_velocity_offset_z</code> double yaw rate offset imu_link [rad/s] <code>angular_velocity_stddev_xx</code> double roll rate standard deviation imu_link [rad/s] <code>angular_velocity_stddev_yy</code> double pitch rate standard deviation imu_link [rad/s] <code>angular_velocity_stddev_zz</code> double yaw rate standard deviation imu_link [rad/s] <code>acceleration_stddev</code> double acceleration standard deviation imu_link [m/s^2]"},{"location":"sensing/imu_corrector/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/imu_corrector/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/imu_corrector/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/imu_corrector/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/imu_corrector/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/livox/livox_tag_filter/","title":"livox_tag_filter","text":""},{"location":"sensing/livox/livox_tag_filter/#purpose","title":"Purpose","text":"<p>The <code>livox_tag_filter</code> is a node that removes noise from pointcloud by using the following tags:</p> <ul> <li>Point property based on spatial position</li> <li>Point property based on intensity</li> <li>Return number</li> </ul>"},{"location":"sensing/livox/livox_tag_filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/livox/livox_tag_filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/livox/livox_tag_filter/#input","title":"Input","text":"Name Type Description <code>~/input</code> <code>sensor_msgs::msg::PointCloud2</code> reference points"},{"location":"sensing/livox/livox_tag_filter/#output","title":"Output","text":"Name Type Description <code>~/output</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/livox/livox_tag_filter/#parameters","title":"Parameters","text":""},{"location":"sensing/livox/livox_tag_filter/#node-parameters","title":"Node Parameters","text":"Name Type Description <code>ignore_tags</code> vector ignored tags (See the following table)"},{"location":"sensing/livox/livox_tag_filter/#tag-parameters","title":"Tag Parameters","text":"Bit Description Options 0~1 Point property based on spatial position 00: Normal 01: High confidence level of the noise 10: Moderate confidence level of the noise 11: Low confidence level of the noise 2~3 Point property based on intensity 00: Normal 01: High confidence level of the noise 10: Moderate confidence level of the noise 11: Reserved 4~5 Return number 00: return 0 01: return 1 10: return 2 11: return 3 6~7 Reserved <p>You can download more detail description about the livox from external link [1].</p>"},{"location":"sensing/livox/livox_tag_filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/livox/livox_tag_filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/livox/livox_tag_filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/livox/livox_tag_filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>[1] https://www.livoxtech.com/downloads</p>"},{"location":"sensing/livox/livox_tag_filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/","title":"pointcloud_preprocessor","text":""},{"location":"sensing/pointcloud_preprocessor/#purpose","title":"Purpose","text":"<p>The <code>pointcloud_preprocessor</code> is a package that includes the following filters:</p> <ul> <li>removing outlier points</li> <li>cropping</li> <li>concatenating pointclouds</li> <li>correcting distortion</li> <li>downsampling</li> </ul>"},{"location":"sensing/pointcloud_preprocessor/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Detail description of each filter's algorithm is in the following links.</p> Filter Name Description Detail concatenate_data subscribe multiple pointclouds and concatenate them into a pointcloud link crop_box_filter remove points within a given box link distortion_corrector compensate pointcloud distortion caused by ego vehicle's movement during 1 scan link downsample_filter downsampling input pointcloud link outlier_filter remove points caused by hardware problems, rain drops and small insects as a noise link passthrough_filter remove points on the outside of a range in given field (e.g. x, y, z, intensity) link pointcloud_accumulator accumulate pointclouds for a given amount of time link vector_map_filter remove points on the outside of lane by using vector map link vector_map_inside_area_filter remove points inside of vector map area that has given type by parameter link"},{"location":"sensing/pointcloud_preprocessor/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/pointcloud_preprocessor/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/indices</code> <code>pcl_msgs::msg::Indices</code> reference indices"},{"location":"sensing/pointcloud_preprocessor/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/pointcloud_preprocessor/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>input_frame</code> string \" \" input frame id <code>output_frame</code> string \" \" output frame id <code>max_queue_size</code> int 5 max queue size of input/output topics <code>use_indices</code> bool false flag to use pointcloud indices <code>latched_indices</code> bool false flag to latch pointcloud indices <code>approximate_sync</code> bool false flag to use approximate sync option"},{"location":"sensing/pointcloud_preprocessor/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p><code>pointcloud_preprocessor::Filter</code> is implemented based on pcl_perception [1] because of this issue.</p>"},{"location":"sensing/pointcloud_preprocessor/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/#referencesexternal-links","title":"References/External links","text":"<p>[1] https://github.com/ros-perception/perception_pcl/blob/ros2/pcl_ros/src/pcl_ros/filters/filter.cpp</p>"},{"location":"sensing/pointcloud_preprocessor/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/","title":"blockage_diag","text":""},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#purpose","title":"Purpose","text":"<p>To ensure the performance of LiDAR and safety for autonomous driving, the abnormal condition diagnostics feature is needed. LiDAR blockage is abnormal condition of LiDAR when some unwanted objects stitch to and block the light pulses and return signal. This node's purpose is to detect the existing of blockage on LiDAR and its related size and location.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>This node bases on the no-return region and its location to decide if it is a blockage.</p> <p></p> <p>The logic is showed as below</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#input","title":"Input","text":"Name Type Description <code>~/input/pointcloud_raw_ex</code> <code>sensor_msgs::msg::PointCloud2</code> The raw point cloud data is used to detect the no-return region"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#output","title":"Output","text":"Name Type Description <code>~/output/blockage_diag/debug/blockage_mask_image</code> <code>sensor_msgs::msg::Image</code> The mask image of detected blockage <code>~/output/blockage_diag/debug/ground_blockage_ratio</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> The area ratio of blockage region in ground region <code>~/output/blockage_diag/debug/sky_blockage_ratio</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> The area ratio of blockage region in sky region <code>~/output/blockage_diag/debug/lidar_depth_map</code> <code>sensor_msgs::msg::Image</code> The depth map image of input point cloud"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#parameters","title":"Parameters","text":"Name Type Description <code>blockage_ratio_threshold</code> float The threshold of blockage area ratio <code>blockage_count_threshold</code> float The threshold of number continuous blockage frames <code>horizontal_ring_id</code> int The id of horizontal ring of the LiDAR <code>angle_range</code> vector The effective range of LiDAR <code>vertical_bins</code> int The LiDAR channel number <code>model</code> string The LiDAR model <code>buffering_frames</code> uint The number of buffering [range:1-200] <code>buffering_interval</code> uint The interval of buffering"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ol> <li>Only Hesai Pandar40P and Hesai PandarQT were tested. For a new LiDAR, it is neccessary to check order of channel id in vertical distribution manually and modifiy the code.</li> <li>The current method is still limited for dust type of blockage when dust particles are sparsely distributed.</li> </ol>"},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#referencesexternal-links","title":"References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/blockage_diag/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/","title":"concatenate_data","text":""},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#purpose","title":"Purpose","text":"<p>Many self-driving cars combine multiple LiDARs to expand the sensing range. Therefore, a function to combine a plurality of point clouds is required.</p> <p>To combine multiple sensor data with a similar timestamp, the message_filters is often used in the ROS-based system, but this requires the assumption that all inputs can be received. Since safety must be strongly considered in autonomous driving, the point clouds concatenate node must be designed so that even if one sensor fails, the remaining sensor information can be output.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The figure below represents the reception time of each sensor data and how it is combined in the case.</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#input","title":"Input","text":"Name Type Description <code>~/input/twist</code> <code>autoware_auto_vehicle_msgs::msg::VelocityReport</code> The vehicle odometry is used to interpolate the timestamp of each sensor data"},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::Pointcloud2</code> concatenated point clouds"},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#parameters","title":"Parameters","text":"Name Type Default Value Description <code>input/points</code> vector of string [] input topic names that type must be <code>sensor_msgs::msg::Pointcloud2</code> <code>input_frame</code> string \"\" input frame id <code>output_frame</code> string \"\" output frame id <code>max_queue_size</code> int 5 max queue size of input/output topics"},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>timeout_sec</code> double 0.1 tolerance of time to publish next pointcloud [s]When this time limit is exceeded, the filter concatenates and publishes pointcloud, even if not all the point clouds are subscribed."},{"location":"sensing/pointcloud_preprocessor/docs/concatenate-data/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>It is necessary to assume that the vehicle odometry value exists, the sensor data and odometry timestamp are correct, and the TF from <code>base_link</code> to <code>sensor_frame</code> is also correct.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/","title":"crop_box_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#purpose","title":"Purpose","text":"<p>The <code>crop_box_filter</code> is a node that removes points with in a given box region. This filter is used to remove the points that hit the vehicle itself.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p><code>pcl::CropBox</code> is used, which filters all points inside a given box.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherit <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherit <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>min_x</code> double -1.0 x-coordinate minimum value for crop range <code>max_x</code> double 1.0 x-coordinate maximum value for crop range <code>min_y</code> double -1.0 y-coordinate minimum value for crop range <code>max_y</code> double 1.0 y-coordinate maximum value for crop range <code>min_z</code> double -1.0 z-coordinate minimum value for crop range <code>max_z</code> double 1.0 z-coordinate maximum value for crop range"},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/crop-box-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/","title":"distortion_corrector","text":""},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#purpose","title":"Purpose","text":"<p>The <code>distortion_corrector</code> is a node that compensates pointcloud distortion caused by ego vehicle's movement during 1 scan.</p> <p>Since the LiDAR sensor scans by rotating an internal laser, the resulting point cloud will be distorted if the ego-vehicle moves during a single scan (as shown by the figure below). The node corrects this by interpolating sensor data using odometry of ego-vehicle.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<ul> <li>Use the equations below (specific to the Velodyne 32C sensor) to obtain an accurate timestamp for each scan data point.</li> <li>Use twist information to determine the distance the ego-vehicle has travelled between the time that the scan started and the corrected timestamp of each point, and then correct the position of the point.</li> </ul> <p>The offset equation is given by $ TimeOffset = (55.296 \\mu s SequenceIndex) + (2.304 \\mu s DataPointIndex) $</p> <p>To calculate the exact point time, add the TimeOffset to the timestamp. $ ExactPointTime = TimeStamp + TimeOffset $</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/twist</code> <code>geometry_msgs::msg::TwistWithCovarianceStamped</code> twist <code>~/input/imu</code> <code>sensor_msgs::msg::Imu</code> imu data"},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>timestamp_field_name</code> string \"time_stamp\" time stamp field name <code>use_imu</code> bool true use gyroscope for yaw rate if true, else use vehicle status"},{"location":"sensing/pointcloud_preprocessor/docs/distortion-corrector/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/","title":"downsample_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#purpose","title":"Purpose","text":"<p>The <code>downsample_filter</code> is a node that reduces the number of points.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#approximate-downsample-filter","title":"Approximate Downsample Filter","text":"<p><code>pcl::VoxelGridNearestCentroid</code> is used. The algorithm is described in tier4_pcl_extensions</p>"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#random-downsample-filter","title":"Random Downsample Filter","text":"<p><code>pcl::RandomSample</code> is used, which points are sampled with uniform probability.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#voxel-grid-downsample-filter","title":"Voxel Grid Downsample Filter","text":"<p><code>pcl::VoxelGrid</code> is used, which points in each voxel are approximated with their centroid.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>These implementations inherit <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#note-parameters","title":"Note Parameters","text":"<p>These implementations inherit <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#core-parameters","title":"Core Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#approximate-downsample-filter_1","title":"Approximate Downsample Filter","text":"Name Type Default Value Description <code>voxel_size_x</code> double 0.3 voxel size x [m] <code>voxel_size_y</code> double 0.3 voxel size y [m] <code>voxel_size_z</code> double 0.1 voxel size z [m]"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#random-downsample-filter_1","title":"Random Downsample Filter","text":"Name Type Default Value Description <code>sample_num</code> int 1500 number of indices to be sampled"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#voxel-grid-downsample-filter_1","title":"Voxel Grid Downsample Filter","text":"Name Type Default Value Description <code>voxel_size_x</code> double 0.3 voxel size x [m] <code>voxel_size_y</code> double 0.3 voxel size y [m] <code>voxel_size_z</code> double 0.1 voxel size z [m]"},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/downsample-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/","title":"dual_return_outlier_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#purpose","title":"Purpose","text":"<p>The purpose is to remove point cloud noise such as fog and rain and publish visibility as a diagnostic topic.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>This node can remove rain and fog by considering the light reflected from the object in two stages according to the attenuation factor. The <code>dual_return_outlier_filter</code> is named because it removes noise using data that contains two types of return values separated by attenuation factor, as shown in the figure below.</p> <p></p> <p>Therefore, in order to use this node, the sensor driver must publish custom data including <code>return_type</code>. please refer to PointXYZIRADRT data structure.</p> <p>Another feature of this node is that it publishes visibility as a diagnostic topic. With this function, for example, in heavy rain, the sensing module can notify that the processing performance has reached its limit, which can lead to ensuring the safety of the vehicle.</p> <p>In some complicated road scenes where normal objects also reflect the light in two stages, for instance plants, leaves, some plastic net etc, the visibility faces some drop in fine weather condition. To deal with that, optional settings of a region of interest (ROI) are added.</p> <ol> <li><code>Fixed_xyz_ROI</code> mode: Visibility estimation based on the weak points in a fixed cuboid surrounding region of ego-vehicle, defined by x, y, z in base_link perspective.</li> <li><code>Fixed_azimuth_ROI</code> mode: Visibility estimation based on the weak points in a fixed surrounding region of ego-vehicle, defined by azimuth and distance of LiDAR perspective.</li> </ol> <p>When select 2 fixed ROI modes, due to the range of weak points is shrink, the sensitivity of visibility is decrease so that a trade of between <code>weak_first_local_noise_threshold</code> and <code>visibility_threshold</code> is needed.</p> <p></p> <p>The figure below describe how the node works. </p> <p>The below picture shows the ROI options.</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#output","title":"Output","text":"Name Type Description <code>/dual_return_outlier_filter/frequency_image</code> <code>sensor_msgs::msg::Image</code> The histogram image that represent visibility <code>/dual_return_outlier_filter/visibility</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> A representation of visibility with a value from 0 to 1 <code>/dual_return_outlier_filter/pointcloud_noise</code> <code>sensor_msgs::msg::Pointcloud2</code> The pointcloud removed as noise"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>vertical_bins</code> int The number of vertical bin for visibility histogram <code>max_azimuth_diff</code> float Threshold for ring_outlier_filter <code>weak_first_distance_ratio</code> double Threshold for ring_outlier_filter <code>general_distance_ratio</code> double Threshold for ring_outlier_filter <code>weak_first_local_noise_threshold</code> int The parameter for determining whether it is noise <code>visibility_error_threshold</code> float When the percentage of white pixels in the binary histogram falls below this parameter the diagnostic status becomes ERR <code>visibility_warn_threshold</code> float When the percentage of white pixels in the binary histogram falls below this parameter the diagnostic status becomes WARN <code>roi_mode</code> string The name of ROI mode for switching <code>min_azimuth_deg</code> float The left limit of azimuth for <code>Fixed_azimuth_ROI</code> mode <code>max_azimuth_deg</code> float The right limit of azimuth for <code>Fixed_azimuth_ROI</code> mode <code>max_distance</code> float The limit distance for for <code>Fixed_azimuth_ROI</code> mode <code>x_max</code> float Maximum of x for <code>Fixed_xyz_ROI</code> mode <code>x_min</code> float Minimum of x for <code>Fixed_xyz_ROI</code> mode <code>y_max</code> float Maximum of y for <code>Fixed_xyz_ROI</code> mode <code>y_min</code> float Minimum of y for <code>Fixed_xyz_ROI</code> mode <code>z_max</code> float Maximum of z for <code>Fixed_xyz_ROI</code> mode <code>z_min</code> float Minimum of z for <code>Fixed_xyz_ROI</code> mode"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Not recommended for use as it is under development. Input data must be <code>PointXYZIRADRT</code> type data including <code>return_type</code>.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#referencesexternal-links","title":"References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/dual-return-outlier-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/","title":"outlier_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#purpose","title":"Purpose","text":"<p>The <code>outlier_filter</code> is a package for filtering outlier of points.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"Filter Name Description Detail radius search 2d outlier filter A method of removing point cloud noise based on the number of points existing within a certain radius link ring outlier filter A method of operating scan in chronological order and removing noise based on the rate of change in the distance between points link voxel grid outlier filter A method of removing point cloud noise based on the number of points existing within a voxel link dual return outlier filter (under development) A method of removing rain and fog by considering the light reflected from the object in two stages according to the attenuation factor. link"},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/outlier-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/","title":"passthrough_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#purpose","title":"Purpose","text":"<p>The <code>passthrough_filter</code> is a node that removes points on the outside of a range in a given field (e.g. x, y, z, intensity, ring, etc).</p>"},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/indices</code> <code>pcl_msgs::msg::Indices</code> reference indices"},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>filter_limit_min</code> int 0 minimum allowed field value <code>filter_limit_max</code> int 127 maximum allowed field value <code>filter_field_name</code> string \"ring\" filtering field name <code>keep_organized</code> bool false flag to keep indices structure <code>filter_limit_negative</code> bool false flag to return whether the data is inside limit or not"},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/passthrough-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/","title":"pointcloud_accumulator","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#purpose","title":"Purpose","text":"<p>The <code>pointcloud_accumulator</code> is a node that accumulates pointclouds for a given amount of time.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points"},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>accumulation_time_sec</code> double 2.0 accumulation period [s] <code>pointcloud_buffer_size</code> int 50 buffer size"},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/pointcloud-accumulator/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/","title":"radius_search_2d_outlier_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#purpose","title":"Purpose","text":"<p>The purpose is to remove point cloud noise such as insects and rain.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>RadiusOutlierRemoval filter which removes all indices in its input cloud that don\u2019t have at least some number of neighbors within a certain range.</p> <p>The description above is quoted from [1]. <code>pcl::search::KdTree</code> [2] is used to implement this package.</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>min_neighbors</code> int If points in the circle centered on reference point is less than <code>min_neighbors</code>, a reference point is judged as outlier <code>search_radius</code> double Searching number of points included in <code>search_radius</code>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>Since the method is to count the number of points contained in the cylinder with the direction of gravity as the direction of the cylinder axis, it is a prerequisite that the ground has been removed.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#referencesexternal-links","title":"References/External links","text":"<p>[1] https://pcl.readthedocs.io/projects/tutorials/en/latest/remove_outliers.html</p> <p>[2] https://pcl.readthedocs.io/projects/tutorials/en/latest/kdtree_search.html#kdtree-search</p>"},{"location":"sensing/pointcloud_preprocessor/docs/radius-search-2d-outlier-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/","title":"ring_outlier_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#purpose","title":"Purpose","text":"<p>The purpose is to remove point cloud noise such as insects and rain.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>A method of operating scan in chronological order and removing noise based on the rate of change in the distance between points</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>distance_ratio</code> double 1.03 <code>object_length_threshold</code> double 0.1 <code>num_points_threshold</code> int 4"},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>It is a prerequisite to input a scan point cloud in chronological order. In this repository it is defined as blow structure (please refer to PointXYZIRADT).</p> <ul> <li>X: x</li> <li>Y: y</li> <li>z: z</li> <li>I: intensity</li> <li>R: ring</li> <li>A :azimuth</li> <li>D: distance</li> <li>T: time_stamp</li> </ul>"},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/ring-outlier-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/","title":"vector_map_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#purpose","title":"Purpose","text":"<p>The <code>vector_map_filter</code> is a node that removes points on the outside of lane by using vector map.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#input","title":"Input","text":"Name Type Description <code>~/input/points</code> <code>sensor_msgs::msg::PointCloud2</code> reference points <code>~/input/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> vector map"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#output","title":"Output","text":"Name Type Description <code>~/output/points</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>voxel_size_x</code> double 0.04 voxel size <code>voxel_size_y</code> double 0.04 voxel size"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/","title":"vector_map_inside_area_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#purpose","title":"Purpose","text":"<p>The <code>vector_map_inside_area_filter</code> is a node that removes points inside the vector map area that has given type by parameter.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<ul> <li>Get the vector map area that has given type by parameter of <code>polygon_type</code></li> <li>Extract the vector map area that intersects with the bounding box of input points to reduce the calculation cost</li> <li>Create the 2D polygon from the extracted vector map area</li> <li>Remove input points inside the polygon</li> </ul>"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, so please see also README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#input","title":"Input","text":"Name Type Description <code>~/input</code> <code>sensor_msgs::msg::PointCloud2</code> input points <code>~/input/vector_map</code> <code>autoware_auto_mapping_msgs::msg::HADMapBin</code> vector map used for filtering points"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#output","title":"Output","text":"Name Type Description <code>~/output</code> <code>sensor_msgs::msg::PointCloud2</code> filtered points"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#core-parameters","title":"Core Parameters","text":"Name Type Description <code>polygon_type</code> string polygon type to be filtered"},{"location":"sensing/pointcloud_preprocessor/docs/vector-map-inside-area-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/","title":"voxel_grid_outlier_filter","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#purpose","title":"Purpose","text":"<p>The purpose is to remove point cloud noise such as insects and rain.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Removing point cloud noise based on the number of points existing within a voxel. The radius_search_2d_outlier_filter is better for accuracy, but this method has the advantage of low calculation cost.</p> <p></p>"},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#inputs-outputs","title":"Inputs / Outputs","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#parameters","title":"Parameters","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#node-parameters","title":"Node Parameters","text":"<p>This implementation inherits <code>pointcloud_preprocessor::Filter</code> class, please refer README.</p>"},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>voxel_size_x</code> double 0.3 the voxel size along x-axis [m] <code>voxel_size_y</code> double 0.3 the voxel size along y-axis [m] <code>voxel_size_z</code> double 0.1 the voxel size along z-axis [m] <code>voxel_points_threshold</code> int 2 the minimum number of points in each voxel"},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#optional-referencesexternal-links","title":"(Optional) References/External links","text":""},{"location":"sensing/pointcloud_preprocessor/docs/voxel-grid-outlier-filter/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/radar_scan_to_pointcloud2/","title":"radar_scan_to_pointcloud2","text":""},{"location":"sensing/radar_scan_to_pointcloud2/#radar_scan_to_pointcloud2_node","title":"radar_scan_to_pointcloud2_node","text":"<ul> <li>Convert from <code>radar_msgs::msg::RadarScan</code> to <code>sensor_msgs::msg::PointCloud2</code></li> <li>Calculation cost O(n)<ul> <li>n: The number of radar return</li> </ul> </li> </ul>"},{"location":"sensing/radar_scan_to_pointcloud2/#input-topics","title":"Input topics","text":"Name Type Description input/radar radar_msgs::msg::RadarScan RadarScan"},{"location":"sensing/radar_scan_to_pointcloud2/#output-topics","title":"Output topics","text":"Name Type Description output/amplitude_pointcloud sensor_msgs::msg::PointCloud2 PointCloud2 radar pointcloud whose intensity is amplitude. output/doppler_pointcloud sensor_msgs::msg::PointCloud2 PointCloud2 radar pointcloud whose intensity is doppler velocity."},{"location":"sensing/radar_scan_to_pointcloud2/#parameters","title":"Parameters","text":"Name Type Description publish_amplitude_pointcloud bool Whether publish radar pointcloud whose intensity is amplitude. Default is <code>true</code>. publish_doppler_pointcloud bool Whether publish radar pointcloud whose intensity is doppler velocity. Default is <code>false</code>."},{"location":"sensing/radar_scan_to_pointcloud2/#how-to-launch","title":"How to launch","text":"<pre><code>ros2 launch radar_scan_to_pointcloud2 radar_scan_to_pointcloud2.launch.xml\n</code></pre>"},{"location":"sensing/radar_static_pointcloud_filter/","title":"radar_static_pointcloud_filter","text":""},{"location":"sensing/radar_static_pointcloud_filter/#radar_static_pointcloud_filter_node","title":"radar_static_pointcloud_filter_node","text":"<p>Extract static/dynamic radar pointcloud by using doppler velocity and ego motion. Calculation cost is O(n). <code>n</code> is the number of radar pointcloud.</p>"},{"location":"sensing/radar_static_pointcloud_filter/#input-topics","title":"Input topics","text":"Name Type Description input/radar radar_msgs::msg::RadarScan RadarScan input/odometry nav_msgs::msg::Odometry Ego vehicle odometry topic"},{"location":"sensing/radar_static_pointcloud_filter/#output-topics","title":"Output topics","text":"Name Type Description output/static_radar_scan radar_msgs::msg::RadarScan static radar pointcloud output/dynamic_radar_scan radar_msgs::msg::RadarScan dynamic radar pointcloud"},{"location":"sensing/radar_static_pointcloud_filter/#parameters","title":"Parameters","text":"Name Type Description doppler_velocity_sd double Standard deviation for radar doppler velocity. [m/s]"},{"location":"sensing/radar_static_pointcloud_filter/#how-to-launch","title":"How to launch","text":"<pre><code>ros2 launch radar_static_pointcloud_filter radar_static_pointcloud_filter.launch\n</code></pre>"},{"location":"sensing/radar_static_pointcloud_filter/#algorithm","title":"Algorithm","text":""},{"location":"sensing/radar_threshold_filter/","title":"radar_threshold_filter","text":""},{"location":"sensing/radar_threshold_filter/#radar_threshold_filter_node","title":"radar_threshold_filter_node","text":"<p>Remove noise from radar return by threshold.</p> <ul> <li>Amplitude filter: Low amplitude consider noise</li> <li>FOV filter: Pointcloud from radar's FOV edge occur perturbation</li> <li>Range filter: Too near pointcloud often occur noise</li> </ul> <p>Calculation cost is O(n). <code>n</code> is the number of radar return.</p>"},{"location":"sensing/radar_threshold_filter/#input-topics","title":"Input topics","text":"Name Type Description input/radar radar_msgs/msg/RadarScan.msg Radar pointcloud data"},{"location":"sensing/radar_threshold_filter/#output-topics","title":"Output topics","text":"Name Type Description output/radar radar_msgs/msg/RadarScan.msg Filtered radar pointcloud"},{"location":"sensing/radar_threshold_filter/#parameters","title":"Parameters","text":"<ul> <li>For node parameter</li> </ul> Name Type Description is_amplitude_filter bool if this parameter is true, apply amplitude filter (publish amplitude_min &lt; amplitude &lt; amplitude_max) amplitude_min double [dBm^2] amplitude_max double [dBm^2] is_range_filter bool if this parameter is true, apply range filter (publish range_min &lt; range &lt; range_max) range_min double [m] range_max double [m] is_azimuth_filter bool if this parameter is true, apply angle filter (publish azimuth_min &lt; range &lt; azimuth_max) azimuth_min double [rad] azimuth_max double [rad] is_z_filter bool if this parameter is true, apply z position filter (publish z_min &lt; z &lt; z_max) z_min double [m] z_max double [m]"},{"location":"sensing/radar_threshold_filter/#how-to-launch","title":"How to launch","text":"<pre><code>ros2 launch radar_threshold_filter radar_threshold_filter.launch.xml\n</code></pre>"},{"location":"sensing/tier4_pcl_extensions/","title":"tier4_pcl_extensions","text":""},{"location":"sensing/tier4_pcl_extensions/#purpose","title":"Purpose","text":"<p>The <code>tier4_pcl_extensions</code> is a pcl extension library. The voxel grid filter in this package works with a different algorithm than the original one.</p>"},{"location":"sensing/tier4_pcl_extensions/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"sensing/tier4_pcl_extensions/#original-algorithm-1","title":"Original Algorithm [1]","text":"<ol> <li>create a 3D voxel grid over the input pointcloud data</li> <li>calculate centroid in each voxel</li> <li>all the points are approximated with their centroid</li> </ol>"},{"location":"sensing/tier4_pcl_extensions/#extended-algorithm","title":"Extended Algorithm","text":"<ol> <li>create a 3D voxel grid over the input pointcloud data</li> <li>calculate centroid in each voxel</li> <li>all the points are approximated with the closest point to their centroid</li> </ol>"},{"location":"sensing/tier4_pcl_extensions/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/tier4_pcl_extensions/#parameters","title":"Parameters","text":""},{"location":"sensing/tier4_pcl_extensions/#assumptions-known-limits","title":"Assumptions / Known limits","text":""},{"location":"sensing/tier4_pcl_extensions/#optional-error-detection-and-handling","title":"(Optional) Error detection and handling","text":""},{"location":"sensing/tier4_pcl_extensions/#optional-performance-characterization","title":"(Optional) Performance characterization","text":""},{"location":"sensing/tier4_pcl_extensions/#optional-referencesexternal-links","title":"(Optional) References/External links","text":"<p>[1] https://pointclouds.org/documentation/tutorials/voxel_grid.html</p>"},{"location":"sensing/tier4_pcl_extensions/#optional-future-extensions-unimplemented-parts","title":"(Optional) Future extensions / Unimplemented parts","text":""},{"location":"sensing/vehicle_velocity_converter/","title":"vehicle_velocity_converter","text":""},{"location":"sensing/vehicle_velocity_converter/#purpose","title":"Purpose","text":"<p>This package converts autoware_auto_vehicle_msgs::msg::VehicleReport message to geometry_msgs::msg::TwistWithCovarianceStamped for gyro odometer node.</p>"},{"location":"sensing/vehicle_velocity_converter/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"sensing/vehicle_velocity_converter/#input","title":"Input","text":"Name Type Description <code>velocity_status</code> <code>autoware_auto_vehicle_msgs::msg::VehicleReport</code> vehicle velocity"},{"location":"sensing/vehicle_velocity_converter/#output","title":"Output","text":"Name Type Description <code>twist_with_covariance</code> <code>geometry_msgs::msg::TwistWithCovarianceStamped</code> twist with covariance converted from VehicleReport"},{"location":"sensing/vehicle_velocity_converter/#parameters","title":"Parameters","text":"Name Type Description <code>speed_scale_factor</code> double speed scale factor (ideal value is 1.0) <code>frame_id</code> string frame id for output message <code>velocity_stddev_xx</code> double standard deviation for vx <code>angular_velocity_stddev_zz</code> double standard deviation for yaw rate"},{"location":"simulator/dummy_perception_publisher/","title":"dummy_perception_publisher","text":""},{"location":"simulator/dummy_perception_publisher/#purpose","title":"Purpose","text":"<p>This node publishes the result of the dummy detection with the type of perception.</p>"},{"location":"simulator/dummy_perception_publisher/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"simulator/dummy_perception_publisher/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"simulator/dummy_perception_publisher/#input","title":"Input","text":"Name Type Description <code>/tf</code> <code>tf2_msgs/TFMessage</code> TF (self-pose) <code>input/object</code> <code>dummy_perception_publisher::msg::Object</code> dummy detection objects"},{"location":"simulator/dummy_perception_publisher/#output","title":"Output","text":"Name Type Description <code>output/dynamic_object</code> <code>tier4_perception_msgs::msg::DetectedObjectsWithFeature</code> Publishes objects <code>output/points_raw</code> <code>sensor_msgs::msg::PointCloud2</code> point cloud of objects"},{"location":"simulator/dummy_perception_publisher/#parameters","title":"Parameters","text":"Name Type Default Value Explanation <code>visible_range</code> double 100.0 sensor visible range [m] <code>detection_successful_rate</code> double 0.8 sensor detection rate. (min) 0.0 - 1.0(max) <code>enable_ray_tracing</code> bool true if True, use ray tracking <code>use_object_recognition</code> bool true if True, publish objects topic"},{"location":"simulator/dummy_perception_publisher/#node-parameters","title":"Node Parameters","text":"<p>None.</p>"},{"location":"simulator/dummy_perception_publisher/#core-parameters","title":"Core Parameters","text":"<p>None.</p>"},{"location":"simulator/dummy_perception_publisher/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"simulator/fault_injection/","title":"fault_injection","text":""},{"location":"simulator/fault_injection/#purpose","title":"Purpose","text":"<p>This package is used to convert pseudo system faults from PSim to Diagnostics and notify Autoware. The component diagram is as follows:</p> <p></p>"},{"location":"simulator/fault_injection/#test","title":"Test","text":"<pre><code>source install/setup.bash\ncd fault_injection\nlaunch_test test/test_fault_injection_node.test.py\n</code></pre>"},{"location":"simulator/fault_injection/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"simulator/fault_injection/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"simulator/fault_injection/#input","title":"Input","text":"Name Type Description <code>~/input/simulation_events</code> <code>tier4_simulation_msgs::msg::SimulationEvents</code> simulation events"},{"location":"simulator/fault_injection/#output","title":"Output","text":"<p>None.</p>"},{"location":"simulator/fault_injection/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"simulator/fault_injection/#node-parameters","title":"Node Parameters","text":"<p>None.</p>"},{"location":"simulator/fault_injection/#core-parameters","title":"Core Parameters","text":"<p>None.</p>"},{"location":"simulator/fault_injection/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/","title":"simple_planning_simulator","text":""},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#purpose-use-cases","title":"Purpose / Use cases","text":"<p>This node simulates the vehicle motion for a vehicle command in 2D using a simple vehicle model.</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#design","title":"Design","text":"<p>The purpose of this simulator is for the integration test of planning and control modules. This does not simulate sensing or perception, but is implemented in pure c++ only and works without GPU.</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<ul> <li>It simulates only in 2D motion.</li> <li>It does not perform physical operations such as collision and sensing, but only calculates the integral results of vehicle dynamics.</li> </ul>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#inputs-outputs-api","title":"Inputs / Outputs / API","text":""},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#input","title":"input","text":"<ul> <li>input/initialpose [<code>geometry_msgs/msg/PoseWithCovarianceStamped</code>] : for initial pose</li> <li>input/ackermann_control_command [<code>autoware_auto_msgs/msg/AckermannControlCommand</code>] : target command to drive a vehicle</li> <li>input/manual_ackermann_control_command [<code>autoware_auto_msgs/msg/AckermannControlCommand</code>] : manual target command to drive a vehicle (used when control_mode_request = Manual)</li> <li>input/gear_command [<code>autoware_auto_vehicle_msgs/msg/GearCommand</code>] : target gear command.</li> <li>input/manual_gear_command [<code>autoware_auto_vehicle_msgs/msg/GearCommand</code>] : target gear command (used when control_mode_request = Manual)</li> <li>input/turn_indicators_command [<code>autoware_auto_vehicle_msgs/msg/TurnIndicatorsCommand</code>] : target turn indicator command</li> <li>input/hazard_lights_command [<code>autoware_auto_vehicle_msgs/msg/HazardLightsCommand</code>] : target hazard lights command</li> <li>input/control_mode_request [<code>tier4_vehicle_msgs::srv::ControlModeRequest</code>] : mode change for Auto/Manual driving</li> </ul>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#output","title":"output","text":"<ul> <li>/tf [<code>tf2_msgs/msg/TFMessage</code>] : simulated vehicle pose (base_link)</li> <li>/output/odometry [<code>nav_msgs/msg/Odometry</code>] : simulated vehicle pose and twist</li> <li>/output/steering [<code>autoware_auto_vehicle_msgs/msg/SteeringReport</code>] : simulated steering angle</li> <li>/output/control_mode_report [<code>autoware_auto_vehicle_msgs/msg/ControlModeReport</code>] : current control mode (Auto/Manual)</li> <li>/output/gear_report [<code>autoware_auto_vehicle_msgs/msg/ControlModeReport</code>] : simulated gear</li> <li>/output/turn_indicators_report [<code>autoware_auto_vehicle_msgs/msg/ControlModeReport</code>] : simulated turn indicator status</li> <li>/output/hazard_lights_report [<code>autoware_auto_vehicle_msgs/msg/ControlModeReport</code>] : simulated hazard lights status</li> </ul>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#common-parameters","title":"Common Parameters","text":"Name Type Description Default value simulated_frame_id string set to the child_frame_id in output tf \"base_link\" origin_frame_id string set to the frame_id in output tf \"odom\" initialize_source string If \"ORIGIN\", the initial pose is set at (0,0,0). If \"INITIAL_POSE_TOPIC\", node will wait until the <code>input/initialpose</code> topic is published. \"INITIAL_POSE_TOPIC\" add_measurement_noise bool If true, the Gaussian noise is added to the simulated results. true pos_noise_stddev double Standard deviation for position noise 0.01 rpy_noise_stddev double Standard deviation for Euler angle noise 0.0001 vel_noise_stddev double Standard deviation for longitudinal velocity noise 0.0 angvel_noise_stddev double Standard deviation for angular velocity noise 0.0 steer_noise_stddev double Standard deviation for steering angle noise 0.0001"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#vehicle-model-parameters","title":"Vehicle Model Parameters","text":""},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#vehicle_model_type-options","title":"vehicle_model_type options","text":"<ul> <li><code>IDEAL_STEER_VEL</code></li> <li><code>IDEAL_STEER_ACC</code></li> <li><code>IDEAL_STEER_ACC_GEARED</code></li> <li><code>DELAY_STEER_VEL</code></li> <li><code>DELAY_STEER_ACC</code></li> <li><code>DELAY_STEER_ACC_GEARED</code></li> </ul> <p>The <code>IDEAL</code> model moves ideally as commanded, while the <code>DELAY</code> model moves based on a 1st-order with time delay model. The <code>STEER</code> means the model receives the steer command. The <code>VEL</code> means the model receives the target velocity command, while the <code>ACC</code> model receives the target acceleration command. The <code>GEARED</code> suffix means that the motion will consider the gear command: the vehicle moves only one direction following the gear.</p> <p>The table below shows which models correspond to what parameters. The model names are written in abbreviated form (e.g. IDEAL_STEER_VEL = I_ST_V).</p> Name Type Description I_ST_V I_ST_A I_ST_A_G D_ST_V D_ST_A D_ST_A_G Default value unit acc_time_delay double dead time for the acceleration input x x x x o o 0.1 [s] steer_time_delay double dead time for the steering input x x x o o o 0.24 [s] vel_time_delay double dead time for the velocity input x x x o x x 0.25 [s] acc_time_constant double time constant of the 1st-order acceleration dynamics x x x x o o 0.1 [s] steer_time_constant double time constant of the 1st-order steering dynamics x x x o o o 0.27 [s] vel_time_constant double time constant of the 1st-order velocity dynamics x x x o x x 0.5 [s] vel_lim double limit of velocity x x x o o o 50.0 [m/s] vel_rate_lim double limit of acceleration x x x o o o 7.0 [m/ss] steer_lim double limit of steering angle x x x o o o 1.0 [rad] steer_rate_lim double limit of steering angle change rate x x x o o o 5.0 [rad/s] <p>Note: The steering/velocity/acceleration dynamics is modeled by a first order system with a deadtime in a delay model. The definition of the time constant is the time it takes for the step response to rise up to 63% of its final value. The deadtime is a delay in the response to a control input.</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#default-tf-configuration","title":"Default TF configuration","text":"<p>Since the vehicle outputs <code>odom</code>-&gt;<code>base_link</code> tf, this simulator outputs the tf with the same frame_id configuration. In the simple_planning_simulator.launch.py, the node that outputs the <code>map</code>-&gt;<code>odom</code> tf, that usually estimated by the localization module (e.g. NDT), will be launched as well. Since the tf output by this simulator module is an ideal value, <code>odom</code>-&gt;<code>map</code> will always be 0.</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#error-detection-and-handling","title":"Error detection and handling","text":"<p>The only validation on inputs being done is testing for a valid vehicle model type.</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#security-considerations","title":"Security considerations","text":""},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#references-external-links","title":"References / External links","text":"<p>This is originally developed in the Autoware.AI. See the link below.</p> <p>https://github.com/Autoware-AI/simulation/tree/master/wf_simulator</p>"},{"location":"simulator/simple_planning_simulator/design/simple_planning_simulator-design/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<ul> <li>Improving the accuracy of vehicle models (e.g., adding steering dead zones and slip behavior)</li> <li>Cooperation with modules that output pseudo pointcloud or pseudo perception results</li> </ul>"},{"location":"system/bluetooth_monitor/","title":"bluetooth_monitor","text":""},{"location":"system/bluetooth_monitor/#description","title":"Description","text":"<p>This node monitors a Bluetooth connection to a wireless device by using L2ping. L2ping generates PING echo command on Bluetooth L2CAP layer, and it is able to receive and check echo response from a wireless device.</p>"},{"location":"system/bluetooth_monitor/#block-diagram","title":"Block diagram","text":"<p>L2ping is only allowed for root by default, so this package provides the following approach to minimize security risks as much as possible:</p> <ul> <li>Provide a small program named <code>l2ping_service</code> which performs L2ping and provides wireless device information to <code>bluetooth_monitor</code> by using socket programming.</li> <li><code>bluetooth_monitor</code> is able to know wireless device information and L2ping status as an unprivileged user since those information are sent by socket communication.</li> </ul> <p></p>"},{"location":"system/bluetooth_monitor/#output","title":"Output","text":""},{"location":"system/bluetooth_monitor/#bluetooth_monitor-bluetooth_connection","title":"bluetooth_monitor: bluetooth_connection","text":"<p>[summary]</p> level message OK OK WARN RTT warning ERROR Lost Function error <p>[values]</p> key value (example) Device [0-9]: Status OK / RTT warning / Verify error / Lost / Ping rejected / Function error Device [0-9]: Name Wireless Controller Device [0-9]: Manufacturer MediaTek, Inc. Device [0-9]: Address AA:BB:CC:DD:EE:FF Device [0-9]: RTT 0.00ms <ul> <li>The following key will be added when <code>bluetooth_monitor</code> reports <code>Function error</code>.   ex.) The <code>connect</code> system call failed.</li> </ul> key (example) value (example) Device [0-9]: connect No such file or directory"},{"location":"system/bluetooth_monitor/#parameters","title":"Parameters","text":"Name Type Default Value Explanation <code>port</code> int 7640 Port number to connect to L2ping service. <code>timeout</code> int 5 Wait timeout seconds for the response. <code>rtt_warn</code> float 0.00 RTT(Round-Trip Time) to generate warn. <code>addresses</code> string * List of bluetooth address of wireless devices to monitor. <ul> <li> <p><code>rtt_warn</code></p> <ul> <li>0.00(zero): Disable checking RTT</li> <li>otherwise: Check RTT with specified seconds</li> </ul> </li> </ul> <ul> <li><code>addresses</code><ul> <li>*: All connected devices</li> <li>AA:BB:CC:DD:EE:FF: You can specify a device to monitor by setting a Bluetooth address</li> </ul> </li> </ul>"},{"location":"system/bluetooth_monitor/#instructions-before-starting","title":"Instructions before starting","text":"<ul> <li>You can skip this instructions if you run <code>l2ping_service</code> as root user.</li> </ul> <ol> <li> <p>Assign capability to <code>l2ping_service</code> since L2ping requires <code>cap_net_raw+eip</code> capability.</p> <pre><code>sudo setcap 'cap_net_raw+eip' ./build/bluetooth_monitor/l2ping_service\n</code></pre> </li> <li> <p>Run <code>l2ping_service</code> and <code>bluetooth_monitor</code>.</p> <pre><code>./build/bluetooth_monitor/l2ping_service\nros2 launch bluetooth_monitor bluetooth_monitor.launch.xml\n</code></pre> </li> </ol>"},{"location":"system/bluetooth_monitor/#known-limitations-and-issues","title":"Known limitations and issues","text":"<p>None.</p>"},{"location":"system/default_ad_api/","title":"default_ad_api","text":"<p>This package is a default implementation AD API.</p> <ul> <li>autoware state (backward compatibility)</li> <li>fail-safe</li> <li>interface</li> <li>localization</li> <li>motion</li> <li>operation mode</li> <li>routing</li> </ul>"},{"location":"system/default_ad_api/document/autoware-state/","title":"Autoware state compatibility","text":""},{"location":"system/default_ad_api/document/autoware-state/#overview","title":"Overview","text":"<p>Since <code>/autoware/state</code> was so widely used, default_ad_api creates it from the states of AD API for backwards compatibility. The diagnostic checks that ad_service_state_monitor used to perform have been replaced by component_state_monitor. The service <code>/autoware/shutdown</code> to change autoware state to finalizing is also supported for compatibility.</p> <p></p>"},{"location":"system/default_ad_api/document/autoware-state/#conversion","title":"Conversion","text":"<p>This is the correspondence between AD API states and autoware states. The launch state is the data that default_ad_api node holds internally.</p> <p></p>"},{"location":"system/default_ad_api/document/fail-safe/","title":"Fail-safe API","text":""},{"location":"system/default_ad_api/document/fail-safe/#overview","title":"Overview","text":"<p>The fail-safe API simply relays the MRM state. See the autoware-documentation for AD API specifications.</p>"},{"location":"system/default_ad_api/document/interface/","title":"Interface API","text":""},{"location":"system/default_ad_api/document/interface/#overview","title":"Overview","text":"<p>The interface API simply returns a version number. See the autoware-documentation for AD API specifications.</p>"},{"location":"system/default_ad_api/document/localization/","title":"Localization API","text":""},{"location":"system/default_ad_api/document/localization/#overview","title":"Overview","text":"<p>Unify the location initialization method to the service. The topic <code>/initialpose</code> from rviz is now only subscribed to by adapter node and converted to API call. This API call is forwarded to the pose initializer node so it can centralize the state of pose initialization. For other nodes that require initialpose, pose initializer node publishes as <code>/initialpose3d</code>. See the autoware-documentation for AD API specifications.</p> <p></p>"},{"location":"system/default_ad_api/document/motion/","title":"Motion API","text":""},{"location":"system/default_ad_api/document/motion/#overview","title":"Overview","text":"<p>Provides a hook for when the vehicle starts. It is typically used for announcements that call attention to the surroundings. Add a pause function to the vehicle_cmd_gate, and API will control it based on vehicle stopped and start requested. See the autoware-documentation for AD API specifications.</p> <p></p>"},{"location":"system/default_ad_api/document/motion/#states","title":"States","text":"<p>The implementation has more detailed state transitions to manage pause state synchronization. The correspondence with the AD API state is as follows.</p> <p></p>"},{"location":"system/default_ad_api/document/operation-mode/","title":"Operation mode API","text":""},{"location":"system/default_ad_api/document/operation-mode/#overview","title":"Overview","text":"<p>Introduce operation mode. It handles autoware engage, gate_mode, external_cmd_selector and control_mode abstractly. When the mode is changed, it will be in-transition state, and if the transition completion condition to that mode is not satisfied, it will be returned to the previous mode. Also, currently, the condition for mode change is only <code>WaitingForEngage</code> in <code>/autoware/state</code>, and the engage state is shared between modes. After introducing the operation mode, each mode will have a transition available flag. See the autoware-documentation for AD API specifications.</p> <p></p>"},{"location":"system/default_ad_api/document/operation-mode/#states","title":"States","text":"<p>The operation mode has the following state transitions. Disabling autoware control and changing operation mode when autoware control is disabled can be done immediately. Otherwise, enabling autoware control and changing operation mode when autoware control is enabled causes the state will be transition state. If the mode change completion condition is not satisfied within the timeout in the transition state, it will return to the previous mode.</p> <p></p>"},{"location":"system/default_ad_api/document/operation-mode/#compatibility","title":"Compatibility","text":"<p>Ideally, vehicle_cmd_gate and external_cmd_selector should be merged so that the operation mode can be handled directly. However, currently the operation mode transition manager performs the following conversions to match the implementation. The transition manager monitors each topic in the previous interface and synchronizes the operation mode when it changes. When the operation mode is changed with the new interface, the transition manager disables synchronization and changes the operation mode using the previous interface.</p> <p></p>"},{"location":"system/default_ad_api/document/routing/","title":"Routing API","text":""},{"location":"system/default_ad_api/document/routing/#overview","title":"Overview","text":"<p>Unify the route setting method to the service. This API supports two waypoint formats, poses and lanelet segments. The goal and checkpoint topics from rviz is only subscribed to by adapter node and converted to API call. This API call is forwarded to the mission planner node so it can centralize the state of routing. For other nodes that require route, mission planner node publishes as <code>/planning/mission_planning/route</code>. See the autoware-documentation for AD API specifications.</p> <p></p>"},{"location":"system/default_ad_api_helpers/ad_api_adaptors/","title":"ad_api_adaptors","text":""},{"location":"system/default_ad_api_helpers/ad_api_adaptors/#initial_pose_adaptor","title":"initial_pose_adaptor","text":"<p>This node makes it easy to use the localization AD API from RViz. When a initial pose topic is received, call the localization initialize API. This node depends on fitting to map height service.</p> Interface Local Name Global Name Description Subscription initialpose /initialpose The pose for localization initialization. Client fit_map_height /localization/util/fit_map_height To fix initial pose to map height Client - /api/localization/initialize The localization initialize API."},{"location":"system/default_ad_api_helpers/ad_api_adaptors/#routing_adaptor","title":"routing_adaptor","text":"<p>This node makes it easy to use the routing AD API from RViz. When a goal pose topic is received, reset the waypoints and call the API. When a waypoint pose topic is received, append it to the end of the waypoints to call the API. The clear API is called automatically before setting the route.</p> Interface Local Name Global Name Description Subscription ~/input/goal /planning/mission_planning/goal The goal pose of route. Subscription ~/input/waypoint /planning/mission_planning/checkpoint The waypoint pose of route. Client - /api/routing/clear_route The route clear API. Client - /api/routing/set_route_points The route points set API."},{"location":"system/default_ad_api_helpers/automatic_pose_initializer/","title":"automatic_pose_initializer","text":""},{"location":"system/default_ad_api_helpers/automatic_pose_initializer/#automatic_pose_initializer_1","title":"automatic_pose_initializer","text":"<p>This node calls localization initialize API when the localization initialization state is uninitialized. Since the API uses GNSS pose when no pose is specified, initialization using GNSS can be performed automatically.</p> Interface Local Name Global Name Description Subscription - /api/localization/initialization_state The localization initialization state API. Client - /api/localization/initialize The localization initialize API."},{"location":"system/dummy_diag_publisher/","title":"dummy_diag_publisher","text":""},{"location":"system/dummy_diag_publisher/#purpose","title":"Purpose","text":"<p>This package outputs a dummy diagnostic data for debugging and developing.</p>"},{"location":"system/dummy_diag_publisher/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/dummy_diag_publisher/#outputs","title":"Outputs","text":"Name Type Description <code>/diagnostics</code> <code>diagnostic_msgs::msgs::DiagnosticArray</code> Diagnostics outputs"},{"location":"system/dummy_diag_publisher/#parameters","title":"Parameters","text":""},{"location":"system/dummy_diag_publisher/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Explanation Reconfigurable <code>update_rate</code> int <code>10</code> Timer callback period [Hz] false <code>diag_name</code> string <code>diag_name</code> Diag_name set by dummy diag publisher false <code>is_active</code> bool <code>true</code> Force update or not true <code>status</code> DummyDiagPublisherNode::Status <code>0 (OK)</code> diag status set by dummy diag publisher true"},{"location":"system/dummy_diag_publisher/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/dummy_diag_publisher/#usage","title":"Usage","text":"<pre><code>ros2 launch dummy_diag_publisher dummy_diag_publisher.launch.xml\n</code></pre>"},{"location":"system/dummy_infrastructure/","title":"dummy_infrastructure","text":"<p>This is a debug node for infrastructure communication.</p>"},{"location":"system/dummy_infrastructure/#usage","title":"Usage","text":"<pre><code>ros2 launch dummy_infrastructure dummy_infrastructure.launch.xml\nros2 run rqt_reconfigure rqt_reconfigure\n</code></pre>"},{"location":"system/dummy_infrastructure/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/dummy_infrastructure/#inputs","title":"Inputs","text":"Name Type Description <code>~/input/command_array</code> <code>tier4_v2x_msgs::msg::InfrastructureCommandArray</code> Infrastructure command"},{"location":"system/dummy_infrastructure/#outputs","title":"Outputs","text":"Name Type Description <code>~/output/state_array</code> <code>tier4_v2x_msgs::msg::VirtualTrafficLightStateArray</code> Virtual traffic light array"},{"location":"system/dummy_infrastructure/#parameters","title":"Parameters","text":""},{"location":"system/dummy_infrastructure/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Explanation <code>update_rate</code> int <code>10</code> Timer callback period [Hz] <code>use_first_command</code> bool <code>true</code> Consider instrument id or not <code>instrument_id</code> string `` Used as command id <code>approval</code> bool <code>false</code> set approval filed to ros param <code>is_finalized</code> bool <code>false</code> Stop at stop_line if finalization isn't completed"},{"location":"system/dummy_infrastructure/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/emergency_handler/","title":"emergency_handler","text":""},{"location":"system/emergency_handler/#purpose","title":"Purpose","text":"<p>Emergency Handler is a node to select proper MRM from from system failure state contained in HazardStatus.</p>"},{"location":"system/emergency_handler/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"system/emergency_handler/#state-transitions","title":"State Transitions","text":""},{"location":"system/emergency_handler/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/emergency_handler/#input","title":"Input","text":"Name Type Description <code>/system/emergency/hazard_status</code> <code>autoware_auto_system_msgs::msg::HazardStatusStamped</code> Used to select proper MRM from system failure state contained in HazardStatus <code>/control/vehicle_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> Used as reference when generate Emergency Control Command <code>/localization/kinematic_state</code> <code>nav_msgs::msg::Odometry</code> Used to decide whether vehicle is stopped or not <code>/vehicle/status/control_mode</code> <code>autoware_auto_vehicle_msgs::msg::ControlModeReport</code> Used to check vehicle mode: autonomous or manual <code>/system/api/mrm/comfortable_stop/status</code> <code>tier4_system_msgs::msg::MrmBehaviorStatus</code> Used to check if MRM comfortable stop operation is available <code>/system/api/mrm/emergency_stop/status</code> <code>tier4_system_msgs::msg::MrmBehaviorStatus</code> Used to check if MRM emergency stop operation is available"},{"location":"system/emergency_handler/#output","title":"Output","text":"Name Type Description <code>/system/emergency/shift_cmd</code> <code>autoware_auto_vehicle_msgs::msg::GearCommand</code> Required to execute proper MRM (send gear cmd) <code>/system/emergency/hazard_cmd</code> <code>autoware_auto_vehicle_msgs::msg::HazardLightsCommand</code> Required to execute proper MRM (send turn signal cmd) <code>/api/fail_safe/mrm_state</code> <code>autoware_adapi_v1_msgs::msg::MrmState</code> Inform MRM execution state and selected MRM behavior <code>/system/api/mrm/comfortable_stop/operate</code> <code>tier4_system_msgs::srv::OperateMrm</code> Execution order for MRM comfortable stop <code>/system/api/mrm/emergency_stop/operate</code> <code>tier4_system_msgs::srv::OperateMrm</code> Execution order for MRM emergency stop"},{"location":"system/emergency_handler/#parameters","title":"Parameters","text":""},{"location":"system/emergency_handler/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Explanation update_rate int <code>10</code> Timer callback period."},{"location":"system/emergency_handler/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Explanation timeout_hazard_status double <code>0.5</code> If the input <code>hazard_status</code> topic cannot be received for more than <code>timeout_hazard_status</code>, vehicle will make an emergency stop. use_parking_after_stopped bool <code>false</code> If this parameter is true, it will publish PARKING shift command. turning_hazard_on.emergency bool <code>true</code> If this parameter is true, hazard lamps will be turned on during emergency state. use_comfortable_stop bool <code>false</code> If this parameter is true, operate comfortable stop when latent faults occur."},{"location":"system/emergency_handler/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/mrm_comfortable_stop_operator/","title":"mrm_comfortable_stop_operator","text":""},{"location":"system/mrm_comfortable_stop_operator/#purpose","title":"Purpose","text":"<p>MRM comfortable stop operator is a node that generates comfortable stop commands according to the comfortable stop MRM order.</p>"},{"location":"system/mrm_comfortable_stop_operator/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"system/mrm_comfortable_stop_operator/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/mrm_comfortable_stop_operator/#input","title":"Input","text":"Name Type Description <code>~/input/mrm/comfortable_stop/operate</code> <code>tier4_system_msgs::srv::OperateMrm</code> MRM execution order"},{"location":"system/mrm_comfortable_stop_operator/#output","title":"Output","text":"Name Type Description <code>~/output/mrm/comfortable_stop/status</code> <code>tier4_system_msgs::msg::MrmBehaviorStatus</code> MRM execution status <code>~/output/velocity_limit</code> <code>tier4_planning_msgs::msg::VelocityLimit</code> Velocity limit command <code>~/output/velocity_limit/clear</code> <code>tier4_planning_msgs::msg::VelocityLimitClearCommand</code> Velocity limit clear command"},{"location":"system/mrm_comfortable_stop_operator/#parameters","title":"Parameters","text":""},{"location":"system/mrm_comfortable_stop_operator/#node-parameters","title":"Node Parameters","text":"Name Type Default value Explanation update_rate int <code>10</code> Timer callback frequency [Hz]"},{"location":"system/mrm_comfortable_stop_operator/#core-parameters","title":"Core Parameters","text":"Name Type Default value Explanation min_acceleration double <code>-1.0</code> Minimum acceleration for comfortable stop [m/s^2] max_jerk double <code>0.3</code> Maximum jerk for comfortable stop [m/s^3] min_jerk double <code>-0.3</code> Minimum jerk for comfortable stop [m/s^3]"},{"location":"system/mrm_comfortable_stop_operator/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/mrm_emergency_stop_operator/READEME/","title":"mrm_emergency_stop_operator","text":""},{"location":"system/mrm_emergency_stop_operator/READEME/#purpose","title":"Purpose","text":"<p>MRM emergency stop operator is a node that generates emergency stop commands according to the emergency stop MRM order.</p>"},{"location":"system/mrm_emergency_stop_operator/READEME/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"system/mrm_emergency_stop_operator/READEME/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/mrm_emergency_stop_operator/READEME/#input","title":"Input","text":"Name Type Description <code>~/input/mrm/emergency_stop/operate</code> <code>tier4_system_msgs::srv::OperateMrm</code> MRM execution order <code>~/input/control/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> Control command output from the last node of the control component. Used for the initial value of the emergency stop command."},{"location":"system/mrm_emergency_stop_operator/READEME/#output","title":"Output","text":"Name Type Description <code>~/output/mrm/emergency_stop/status</code> <code>tier4_system_msgs::msg::MrmBehaviorStatus</code> MRM execution status <code>~/output/mrm/emergency_stop/control_cmd</code> <code>autoware_auto_control_msgs::msg::AckermannControlCommand</code> Emergency stop command"},{"location":"system/mrm_emergency_stop_operator/READEME/#parameters","title":"Parameters","text":""},{"location":"system/mrm_emergency_stop_operator/READEME/#node-parameters","title":"Node Parameters","text":"Name Type Default value Explanation update_rate int <code>30</code> Timer callback frequency [Hz]"},{"location":"system/mrm_emergency_stop_operator/READEME/#core-parameters","title":"Core Parameters","text":"Name Type Default value Explanation target_acceleration double <code>-2.5</code> Target acceleration for emergency stop [m/s^2] target_jerk double <code>-1.5</code> Target jerk for emergency stop [m/s^3]"},{"location":"system/mrm_emergency_stop_operator/READEME/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/system_error_monitor/","title":"system_error_monitor","text":""},{"location":"system/system_error_monitor/#purpose","title":"Purpose","text":"<p>Autoware Error Monitor has two main functions.</p> <ol> <li>It is to judge the system hazard level from the aggregated diagnostic information of each module of Autoware.</li> <li>It enables automatic recovery from the emergency state.</li> </ol>"},{"location":"system/system_error_monitor/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"system/system_error_monitor/#state-transition","title":"State Transition","text":""},{"location":"system/system_error_monitor/#updateemergencyholdingcondition-flow-chart","title":"updateEmergencyHoldingCondition Flow Chart","text":""},{"location":"system/system_error_monitor/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/system_error_monitor/#input","title":"Input","text":"Name Type Description <code>/diagnostics_agg</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> Diagnostic information aggregated based diagnostic_aggregator setting is used to <code>/autoware/state</code> <code>autoware_auto_system_msgs::msg::AutowareState</code> Required to ignore error during Route, Planning and Finalizing. <code>/control/current_gate_mode</code> <code>tier4_control_msgs::msg::GateMode</code> Required to select the appropriate module from <code>autonomous_driving</code> or <code>external_control</code> <code>/vehicle/control_mode</code> <code>autoware_auto_vehicle_msgs::msg::ControlModeReport</code> Required to not hold emergency during manual driving"},{"location":"system/system_error_monitor/#output","title":"Output","text":"Name Type Description <code>/system/emergency/hazard_status</code> <code>autoware_auto_system_msgs::msg::HazardStatusStamped</code> HazardStatus contains system hazard level, emergency hold status and failure details <code>/diagnostics_err</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> This has the same contents as HazardStatus. This is used for visualization"},{"location":"system/system_error_monitor/#parameters","title":"Parameters","text":""},{"location":"system/system_error_monitor/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Explanation <code>ignore_missing_diagnostics</code> bool <code>false</code> If this parameter is turned off, it will be ignored if required modules have not been received. <code>add_leaf_diagnostics</code> bool <code>true</code> Required to use children diagnostics. <code>diag_timeout_sec</code> double <code>1.0</code> (sec) If required diagnostic is not received for a <code>diag_timeout_sec</code>, the diagnostic state become STALE state. <code>data_ready_timeout</code> double <code>30.0</code> If input topics required for system_error_monitor are not available for <code>data_ready_timeout</code> seconds, autoware_state will translate to emergency state. <code>data_heartbeat_timeout</code> double <code>1.0</code> If input topics required for system_error_monitor are not no longer subscribed for <code>data_heartbeat_timeout</code> seconds, autoware_state will translate to emergency state."},{"location":"system/system_error_monitor/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Explanation <code>hazard_recovery_timeout</code> double <code>5.0</code> The vehicle can recovery to normal driving if emergencies disappear during <code>hazard_recovery_timeout</code>. <code>use_emergency_hold</code> bool <code>false</code> If it is false, the vehicle will return to normal as soon as emergencies disappear. <code>use_emergency_hold_in_manual_driving</code> bool <code>false</code> If this parameter is turned off, emergencies will be ignored during manual driving. <code>emergency_hazard_level</code> int <code>2</code> If hazard_level is more than emergency_hazard_level, autoware state will translate to emergency state"},{"location":"system/system_error_monitor/#yaml-format-for-system_error_monitor","title":"YAML format for system_error_monitor","text":"<p>The parameter key should be filled with the hierarchical diagnostics output by diagnostic_aggregator. Parameters prefixed with <code>required_modules.autonomous_driving</code> are for autonomous driving. Parameters with the <code>required_modules.remote_control</code> prefix are for remote control. If the value is <code>default</code>, the default value will be set.</p> Key Type Default Value Explanation <code>required_modules.autonomous_driving.DIAGNOSTIC_NAME.sf_at</code> string <code>\"none\"</code> Diagnostic level where it becomes Safe Fault. Available options are <code>\"none\"</code>, <code>\"warn\"</code>, <code>\"error\"</code>. <code>required_modules.autonomous_driving.DIAGNOSTIC_NAME.lf_at</code> string <code>\"warn\"</code> Diagnostic level where it becomes Latent Fault. Available options are <code>\"none\"</code>, <code>\"warn\"</code>, <code>\"error\"</code>. <code>required_modules.autonomous_driving.DIAGNOSTIC_NAME.spf_at</code> string <code>\"error\"</code> Diagnostic level where it becomes Single Point Fault. Available options are <code>\"none\"</code>, <code>\"warn\"</code>, <code>\"error\"</code>. <code>required_modules.autonomous_driving.DIAGNOSTIC_NAME.auto_recovery</code> string <code>\"true\"</code> Determines whether the system will automatically recover when it recovers from an error. <code>required_modules.remote_control.DIAGNOSTIC_NAME.sf_at</code> string <code>\"none\"</code> Diagnostic level where it becomes Safe Fault. Available options are <code>\"none\"</code>, <code>\"warn\"</code>, <code>\"error\"</code>. <code>required_modules.remote_control.DIAGNOSTIC_NAME.lf_at</code> string <code>\"warn\"</code> Diagnostic level where it becomes Latent Fault. Available options are <code>\"none\"</code>, <code>\"warn\"</code>, <code>\"error\"</code>. <code>required_modules.remote_control.DIAGNOSTIC_NAME.spf_at</code> string <code>\"error\"</code> Diagnostic level where it becomes Single Point Fault. Available options are <code>\"none\"</code>, <code>\"warn\"</code>, <code>\"error\"</code>. <code>required_modules.remote_control.DIAGNOSTIC_NAME.auto_recovery</code> string <code>\"true\"</code> Determines whether the system will automatically recover when it recovers from an error."},{"location":"system/system_error_monitor/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/system_monitor/","title":"System Monitor for Autoware","text":"<p>Further improvement of system monitor functionality for Autoware.</p>"},{"location":"system/system_monitor/#description","title":"Description","text":"<p>This package provides the following nodes for monitoring system:</p> <ul> <li>CPU Monitor</li> <li>HDD Monitor</li> <li>Memory Monitor</li> <li>Network Monitor</li> <li>NTP Monitor</li> <li>Process Monitor</li> <li>GPU Monitor</li> <li>Voltage Monitor</li> </ul>"},{"location":"system/system_monitor/#supported-architecture","title":"Supported architecture","text":"<ul> <li>x86_64</li> <li>arm64v8/aarch64</li> </ul>"},{"location":"system/system_monitor/#operation-confirmed-platform","title":"Operation confirmed platform","text":"<ul> <li>PC system intel core i7</li> <li>NVIDIA Jetson AGX Xavier</li> <li>Raspberry Pi4 Model B</li> </ul>"},{"location":"system/system_monitor/#how-to-use","title":"How to use","text":"<p>Use colcon build and launch in the same way as other packages.</p> <pre><code>colcon build\nsource install/setup.bash\nros2 launch system_monitor system_monitor.launch.xml\n</code></pre> <p>CPU and GPU monitoring method differs depending on platform. CMake automatically chooses source to be built according to build environment. If you build this package on intel platform, CPU monitor and GPU monitor which run on intel platform are built.</p>"},{"location":"system/system_monitor/#ros-topics-published-by-system-monitor","title":"ROS topics published by system monitor","text":"<p>Every topic is published in 1 minute interval.</p> <ul> <li>CPU Monitor</li> <li>HDD Monitor</li> <li>Mem Monitor</li> <li>Net Monitor</li> <li>NTP Monitor</li> <li>Process Monitor</li> <li>GPU Monitor</li> <li>Voltage Monitor</li> </ul> <p>[Usage] \u2713\uff1aSupported, -\uff1aNot supported</p> Node Message Intel arm64(tegra) arm64(raspi) Notes CPU Monitor CPU Temperature \u2713 \u2713 \u2713 CPU Usage \u2713 \u2713 \u2713 CPU Load Average \u2713 \u2713 \u2713 CPU Thermal Throttling \u2713 - \u2713 CPU Frequency \u2713 \u2713 \u2713 Notification of frequency only, normally error not generated. HDD Monitor HDD Temperature \u2713 \u2713 \u2713 HDD PowerOnHours \u2713 \u2713 \u2713 HDD TotalDataWritten \u2713 \u2713 \u2713 HDD RecoveredError \u2713 \u2713 \u2713 HDD Usage \u2713 \u2713 \u2713 HDD ReadDataRate \u2713 \u2713 \u2713 HDD WriteDataRate \u2713 \u2713 \u2713 HDD ReadIOPS \u2713 \u2713 \u2713 HDD WriteIOPS \u2713 \u2713 \u2713 HDD Connection \u2713 \u2713 \u2713 Memory Monitor Memory Usage \u2713 \u2713 \u2713 Net Monitor Network Connection \u2713 \u2713 \u2713 Network Usage \u2713 \u2713 \u2713 Notification of usage only, normally error not generated. Network CRC Error \u2713 \u2713 \u2713 Warning occurs when the number of CRC errors in the period reaches the threshold value. The number of CRC errors that occur is the same as the value that can be confirmed with the ip command. IP Packet Reassembles Failed \u2713 \u2713 \u2713 NTP Monitor NTP Offset \u2713 \u2713 \u2713 Process Monitor Tasks Summary \u2713 \u2713 \u2713 High-load Proc[0-9] \u2713 \u2713 \u2713 High-mem Proc[0-9] \u2713 \u2713 \u2713 GPU Monitor GPU Temperature \u2713 \u2713 - GPU Usage \u2713 \u2713 - GPU Memory Usage \u2713 - - GPU Thermal Throttling \u2713 - - GPU Frequency \u2713 \u2713 - For Intel platform, monitor whether current GPU clock is supported by the GPU. Voltage Monitor CMOS Battery Status \u2713 - - Battery Health for RTC and BIOS -"},{"location":"system/system_monitor/#ros-parameters","title":"ROS parameters","text":"<p>See ROS parameters.</p>"},{"location":"system/system_monitor/#notes","title":"Notes","text":""},{"location":"system/system_monitor/#cpu-monitor-for-intel-platform","title":"CPU monitor for intel platform","text":"<p>Thermal throttling event can be monitored by reading contents of MSR(Model Specific Register), and accessing MSR is only allowed for root by default, so this package provides the following approach to minimize security risks as much as possible:</p> <ul> <li>Provide a small program named 'msr_reader' which accesses MSR and sends thermal throttling status to CPU monitor by using socket programming.</li> <li>Run 'msr_reader' as a specific user instead of root.</li> <li>CPU monitor is able to know the status as an unprivileged user since thermal throttling status is sent by socket communication.</li> </ul>"},{"location":"system/system_monitor/#instructions-before-starting","title":"Instructions before starting","text":"<ol> <li> <p>Create a user to run 'msr_reader'.</p> <pre><code>sudo adduser &lt;username&gt;\n</code></pre> </li> <li> <p>Load kernel module 'msr' into your target system.    The path '/dev/cpu/CPUNUM/msr' appears.</p> <pre><code>sudo modprobe msr\n</code></pre> </li> <li> <p>Allow user to access MSR with read-only privilege using the Access Control List (ACL).</p> <pre><code>sudo setfacl -m u:&lt;username&gt;:r /dev/cpu/*/msr\n</code></pre> </li> <li> <p>Assign capability to 'msr_reader' since msr kernel module requires rawio capability.</p> <pre><code>sudo setcap cap_sys_rawio=ep install/system_monitor/lib/system_monitor/msr_reader\n</code></pre> </li> <li> <p>Run 'msr_reader' as the user you created, and run system_monitor as a generic user.</p> <pre><code>su &lt;username&gt;\ninstall/system_monitor/lib/system_monitor/msr_reader\n</code></pre> </li> </ol>"},{"location":"system/system_monitor/#see-also","title":"See also","text":"<p>msr_reader</p>"},{"location":"system/system_monitor/#hdd-monitor","title":"HDD Monitor","text":"<p>Generally, S.M.A.R.T. information is used to monitor HDD temperature and life of HDD, and normally accessing disk device node is allowed for root user or disk group. As with the CPU monitor, this package provides an approach to minimize security risks as much as possible:</p> <ul> <li>Provide a small program named 'hdd_reader' which accesses S.M.A.R.T. information and sends some items of it to HDD monitor by using socket programming.</li> <li>Run 'hdd_reader' as a specific user.</li> <li>HDD monitor is able to know some items of S.M.A.R.T. information as an unprivileged user since those are sent by socket communication.</li> </ul>"},{"location":"system/system_monitor/#instructions-before-starting_1","title":"Instructions before starting","text":"<ol> <li> <p>Create a user to run 'hdd_reader'.</p> <pre><code>sudo adduser &lt;username&gt;\n</code></pre> </li> <li> <p>Add user to the disk group.</p> <pre><code>sudo usermod -a -G disk &lt;username&gt;\n</code></pre> </li> <li> <p>Assign capabilities to 'hdd_reader' since SCSI kernel module requires rawio capability to send ATA PASS-THROUGH (12) command and NVMe kernel module requires admin capability to send Admin Command.</p> <pre><code>sudo setcap 'cap_sys_rawio=ep cap_sys_admin=ep' install/system_monitor/lib/system_monitor/hdd_reader\n</code></pre> </li> <li> <p>Run 'hdd_reader' as the user you created, and run system_monitor as a generic user.</p> <pre><code>su &lt;username&gt;\ninstall/system_monitor/lib/system_monitor/hdd_reader\n</code></pre> </li> </ol>"},{"location":"system/system_monitor/#see-also_1","title":"See also","text":"<p>hdd_reader</p>"},{"location":"system/system_monitor/#gpu-monitor-for-intel-platform","title":"GPU Monitor for intel platform","text":"<p>Currently GPU monitor for intel platform only supports NVIDIA GPU whose information can be accessed by NVML API.</p> <p>Also you need to install CUDA libraries. For installation instructions for CUDA 10.0, see NVIDIA CUDA Installation Guide for Linux.</p>"},{"location":"system/system_monitor/#voltage-monitor-for-cmos-battery","title":"Voltage monitor for CMOS Battery","text":"<p>Some platforms have built-in batteries for the RTC and CMOS. This node determines the battery status from the result of executing cat /proc/driver/rtc. Also, if lm-sensors is installed, it is possible to use the results. However, the return value of sensors varies depending on the chipset, so it is necessary to set a string to extract the corresponding voltage. It is also necessary to set the voltage for warning and error. For example, if you want a warning when the voltage is less than 2.9V and an error when it is less than 2.7V. The execution result of sensors on the chipset nct6106 is as follows, and \"in7:\" is the voltage of the CMOS battery.</p> <pre><code>$ sensors\npch_cannonlake-virtual-0\nAdapter: Virtual device\ntemp1:        +42.0\u00b0C\n\nnct6106-isa-0a10\nAdapter: ISA adapter\nin0:           728.00 mV (min =  +0.00 V, max =  +1.74 V)\nin1:             1.01 V  (min =  +0.00 V, max =  +2.04 V)\nin2:             3.34 V  (min =  +0.00 V, max =  +4.08 V)\nin3:             3.34 V  (min =  +0.00 V, max =  +4.08 V)\nin4:             1.07 V  (min =  +0.00 V, max =  +2.04 V)\nin5:             1.05 V  (min =  +0.00 V, max =  +2.04 V)\nin6:             1.67 V  (min =  +0.00 V, max =  +2.04 V)\nin7:             3.06 V  (min =  +0.00 V, max =  +4.08 V)\nin8:             2.10 V  (min =  +0.00 V, max =  +4.08 V)\nfan1:          2789 RPM  (min =    0 RPM)\nfan2:             0 RPM  (min =    0 RPM)\n</code></pre> <p>The setting value of voltage_monitor.param.yaml is as follows.</p> <pre><code>/**:\nros__parameters:\ncmos_battery_warn: 2.90\ncmos_battery_error: 2.70\ncmos_battery_label: \"in7:\"\n</code></pre> <p>The above values of 2.7V and 2.90V are hypothetical. Depending on the motherboard and chipset, the value may vary. However, if the voltage of the lithium battery drops below 2.7V, it is recommended to replace it. In the above example, the message output to the topic /diagnostics is as follows. If the voltage &lt; 2.9V then:</p> <pre><code>  name: /autoware/system/resource_monitoring/voltage/cmos_battery\n  message: Warning\n  hardware_id: ''\n  values:\n  - key: 'voltage_monitor: CMOS Battery Status'\n    value: Low Battery\n</code></pre> <p>If the voltage &lt; 2.7V then:</p> <pre><code>  name: /autoware/system/resource_monitoring/voltage/cmos_battery\n  message: Warning\n  hardware_id: ''\n  values:\n  - key: 'voltage_monitor: CMOS Battery Status'\n    value: Battery Died\n</code></pre> <p>If neither, then:</p> <pre><code>  name: /autoware/system/resource_monitoring/voltage/cmos_battery\n  message: OK\n  hardware_id: ''\n  values:\n  - key: 'voltage_monitor: CMOS Battery Status'\n    value: OK\n</code></pre> <p>If the CMOS battery voltage drops less than voltage_error or voltage_warn,It will be a warning. If the battery runs out, the RTC will stop working when the power is turned off. However, since the vehicle can run, it is not an error. The vehicle will stop when an error occurs, but there is no need to stop immediately. It can be determined by the value of \"Low Battery\" or \"Battery Died\".</p>"},{"location":"system/system_monitor/#uml-diagrams","title":"UML diagrams","text":"<p>See Class diagrams. See Sequence diagrams.</p>"},{"location":"system/system_monitor/docs/class_diagrams/","title":"Class diagrams","text":""},{"location":"system/system_monitor/docs/class_diagrams/#cpu-monitor","title":"CPU Monitor","text":""},{"location":"system/system_monitor/docs/class_diagrams/#hdd-monitor","title":"HDD Monitor","text":""},{"location":"system/system_monitor/docs/class_diagrams/#memory-monitor","title":"Memory Monitor","text":""},{"location":"system/system_monitor/docs/class_diagrams/#net-monitor","title":"Net Monitor","text":""},{"location":"system/system_monitor/docs/class_diagrams/#ntp-monitor","title":"NTP Monitor","text":""},{"location":"system/system_monitor/docs/class_diagrams/#process-monitor","title":"Process Monitor","text":""},{"location":"system/system_monitor/docs/class_diagrams/#gpu-monitor","title":"GPU Monitor","text":""},{"location":"system/system_monitor/docs/hdd_reader/","title":"hdd_reader","text":""},{"location":"system/system_monitor/docs/hdd_reader/#name","title":"Name","text":"<p>hdd_reader - Read S.M.A.R.T. information for monitoring HDD temperature and life of HDD</p>"},{"location":"system/system_monitor/docs/hdd_reader/#synopsis","title":"Synopsis","text":"<p>hdd_reader [OPTION]</p>"},{"location":"system/system_monitor/docs/hdd_reader/#description","title":"Description","text":"<p>Read S.M.A.R.T. information for monitoring HDD temperature and life of HDD. This runs as a daemon process and listens to a TCP/IP port (7635 by default).</p> <p>Options: -h, --help \u00a0\u00a0\u00a0\u00a0Display help -p, --port # \u00a0\u00a0\u00a0\u00a0Port number to listen to</p> <p>Exit status: Returns 0 if OK; non-zero otherwise.</p>"},{"location":"system/system_monitor/docs/hdd_reader/#notes","title":"Notes","text":"<p>The 'hdd_reader' accesses minimal data enough to get Model number, Serial number, HDD temperature, and life of HDD. This is an approach to limit its functionality, however, the functionality can be expanded for further improvements and considerations in the future.</p>"},{"location":"system/system_monitor/docs/hdd_reader/#ata","title":"[ATA]","text":"Purpose Name Length Model number, Serial number IDENTIFY DEVICE data 256 words(512 bytes) HDD temperature, life of HDD SMART READ DATA 256 words(512 bytes) <p>For details please see the documents below.</p> <ul> <li>ATA Command Set - 4 (ACS-4)</li> <li>ATA/ATAPI Command Set - 3 (ACS-3)</li> <li>SMART Attribute Overview</li> <li>SMART Attribute Annex</li> </ul>"},{"location":"system/system_monitor/docs/hdd_reader/#nvme","title":"[NVMe]","text":"Purpose Name Length Model number, Serial number Identify Controller data structure 4096 bytes HDD temperature, life of HDD SMART / Health Information 36 Dword(144 bytes) <p>For details please see the documents below.</p> <ul> <li>NVM Express 1.2b</li> </ul>"},{"location":"system/system_monitor/docs/hdd_reader/#operation-confirmed-drives","title":"Operation confirmed drives","text":"<ul> <li>SAMSUNG MZVLB1T0HALR (SSD)</li> <li>Western Digital My Passport (Portable HDD)</li> </ul>"},{"location":"system/system_monitor/docs/msr_reader/","title":"msr_reader","text":""},{"location":"system/system_monitor/docs/msr_reader/#name","title":"Name","text":"<p>msr_reader - Read MSR register for monitoring thermal throttling event</p>"},{"location":"system/system_monitor/docs/msr_reader/#synopsis","title":"Synopsis","text":"<p>msr_reader [OPTION]</p>"},{"location":"system/system_monitor/docs/msr_reader/#description","title":"Description","text":"<p>Read MSR register for monitoring thermal throttling event. This runs as a daemon process and listens to a TCP/IP port (7634 by default).</p> <p>Options: -h, --help \u00a0\u00a0\u00a0\u00a0Display help -p, --port # \u00a0\u00a0\u00a0\u00a0Port number to listen to</p> <p>Exit status: Returns 0 if OK; non-zero otherwise.</p>"},{"location":"system/system_monitor/docs/msr_reader/#notes","title":"Notes","text":"<p>The 'msr_reader' accesses minimal data enough to get thermal throttling event. This is an approach to limit its functionality, however, the functionality can be expanded for further improvements and considerations in the future.</p> Register Address Name Length 1B1H IA32_PACKAGE_THERM_STATUS 64bit <p>For details please see the documents below.</p> <ul> <li>Intel\u00ae 64 and IA-32 ArchitecturesSoftware Developer\u2019s Manual</li> </ul>"},{"location":"system/system_monitor/docs/msr_reader/#operation-confirmed-platform","title":"Operation confirmed platform","text":"<ul> <li>PC system intel core i7</li> </ul>"},{"location":"system/system_monitor/docs/ros_parameters/","title":"ROS parameters","text":""},{"location":"system/system_monitor/docs/ros_parameters/#cpu-monitor","title":"CPU Monitor","text":"<p>cpu_monitor:</p> Name Type Unit Default Notes temp_warn float DegC 90.0 Generates warning when CPU temperature reaches a specified value or higher. temp_error float DegC 95.0 Generates error when CPU temperature reaches a specified value or higher. usage_warn float %(1e-2) 0.90 Generates warning when CPU usage reaches a specified value or higher and last for usage_warn_count counts. usage_error float %(1e-2) 1.00 Generates error when CPU usage reaches a specified value or higher and last for usage_error_count counts. usage_warn_count int n/a 2 Generates warning when CPU usage reaches usage_warn value or higher and last for a specified counts. usage_error_count int n/a 2 Generates error when CPU usage reaches usage_error value or higher and last for a specified counts. load1_warn float %(1e-2) 0.90 Generates warning when load average 1min reaches a specified value or higher. load5_warn float %(1e-2) 0.80 Generates warning when load average 5min reaches a specified value or higher. msr_reader_port int n/a 7634 Port number to connect to msr_reader."},{"location":"system/system_monitor/docs/ros_parameters/#hdd-monitor","title":"HDD Monitor","text":"<p>hdd_monitor:</p> <p>\u00a0\u00a0disks:</p> Name Type Unit Default Notes name string n/a none The disk name to monitor temperature. (e.g. /dev/sda) temp_attribute_id int n/a 0xC2 S.M.A.R.T attribute ID of temperature. temp_warn float DegC 55.0 Generates warning when HDD temperature reaches a specified value or higher. temp_error float DegC 70.0 Generates error when HDD temperature reaches a specified value or higher. power_on_hours_attribute_id int n/a 0x09 S.M.A.R.T attribute ID of power-on hours. power_on_hours_warn int Hour 3000000 Generates warning when HDD power-on hours reaches a specified value or higher. total_data_written_attribute_id int n/a 0xF1 S.M.A.R.T attribute ID of total data written. total_data_written_warn int depends on device 4915200 Generates warning when HDD total data written reaches a specified value or higher. total_data_written_safety_factor int %(1e-2) 0.05 Safety factor of HDD total data written. recovered_error_attribute_id int n/a 0xC3 S.M.A.R.T attribute ID of recovered error. recovered_error_warn int n/a 1 Generates warning when HDD recovered error reaches a specified value or higher. read_data_rate_warn float MB/s 360.0 Generates warning when HDD read data rate reaches a specified value or higher. write_data_rate_warn float MB/s 103.5 Generates warning when HDD write data rate reaches a specified value or higher. read_iops_warn float IOPS 63360.0 Generates warning when HDD read IOPS reaches a specified value or higher. write_iops_warn float IOPS 24120.0 Generates warning when HDD write IOPS reaches a specified value or higher. <p>hdd_monitor:</p> Name Type Unit Default Notes hdd_reader_port int n/a 7635 Port number to connect to hdd_reader. usage_warn float %(1e-2) 0.95 Generates warning when disk usage reaches a specified value or higher. usage_error float %(1e-2) 0.99 Generates error when disk usage reaches a specified value or higher."},{"location":"system/system_monitor/docs/ros_parameters/#memory-monitor","title":"Memory Monitor","text":"<p>mem_monitor:</p> Name Type Unit Default Notes usage_warn float %(1e-2) 0.95 Generates warning when physical memory usage reaches a specified value or higher. usage_error float %(1e-2) 0.99 Generates error when physical memory usage reaches a specified value or higher."},{"location":"system/system_monitor/docs/ros_parameters/#net-monitor","title":"Net Monitor","text":"<p>net_monitor:</p> Name Type Unit Default Notes devices list[string] n/a none The name of network interface to monitor. (e.g. eth0, * for all network interfaces) monitor_program string n/a greengrass program name to be monitored by nethogs name. crc_error_check_duration int sec 1 CRC error check duration. crc_error_count_threshold int n/a 1 Generates warning when count of CRC errors during CRC error check duration reaches a specified value or higher. reassembles_failed_check_duration int sec 1 IP packet reassembles failed check duration. reassembles_failed_check_count int n/a 1 Generates warning when count of IP packet reassembles failed during IP packet reassembles failed check duration reaches a specified value or higher."},{"location":"system/system_monitor/docs/ros_parameters/#ntp-monitor","title":"NTP Monitor","text":"<p>ntp_monitor:</p> Name Type Unit Default Notes server string n/a ntp.ubuntu.com The name of NTP server to synchronize date and time. (e.g. ntp.nict.jp for Japan) offset_warn float sec 0.1 Generates warning when NTP offset reaches a specified value or higher. (default is 100ms) offset_error float sec 5.0 Generates warning when NTP offset reaches a specified value or higher. (default is 5sec)"},{"location":"system/system_monitor/docs/ros_parameters/#process-monitor","title":"Process Monitor","text":"<p>process_monitor:</p> Name Type Unit Default Notes num_of_procs int n/a 5 The number of processes to generate High-load Proc[0-9] and High-mem Proc[0-9]."},{"location":"system/system_monitor/docs/ros_parameters/#gpu-monitor","title":"GPU Monitor","text":"<p>gpu_monitor:</p> Name Type Unit Default Notes temp_warn float DegC 90.0 Generates warning when GPU temperature reaches a specified value or higher. temp_error float DegC 95.0 Generates error when GPU temperature reaches a specified value or higher. gpu_usage_warn float %(1e-2) 0.90 Generates warning when GPU usage reaches a specified value or higher. gpu_usage_error float %(1e-2) 1.00 Generates error when GPU usage reaches a specified value or higher. memory_usage_warn float %(1e-2) 0.90 Generates warning when GPU memory usage reaches a specified value or higher. memory_usage_error float %(1e-2) 1.00 Generates error when GPU memory usage reaches a specified value or higher."},{"location":"system/system_monitor/docs/ros_parameters/#voltage-monitor","title":"Voltage Monitor","text":"<p>voltage_monitor:</p> Name Type Unit Default Notes cmos_battery_warn float volt 2.9 Generates warning when voltage of CMOS Battery is lower. cmos_battery_error float volt 2.7 Generates error when voltage of CMOS Battery is lower. cmos_battery_label string n/a \"\" voltage string in sensors command outputs. if empty no voltage will be checked."},{"location":"system/system_monitor/docs/seq_diagrams/","title":"Sequence diagrams","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#cpu-monitor","title":"CPU Monitor","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#hdd-monitor","title":"HDD Monitor","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#memory-monitor","title":"Memory Monitor","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#net-monitor","title":"Net Monitor","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#ntp-monitor","title":"NTP Monitor","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#process-monitor","title":"Process Monitor","text":""},{"location":"system/system_monitor/docs/seq_diagrams/#gpu-monitor","title":"GPU Monitor","text":""},{"location":"system/system_monitor/docs/topics_cpu_monitor/","title":"ROS topics: CPU Monitor","text":""},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-temperature","title":"CPU Temperature","text":"<p>/diagnostics/cpu_monitor: CPU Temperature</p> <p>[summary]</p> level message OK OK <p>[values]</p> key (example) value (example) Package id 0, Core [0-9], thermal_zone[0-9] 50.0 DegC <p>*key: thermal_zone[0-9] for ARM architecture.</p>"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-usage","title":"CPU Usage","text":"<p>/diagnostics/cpu_monitor: CPU Usage</p> <p>[summary]</p> level message OK OK WARN high load ERROR very high load <p>[values]</p> key value (example) CPU [all,0-9]: status OK / high load / very high load CPU [all,0-9]: usr 2.00% CPU [all,0-9]: nice 0.00% CPU [all,0-9]: sys 1.00% CPU [all,0-9]: idle 97.00%"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-load-average","title":"CPU Load Average","text":"<p>/diagnostics/cpu_monitor: CPU Load Average</p> <p>[summary]</p> level message OK OK WARN high load <p>[values]</p> key value (example) 1min 14.50% 5min 14.55% 15min 9.67%"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-thermal-throttling","title":"CPU Thermal Throttling","text":"<p>Intel and raspi platform only. Tegra platform not supported.</p> <p>/diagnostics/cpu_monitor: CPU Thermal Throttling</p> <p>[summary]</p> level message OK OK ERROR throttling <p>[values for intel platform]</p> key value (example) CPU [0-9]: Pkg Thermal Status OK / throttling <p>[values for raspi platform]</p> key value (example) status All clear / Currently throttled / Soft temperature limit active"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-frequency","title":"CPU Frequency","text":"<p>/diagnostics/cpu_monitor: CPU Frequency</p> <p>[summary]</p> level message OK OK <p>[values]</p> key value (example) CPU [0-9]: clock 2879MHz"},{"location":"system/system_monitor/docs/topics_gpu_monitor/","title":"ROS topics: GPU Monitor","text":"<p>Intel and tegra platform only. Raspi platform not supported.</p>"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-temperature","title":"GPU Temperature","text":"<p>/diagnostics/gpu_monitor: GPU Temperature</p> <p>[summary]</p> level message OK OK WARN warm ERROR hot <p>[values]</p> key (example) value (example) GeForce GTX 1650, thermal_zone[0-9] 46.0 DegC <p>*key: thermal_zone[0-9] for ARM architecture.</p>"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-usage","title":"GPU Usage","text":"<p>/diagnostics/gpu_monitor: GPU Usage</p> <p>[summary]</p> level message OK OK WARN high load ERROR very high load <p>[values]</p> key value (example) GPU [0-9]: status OK / high load / very high load GPU [0-9]: name GeForce GTX 1650, gpu.[0-9] GPU [0-9]: usage 19.0% <p>*key: gpu.[0-9] for ARM architecture.</p>"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-memory-usage","title":"GPU Memory Usage","text":"<p>Intel platform only. There is no separate gpu memory in tegra. Both cpu and gpu uses cpu memory.</p> <p>/diagnostics/gpu_monitor: GPU Memory Usage</p> <p>[summary]</p> level message OK OK WARN high load ERROR very high load <p>[values]</p> key value (example) GPU [0-9]: status OK / high load / very high load GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: usage 13.0% GPU [0-9]: total 3G GPU [0-9]: used 1G GPU [0-9]: free 2G"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-thermal-throttling","title":"GPU Thermal Throttling","text":"<p>Intel platform only. Tegra platform not supported.</p> <p>/diagnostics/gpu_monitor: GPU Thermal Throttling</p> <p>[summary]</p> level message OK OK ERROR throttling <p>[values]</p> key value (example) GPU [0-9]: status OK / throttling GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: graphics clock 1020 MHz GPU [0-9]: reasons GpuIdle / SwThermalSlowdown etc."},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-frequency","title":"GPU Frequency","text":"<p>/diagnostics/gpu_monitor: GPU Frequency</p>"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#intel-platform","title":"Intel platform","text":"<p>[summary]</p> level message OK OK WARN unsupported clock <p>[values]</p> key value (example) GPU [0-9]: status OK / unsupported clock GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: graphics clock 1020 MHz"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#tegra-platform","title":"Tegra platform","text":"<p>[summary]</p> level message OK OK <p>[values]</p> key (example) value (example) GPU 17000000.gv11b: clock 318 MHz"},{"location":"system/system_monitor/docs/topics_hdd_monitor/","title":"ROS topics: HDD Monitor","text":""},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-temperature","title":"HDD Temperature","text":"<p>/diagnostics/hdd_monitor: HDD Temperature</p> <p>[summary]</p> level message OK OK WARN hot ERROR critical hot <p>[values]</p> key value (example) HDD [0-9]: status OK / hot / critical hot HDD [0-9]: name /dev/nvme0 HDD [0-9]: model SAMSUNG MZVLB1T0HBLR-000L7 HDD [0-9]: serial S4EMNF0M820682 HDD [0-9]: temperature 37.0 DegC  not available"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-poweronhours","title":"HDD PowerOnHours","text":"<p>/diagnostics/hdd_monitor: HDD PowerOnHours</p> <p>[summary]</p> level message OK OK WARN lifetime limit <p>[values]</p> key value (example) HDD [0-9]: status OK / lifetime limit HDD [0-9]: name /dev/nvme0 HDD [0-9]: model PHISON PS5012-E12S-512G HDD [0-9]: serial FB590709182505050767 HDD [0-9]: power on hours 4834 Hours  not available"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-totaldatawritten","title":"HDD TotalDataWritten","text":"<p>/diagnostics/hdd_monitor: HDD TotalDataWritten</p> <p>[summary]</p> level message OK OK WARN warranty period <p>[values]</p> key value (example) HDD [0-9]: status OK / warranty period HDD [0-9]: name /dev/nvme0 HDD [0-9]: model PHISON PS5012-E12S-512G HDD [0-9]: serial FB590709182505050767 HDD [0-9]: total data written 146295330  not available"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-recoverederror","title":"HDD RecoveredError","text":"<p>/diagnostics/hdd_monitor: HDD RecoveredError</p> <p>[summary]</p> level message OK OK WARN high soft error rate <p>[values]</p> key value (example) HDD [0-9]: status OK / high soft error rate HDD [0-9]: name /dev/nvme0 HDD [0-9]: model PHISON PS5012-E12S-512G HDD [0-9]: serial FB590709182505050767 HDD [0-9]: recovered error 0  not available"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-usage","title":"HDD Usage","text":"<p>/diagnostics/hdd_monitor: HDD Usage</p> <p>[summary]</p> level message OK OK WARN low disk space ERROR very low disk space <p>[values]</p> key value (example) HDD [0-9]: status OK / low disk space / very low disk space HDD [0-9]: filesystem /dev/nvme0n1p4 HDD [0-9]: size 264G HDD [0-9]: used 172G HDD [0-9]: avail 749G HDD [0-9]: use 69% HDD [0-9]: mounted on /"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-readdatarate","title":"HDD ReadDataRate","text":"<p>/diagnostics/hdd_monitor: HDD ReadDataRate</p> <p>[summary]</p> level message OK OK WARN high data rate of read <p>[values]</p> key value (example) HDD [0-9]: status OK / high data rate of read HDD [0-9]: name /dev/nvme0 HDD [0-9]: data rate of read 0.00 MB/s"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-writedatarate","title":"HDD WriteDataRate","text":"<p>/diagnostics/hdd_monitor: HDD WriteDataRate</p> <p>[summary]</p> level message OK OK WARN high data rate of write <p>[values]</p> key value (example) HDD [0-9]: status OK / high data rate of write HDD [0-9]: name /dev/nvme0 HDD [0-9]: data rate of write 0.00 MB/s"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-readiops","title":"HDD ReadIOPS","text":"<p>/diagnostics/hdd_monitor: HDD ReadIOPS</p> <p>[summary]</p> level message OK OK WARN high IOPS of read <p>[values]</p> key value (example) HDD [0-9]: status OK / high IOPS of read HDD [0-9]: name /dev/nvme0 HDD [0-9]: IOPS of read 0.00 IOPS"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-writeiops","title":"HDD WriteIOPS","text":"<p>/diagnostics/hdd_monitor: HDD WriteIOPS</p> <p>[summary]</p> level message OK OK WARN high IOPS of write <p>[values]</p> key value (example) HDD [0-9]: status OK / high IOPS of write HDD [0-9]: name /dev/nvme0 HDD [0-9]: IOPS of write 0.00 IOPS"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-connection","title":"HDD Connection","text":"<p>/diagnostics/hdd_monitor: HDD Connection</p> <p>[summary]</p> level message OK OK WARN not connected <p>[values]</p> key value (example) HDD [0-9]: status OK / not connected HDD [0-9]: name /dev/nvme0 HDD [0-9]: mount point /"},{"location":"system/system_monitor/docs/topics_mem_monitor/","title":"ROS topics: Memory Monitor","text":""},{"location":"system/system_monitor/docs/topics_mem_monitor/#memory-usage","title":"Memory Usage","text":"<p>/diagnostics/mem_monitor: Memory Usage</p> <p>[summary]</p> level message OK OK WARN high load ERROR very high load <p>[values]</p> key value (example) Mem: usage 29.72% Mem: total 31.2G Mem: used 6.0G Mem: free 20.7G Mem: shared 2.9G Mem: buff/cache 4.5G Mem: available 21.9G Swap: total 2.0G Swap: used 218M Swap: free 1.8G Total: total 33.2G Total: used 6.2G Total: free 22.5G Total: used+ 9.1G"},{"location":"system/system_monitor/docs/topics_net_monitor/","title":"ROS topics: Net Monitor","text":""},{"location":"system/system_monitor/docs/topics_net_monitor/#network-connection","title":"Network Connection","text":"<p>/diagnostics/net_monitor: Network Connection</p> <p>[summary]</p> level message OK OK WARN no such device <p>[values]</p> key value (example) Network [0-9]: status OK / no such device HDD [0-9]: name wlp82s0"},{"location":"system/system_monitor/docs/topics_net_monitor/#network-usage","title":"Network Usage","text":"<p>/diagnostics/net_monitor: Network Usage</p> <p>[summary]</p> level message OK OK <p>[values]</p> key value (example) Network [0-9]: status OK Network [0-9]: interface name wlp82s0 Network [0-9]: rx_usage 0.00% Network [0-9]: tx_usage 0.00% Network [0-9]: rx_traffic 0.00 MB/s Network [0-9]: tx_traffic 0.00 MB/s Network [0-9]: capacity 400.0 MB/s Network [0-9]: mtu 1500 Network [0-9]: rx_bytes 58455228 Network [0-9]: rx_errors 0 Network [0-9]: tx_bytes 11069136 Network [0-9]: tx_errors 0 Network [0-9]: collisions 0"},{"location":"system/system_monitor/docs/topics_net_monitor/#network-traffic","title":"Network Traffic","text":"<p>/diagnostics/net_monitor: Network Traffic</p> <p>[summary]</p> level message OK OK <p>[values when specified program is detected]</p> key value (example) nethogs [0-9]: program /lambda/greengrassSystemComponents/1384/999 nethogs [0-9]: sent (KB/Sec) 1.13574 nethogs [0-9]: received (KB/Sec) 0.261914 <p>[values when error is occurring]</p> key value (example) error execve failed: No such file or directory"},{"location":"system/system_monitor/docs/topics_net_monitor/#network-crc-error","title":"Network CRC Error","text":"<p>/diagnostics/net_monitor: Network CRC Error</p> <p>[summary]</p> level message OK OK WARN CRC error <p>[values]</p> key value (example) Network [0-9]: interface name wlp82s0 Network [0-9]: total rx_crc_errors 0 Network [0-9]: rx_crc_errors per unit time 0"},{"location":"system/system_monitor/docs/topics_net_monitor/#ip-packet-reassembles-failed","title":"IP Packet Reassembles Failed","text":"<p>/diagnostics/net_monitor: IP Packet Reassembles Failed</p> <p>[summary]</p> level message OK OK WARN reassembles failed <p>[values]</p> key value (example) total packet reassembles failed 0 packet reassembles failed per unit time 0"},{"location":"system/system_monitor/docs/topics_ntp_monitor/","title":"ROS topics: NTP Monitor","text":""},{"location":"system/system_monitor/docs/topics_ntp_monitor/#ntp-offset","title":"NTP Offset","text":"<p>/diagnostics/ntp_monitor: NTP Offset</p> <p>[summary]</p> level message OK OK WARN high ERROR too high <p>[values]</p> key value (example) NTP Offset -0.013181 sec NTP Delay 0.053880 sec"},{"location":"system/system_monitor/docs/topics_process_monitor/","title":"ROS topics: Process Monitor","text":""},{"location":"system/system_monitor/docs/topics_process_monitor/#tasks-summary","title":"Tasks Summary","text":"<p>/diagnostics/process_monitor: Tasks Summary</p> <p>[summary]</p> level message OK OK <p>[values]</p> key value (example) total 409 running 2 sleeping 321 stopped 0 zombie 0"},{"location":"system/system_monitor/docs/topics_process_monitor/#high-load-proc0-9","title":"High-load Proc[0-9]","text":"<p>/diagnostics/process_monitor: High-load Proc[0-9]</p> <p>[summary]</p> level message OK OK <p>[values]</p> key value (example) COMMAND /usr/lib/firefox/firefox %CPU 37.5 %MEM 2.1 PID 14062 USER autoware PR 20 NI 0 VIRT 3461152 RES 669052 SHR 481208 S S TIME+ 23:57.49"},{"location":"system/system_monitor/docs/topics_process_monitor/#high-mem-proc0-9","title":"High-mem Proc[0-9]","text":"<p>/diagnostics/process_monitor: High-mem Proc[0-9]</p> <p>[summary]</p> level message OK OK <p>[values]</p> key value (example) COMMAND /snap/multipass/1784/usr/bin/qemu-system-x86_64 %CPU 0 %MEM 2.5 PID 1565 USER root PR 20 NI 0 VIRT 3722320 RES 812432 SHR 20340 S S TIME+ 0:22.84"},{"location":"system/system_monitor/docs/topics_voltage_monitor/","title":"ROS topics: Voltage Monitor","text":"<p>\"CMOS Battery Status\" and \"CMOS battery voltage\" are exclusive. Only one or the other is generated. Which one is generated depends on the value of cmos_battery_label.</p>"},{"location":"system/system_monitor/docs/topics_voltage_monitor/#cmos-battery-status","title":"CMOS Battery Status","text":"<p>/diagnostics/voltage_monitor: CMOS Battery Status</p> <p>[summary]</p> level message OK OK WARN Battery Dead <p>[values]</p> key (example) value (example) CMOS battery status OK / Battery Dead <p>*key: thermal_zone[0-9] for ARM architecture.</p>"},{"location":"system/system_monitor/docs/topics_voltage_monitor/#cmos-battery-voltage","title":"CMOS Battery Voltage","text":"<p>/diagnostics/voltage_monitor: CMOS battery voltage</p> <p>[summary]</p> level message OK OK WARN Low Battery WARN Battery Died <p>[values]</p> key value (example) CMOS battery voltage 3.06"},{"location":"system/system_monitor/docs/traffic_reader/","title":"traffic_reader","text":""},{"location":"system/system_monitor/docs/traffic_reader/#name","title":"Name","text":"<p>traffic_reader - monitoring network traffic by process</p>"},{"location":"system/system_monitor/docs/traffic_reader/#synopsis","title":"Synopsis","text":"<p>traffic_reader [OPTION]</p>"},{"location":"system/system_monitor/docs/traffic_reader/#description","title":"Description","text":"<p>Monitoring network traffic by process. This runs as a daemon process and listens to a TCP/IP port (7636 by default).</p> <p>Options: -h, --help \u00a0\u00a0\u00a0\u00a0Display help -p, --port # \u00a0\u00a0\u00a0\u00a0Port number to listen to</p> <p>Exit status: Returns 0 if OK; non-zero otherwise.</p>"},{"location":"system/system_monitor/docs/traffic_reader/#notes","title":"Notes","text":"<p>The 'traffic_reader' requires nethogs command.</p>"},{"location":"system/system_monitor/docs/traffic_reader/#operation-confirmed-platform","title":"Operation confirmed platform","text":"<ul> <li>Ubuntu 20.04.3 LTS (GNU/Linux 5.11.0-40-generic x86_64)</li> </ul>"},{"location":"system/topic_state_monitor/Readme/","title":"topic_state_monitor","text":""},{"location":"system/topic_state_monitor/Readme/#purpose","title":"Purpose","text":"<p>This node monitors input topic for abnormalities such as timeout and low frequency. The result of topic status is published as diagnostics.</p>"},{"location":"system/topic_state_monitor/Readme/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The types of topic status and corresponding diagnostic status are following.</p> Topic status Diagnostic status Description <code>OK</code> OK The topic has no abnormalities <code>NotReceived</code> ERROR The topic has not been received yet <code>WarnRate</code> WARN The frequency of the topic is dropped <code>ErrorRate</code> ERROR The frequency of the topic is significantly dropped <code>Timeout</code> ERROR The topic subscription is stopped for a certain time"},{"location":"system/topic_state_monitor/Readme/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/topic_state_monitor/Readme/#input","title":"Input","text":"Name Type Description any name any type Subscribe target topic to monitor"},{"location":"system/topic_state_monitor/Readme/#output","title":"Output","text":"Name Type Description <code>/diagnostics</code> <code>diagnostic_msgs/DiagnosticArray</code> Diagnostics outputs"},{"location":"system/topic_state_monitor/Readme/#parameters","title":"Parameters","text":""},{"location":"system/topic_state_monitor/Readme/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>topic</code> string - Name of target topic <code>topic_type</code> string - Type of target topic (used if the topic is not transform) <code>frame_id</code> string - Frame ID of transform parent (used if the topic is transform) <code>child_frame_id</code> string - Frame ID of transform child (used if the topic is transform) <code>transient_local</code> bool false QoS policy of topic subscription (Transient Local/Volatile) <code>best_effort</code> bool false QoS policy of topic subscription (Best Effort/Reliable) <code>diag_name</code> string - Name used for the diagnostics to publish <code>update_rate</code> double 10.0 Timer callback period [Hz]"},{"location":"system/topic_state_monitor/Readme/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>warn_rate</code> double 0.5 If the topic rate is lower than this value, the topic status becomes <code>WarnRate</code> <code>error_rate</code> double 0.1 If the topic rate is lower than this value, the topic status becomes <code>ErrorRate</code> <code>timeout</code> double 1.0 If the topic subscription is stopped for more than this time [s], the topic status becomes <code>Timeout</code> <code>window_size</code> int 10 Window size of target topic for calculating frequency"},{"location":"system/topic_state_monitor/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"system/velodyne_monitor/Readme/","title":"velodyne_monitor","text":""},{"location":"system/velodyne_monitor/Readme/#purpose","title":"Purpose","text":"<p>This node monitors the status of Velodyne LiDARs. The result of the status is published as diagnostics. Take care not to use this diagnostics to decide the lidar error. Please read Assumptions / Known limits for the detail reason.</p>"},{"location":"system/velodyne_monitor/Readme/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>The status of Velodyne LiDAR can be retrieved from <code>http://[ip_address]/cgi/{info, settings, status, diag}.json</code>.</p> <p>The types of abnormal status and corresponding diagnostics status are following.</p> Abnormal status Diagnostic status No abnormality OK Top board temperature is too cold ERROR Top board temperature is cold WARN Top board temperature is too hot ERROR Top board temperature is hot WARN Bottom board temperature is too cold ERROR Bottom board temperature is cold WARN Bottom board temperature is too hot ERROR Bottom board temperature is hot WARN Rpm(Rotations per minute) of the motor is too low ERROR Rpm(Rotations per minute) of the motor is low WARN Connection error (cannot get Velodyne LiDAR status) ERROR"},{"location":"system/velodyne_monitor/Readme/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"system/velodyne_monitor/Readme/#input","title":"Input","text":"<p>None</p>"},{"location":"system/velodyne_monitor/Readme/#output","title":"Output","text":"Name Type Description <code>/diagnostics</code> <code>diagnostic_msgs/DiagnosticArray</code> Diagnostics outputs"},{"location":"system/velodyne_monitor/Readme/#parameters","title":"Parameters","text":""},{"location":"system/velodyne_monitor/Readme/#node-parameters","title":"Node Parameters","text":"Name Type Default Value Description <code>timeout</code> double 0.5 Timeout for HTTP request to get Velodyne LiDAR status [s]"},{"location":"system/velodyne_monitor/Readme/#core-parameters","title":"Core Parameters","text":"Name Type Default Value Description <code>ip_address</code> string \"192.168.1.201\" IP address of target Velodyne LiDAR <code>temp_cold_warn</code> double -5.0 If the temperature of Velodyne LiDAR is lower than this value, the diagnostics status becomes WARN [\u00b0C] <code>temp_cold_error</code> double -10.0 If the temperature of Velodyne LiDAR is lower than this value, the diagnostics status becomes ERROR [\u00b0C] <code>temp_hot_warn</code> double 75.0 If the temperature of Velodyne LiDAR is higher than this value, the diagnostics status becomes WARN [\u00b0C] <code>temp_hot_error</code> double 80.0 If the temperature of Velodyne LiDAR is higher than this value, the diagnostics status becomes ERROR [\u00b0C] <code>rpm_ratio_warn</code> double 0.80 If the rpm rate of the motor (= current rpm / default rpm) is lower than this value, the diagnostics status becomes WARN <code>rpm_ratio_error</code> double 0.70 If the rpm rate of the motor (= current rpm / default rpm) is lower than this value, the diagnostics status becomes ERROR"},{"location":"system/velodyne_monitor/Readme/#config-files","title":"Config files","text":"<p>Config files for several velodyne models are prepared. The <code>temp_***</code> parameters are set with reference to the operational temperature from each datasheet. Moreover, the <code>temp_hot_***</code> of each model are set highly as 20 from operational temperature. Now, <code>VLP-16.param.yaml</code> is used as default argument because it is lowest spec.</p> Model Name Config name Operational Temperature [\u2103] VLP-16 VLP-16.param.yaml -10 to 60 VLP-32C VLP-32C.param.yaml -20 to 60 VLS-128 VLS-128.param.yaml -20 to 60 Velarray M1600 Velarray_M1600.param.yaml -40 to 85 HDL-32E HDL-32E.param.yaml -10 to 60"},{"location":"system/velodyne_monitor/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>This node uses the http_client and request results by GET method. It takes a few seconds to get results, or generate a timeout exception if it does not succeed the GET request. This occurs frequently and the diagnostics aggregator output STALE. Therefore I recommend to stop using this results to decide the lidar error, and only monitor it to confirm lidar status.</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/","title":"simulator_compatibility_test","text":""},{"location":"tools/simulator_test/simulator_compatibility_test/#purpose","title":"Purpose","text":"<p>Test procedures (e.g. test codes) to check whether a certain simulator is compatible with Autoware</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/#overview-of-the-test-codes","title":"Overview of the test codes","text":"<p>File structure</p> <ul> <li>test_base</li> <li>test_sim_common_manual_testing</li> <li>test_morai_sim</li> </ul> <ol> <li>test_base provides shared methods for testing. Other test codes are created based on functions defined here.</li> <li>test_sim_common_manual_testing provides the most basic functions. Any simualtor can be tested using codes here. However, to make these codes usable with any simulators, the codes do not include any features for test automation.</li> <li>test_morai_sim is an automated version of test_sim_common_manual_testing for MORAI SIM: Drive. Thus it includes 'MORAI SIM: Drive'-specific codes. Users of the other simulators may create similar version for thier simulator of interest.</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-procedures-for-test_sim_common_manual_testing","title":"Test Procedures for test_sim_common_manual_testing","text":""},{"location":"tools/simulator_test/simulator_compatibility_test/#build-process-before-test","title":"Build process before test","text":"<pre><code>source install/setup.bash\ncolcon build --packages-select simulator_compatibility_test\ncd src/universe/autoware.universe/tools/simulator_test/simulator_compatibility_test/test_sim_common_manual_testing\n</code></pre> <p>To run each test case manually</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-case-1","title":"Test Case #1","text":"<ol> <li>Run your simulator</li> <li>Load a map and an ego vehicle for the test</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_01_control_mode_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle control mode is changed into Manual (If the simulator has a GUI for this one, it should display the ego is in Manual)</li> <li>Ego vehicle control mode is changed into Auto (If the simulator has a GUI for this one, it should display the ego is in Auto)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-case-2","title":"Test Case #2","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_02_change_gear_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle gear mode is changed into \"P\" (If the simulator has a GUI for this one, it should display the gear mode is in \"P\")</li> <li>Ego vehicle gear mode is changed into \"N\" (If the simulator has a GUI for this one, it should display the gear mode is in \"N\")</li> <li>Ego vehicle gear mode is changed into \"R\" (If the simulator has a GUI for this one, it should display the gear mode is in \"R\")</li> <li>Ego vehicle gear mode is changed into \"D\" (If the simulator has a GUI for this one, it should display the gear mode is in \"D\")</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-case-3","title":"Test Case #3","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_03_longitudinal_command_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle longitudinal velocity is greater than 10 kph (If the simulator has a GUI for this one, it should display the longitudinal velocity is greater than 10 kph)</li> <li>Ego vehicle longitudinal velocity is going below 10 kph. This is an ego vehicle initialize process to ensure the following acceleration is made by longitudinal.acceleration value (If the simulator has a GUI for this one, it should display the longitudinal velocity is less than 10 kph)</li> <li>Ego vehicle longitudinal velocity is greater than 10 kph (If the simulator has a GUI for this one, it should display the longitudinal velocity is greater than 10 kph)</li> <li>Ego vehicle longitudinal velocity is going below 10 kph. This is an ego vehicle reset process to tear down this test case.</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-case-4","title":"Test Case #4","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_04_lateral_command_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle steering and/or tire value is greater than 0 degree (If the simulator has a GUI for this one, it should display the steering and/or tire is greater than 0 degree)</li> <li>Ego vehicle steering and/or tire value is 0 degree. This is a reset process. (If the simulator has a GUI for this one, it should display the steering and/or tire is 0 degree)</li> <li>Ego vehicle steering and/or tire value is less than 0 degree (If the simulator has a GUI for this one, it should display the steering and/or tire is less than 0 degree)</li> <li>Ego vehicle steering and/or tire value is 0 degree. This is a reset process. (If the simulator has a GUI for this one, it should display the steering and/or tire is 0 degree)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-case-5","title":"Test Case #5","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_05_turn_indicators_cmd_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle left turn indicator is turned on (If the simulator has a GUI for this one, it should display the left turn indicator is turned on)</li> <li>Ego vehicle right turn indicator is turned on (If the simulator has a GUI for this one, it should display the right turn indicator is turned on)</li> <li>Ego vehicle both turn indicators are turned off. This is a reset process. (If the simulator has a GUI for this one, it should display both left and right turn indicators are turned off)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-case-6","title":"Test Case #6","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_06_hazard_lights_cmd_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle hazard lights are turned on (If the simulator has a GUI for this one, it should display the hazard lights are turned on or blinking)</li> <li>Ego vehicle hazard lights are turned off. This is a reset process. (If the simulator has a GUI for this one, it should display the hazard lights are turned off)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"tools/simulator_test/simulator_compatibility_test/#test-procedures-for-test_morai_sim","title":"Test Procedures for test_morai_sim","text":""},{"location":"tools/simulator_test/simulator_compatibility_test/#build-process-before-test_1","title":"Build process before test","text":"<pre><code>source install/setup.bash\ncolcon build --packages-select simulator_compatibility_test\ncd src/universe/autoware.universe/tools/simulator_test/simulator_compatibility_test/test_morai_sim\n</code></pre> <p>Detailed process</p> <p>(WIP)</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"tools/simulator_test/simulator_compatibility_test/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"tools/simulator_test/simulator_compatibility_test/#input","title":"Input","text":"Name Type Description <code>/vehicle/status/control_mode</code> <code>autoware_auto_vehicle_msgs::msg::ControlModeReport</code> for [Test Case #1] <code>/vehicle/status/gear_status</code> <code>autoware_auto_vehicle_msgs::msg::GearReport</code> for [Test Case #2] <code>/vehicle/status/velocity_status</code> <code>autoware_auto_vehicle_msgs::msg::VelocityReport</code> for [Test Case #3] <code>/vehicle/status/steering_status</code> <code>autoware_auto_vehicle_msgs::msg::SteeringReport</code> for [Test Case #4] <code>/vehicle/status/turn_indicators_status</code> <code>autoware_auto_vehicle_msgs::msg::TurnIndicatorsReport</code> for [Test Case #5] <code>/vehicle/status/hazard_lights_status</code> <code>autoware_auto_vehicle_msgs::msg::HazardLightsReport</code> for [Test Case #6]"},{"location":"tools/simulator_test/simulator_compatibility_test/#output","title":"Output","text":"Name Type Description <code>/control/command/control_mode_cmd</code> <code>autoware_auto_vehicle_msgs/ControlModeCommand</code> for [Test Case #1] <code>/control/command/gear_cmd</code> <code>autoware_auto_vehicle_msgs/GearCommand</code> for [Test Case #2] <code>/control/command/control_cmd</code> <code>autoware_auto_vehicle_msgs/AckermannControlCommand</code> for [Test Case #3, #4] <code>/vehicle/status/steering_status</code> <code>autoware_auto_vehicle_msgs/TurnIndicatorsCommand</code> for [Test Case #5] <code>/control/command/turn_indicators_cmd</code> <code>autoware_auto_vehicle_msgs/HazardLightsCommand</code> for [Test Case #6]"},{"location":"tools/simulator_test/simulator_compatibility_test/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/#node-parameters","title":"Node Parameters","text":"<p>None.</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/#core-parameters","title":"Core Parameters","text":"<p>None.</p>"},{"location":"tools/simulator_test/simulator_compatibility_test/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>None.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/","title":"accel_brake_map_calibrator","text":"<p>The role of this node is to automatically calibrate <code>accel_map.csv</code> / <code>brake_map.csv</code> used in the <code>raw_vehicle_cmd_converter</code> node.</p> <p>The base map, which is lexus's one by default, is updated iteratively with the loaded driving data.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#how-to-calibrate","title":"How to calibrate","text":""},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#launch-calibrator","title":"Launch Calibrator","text":"<p>After launching Autoware, run the <code>accel_brake_map_calibrator</code> by the following command and then perform autonomous driving. Note: You can collect data with manual driving if it is possible to use the same vehicle interface as during autonomous driving (e.g. using a joystick).</p> <pre><code>ros2 launch accel_brake_map_calibrator accel_brake_map_calibrator.launch.xml rviz:=true\n</code></pre> <p>Or if you want to use rosbag files, run the following commands.</p> <pre><code>ros2 launch accel_brake_map_calibrator accel_brake_map_calibrator.launch.xml rviz:=true use_sim_time:=true\nros2 bag play &lt;rosbag_file&gt; --clock\n</code></pre> <p>During the calibration with setting the parameter <code>progress_file_output</code> to true, the log file is output in [directory of accel_brake_map_calibrator]/config/ . You can also see accel and brake maps in [directory of accel_brake_map_calibrator]/config/accel_map.csv and [directory of accel_brake_map_calibrator]/config/brake_map.csv after calibration.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#calibration-plugin","title":"Calibration plugin","text":"<p>The <code>rviz:=true</code> option displays the RViz with a calibration plugin as below.</p> <p> </p> <p>The current status (velocity and pedal) is shown in the plugin. The color on the current cell varies green/red depending on the current data is valid/invalid. The data that doesn't satisfy the following conditions are considered invalid and will not be used for estimation since aggressive data (e.g. when the pedal is moving fast) causes bad calibration accuracy.</p> <ul> <li>The velocity and pedal conditions are within certain ranges from the index values.</li> <li>The steer value, pedal speed, pitch value, etc. are less than corresponding thresholds.</li> <li>The velocity is higher than a threshold.</li> </ul> <p>The detailed parameters are described in the parameter section.</p> <p>Note: You don't need to worry about whether the current state is red or green during calibration. Just keep getting data until all the cells turn red.</p> <p>The value of each cell in the map is gray at first, and it changes from blue to red as the number of valid data in the cell accumulates. It is preferable to continue the calibration until each cell of the map becomes close to red. In particular, the performance near the stop depends strongly on the velocity of 0 ~ 6m/s range and the pedal value of +0.2 ~ -0.4, range so it is desirable to focus on those areas.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#diagnostics","title":"Diagnostics","text":"<p>The <code>accel brake map_calibrator</code> publishes diagnostics message depending on the calibration status. Diagnostic type <code>WARN</code> indicates that the current accel/brake map is estimated to be inaccurate. In this situation, it is strongly recommended to perform a re-calibration of the accel/brake map.</p> Status Diagnostics Type Diagnostics message Description No calibration required <code>OK</code> \"OK\" Calibration Required <code>WARN</code> \"Accel/brake map Calibration is required.\" The accuracy of current accel/brake map may be low. <p>This diagnostics status can be also checked on the following ROS topic.</p> <pre><code>ros2 topic echo /accel_brake_map_calibrator/output/update_suggest\n</code></pre> <p>When the diagnostics type is <code>WARN</code>, <code>True</code> is published on this topic and the update of the accel/brake map is suggested.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#evaluation-of-the-accel-brake-map-accuracy","title":"Evaluation of the accel / brake map accuracy","text":"<p>The accuracy of map is evaluated by the Root Mean Squared Error (RMSE) between the observed acceleration and predicted acceleration.</p> <p>TERMS:</p> <ul> <li><code>Observed acceleration</code>: the current vehicle acceleration which is calculated as a derivative value of the wheel speed.</li> </ul> <ul> <li><code>Predicted acceleration</code>: the output of the original accel/brake map, which the Autoware is expecting. The value is calculated using the current pedal and velocity.</li> </ul> <p>You can check additional error information with the following topics.</p> <ul> <li><code>/accel_brake_map_calibrator/output/current_map_error</code> : The error of the original map set in the <code>csv_path_accel/brake_map</code> path. The original map is not accurate if this value is large.</li> <li><code>/accel_brake_map_calibrator/output/updated_map_error</code> : The error of the map calibrated in this node. The calibration quality is low if this value is large.</li> <li><code>/accel_brake_map_calibrator/output/map_error_ratio</code> : The error ratio between the original map and updated map (ratio = updated / current). If this value is less than 1, it is desirable to update the map.</li> </ul>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#how-to-visualize-calibration-data","title":"How to visualize calibration data","text":"<p>The process of calibration can be visualized as below. Since these scripts need the log output of the calibration, the <code>pedal_accel_graph_output</code> parameter must be set to true while the calibration is running for the visualization.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#visualize-plot-of-relation-between-acceleration-and-pedal","title":"Visualize plot of relation between acceleration and pedal","text":"<p>The following command shows the plot of used data in the calibration. In each plot of velocity ranges, you can see the distribution of the relationship between pedal and acceleration, and raw data points with colors according to their pitch angles.</p> <pre><code>ros2 run accel_brake_map_calibrator view_plot.py\n</code></pre> <p></p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#visualize-statistics-about-accelerationvelocitypedal-data","title":"Visualize statistics about acceleration/velocity/pedal data","text":"<p>The following command shows the statistics of the calibration:</p> <ul> <li>mean value</li> <li>standard deviation</li> <li>number of data</li> </ul> <p>of all data in each map cell.</p> <pre><code>ros2 run accel_brake_map_calibrator view_statistics.py\n</code></pre> <p></p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#how-to-save-the-calibrated-accel-brake-map-anytime-you-want","title":"How to save the calibrated accel / brake map anytime you want","text":"<p>You can save accel and brake map anytime with the following command.</p> <pre><code>ros2 service call /accel_brake_map_calibrator/update_map_dir tier4_vehicle_msgs/srv/UpdateAccelBrakeMap \"path: '&lt;accel/brake map directory&gt;'\"\n</code></pre> <p>You can also save accel and brake map in the default directory where Autoware reads accel_map.csv/brake_map.csv using the RViz plugin (AccelBrakeMapCalibratorButtonPanel) as following.</p> <ol> <li> <p>Click Panels tab, and select AccelBrakeMapCalibratorButtonPanel.</p> <p></p> </li> <li> <p>Select the panel, and the button will appear at the bottom of RViz.</p> <p></p> </li> <li> <p>Press the button, and the accel / brake map will be saved.    (The button cannot be pressed in certain situations, such as when the calibrator node is not running.)</p> <p></p> </li> </ol>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#parameters","title":"Parameters","text":""},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#system-parameters","title":"System Parameters","text":"Name Type Description Default value update_method string you can select map calibration method. \"update_offset_each_cell\" calculates offsets for each grid cells on the map. \"update_offset_total\" calculates the total offset of the map. \"update_offset_each_cell\" get_pitch_method string \"tf\": get pitch from tf, \"none\": unable to perform pitch validation and pitch compensation \"tf\" pedal_accel_graph_output bool if true, it will output a log of the pedal accel graph. true progress_file_output bool if true, it will output a log and csv file of the update process. false default_map_dir str directory of default map [directory of raw_vehicle_cmd_converter]/data/default/ calibrated_map_dir str directory of calibrated map [directory of accel_brake_map_calibrator]/config/ update_hz double hz for update 10.0"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#algorithm-parameters","title":"Algorithm Parameters","text":"Name Type Description Default value initial_covariance double Covariance of initial acceleration map (larger covariance makes the update speed faster) 0.05 velocity_min_threshold double Speeds smaller than this are not used for updating. 0.1 velocity_diff_threshold double When the velocity data is more than this threshold away from the grid reference speed (center value), the associated data is not used for updating. 0.556 max_steer_threshold double If the steer angle is greater than this value, the associated data is not used for updating. 0.2 max_pitch_threshold double If the pitch angle is greater than this value, the associated data is not used for updating. 0.02 max_jerk_threshold double If the ego jerk calculated from ego acceleration is greater than this value, the associated data is not used for updating. 0.7 pedal_velocity_thresh double If the pedal moving speed is greater than this value, the associated data is not used for updating. 0.15 pedal_diff_threshold double If the current pedal value is more then this threshold away from the previous value, the associated data is not used for updating. 0.03 max_accel double Maximum value of acceleration calculated from velocity source. 5.0 min_accel double Minimum value of acceleration calculated from velocity source. -5.0 pedal_to_accel_delay double The delay time between actuation_cmd to acceleration, considered in the update logic. 0.3 update_suggest_thresh double threshold of RMSE ratio that update suggest flag becomes true. ( RMSE ratio: [RMSE of new map] / [RMSE of original map] ) 0.7 max_data_count int For visualization. When the data num of each grid gets this value, the grid color gets red. 100"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#test-utility-scripts","title":"Test utility scripts","text":""},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#constant-accelbrake-command-test","title":"Constant accel/brake command test","text":"<p>These scripts are useful to test for accel brake map calibration. These generate an <code>ActuationCmd</code> with a constant accel/brake value given interactively by a user through CLI.</p> <ul> <li>accel_tester.py</li> <li>brake_tester.py</li> <li>actuation_cmd_publisher.py</li> </ul> <p>The <code>accel/brake_tester.py</code> receives a target accel/brake command from CLI. It sends a target value to <code>actuation_cmd_publisher.py</code> which generates the <code>ActuationCmd</code>. You can run these scripts by the following commands in the different terminals, and it will be as in the screenshot below.</p> <pre><code>ros2 run accel_brake_map_calibrator accel_tester.py\nros2 run accel_brake_map_calibrator brake_tester.py\nros2 run accel_brake_map_calibrator actuation_cmd_publisher.py\n</code></pre> <p></p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#calibration-method","title":"Calibration Method","text":"<p>Two algorithms are selectable for the acceleration map update, update_offset_four_cell_around and update_offset_each_cell. Please see the link for datails.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#data-preprocessing","title":"Data Preprocessing","text":"<p>Before calibration, missing or unusable data (e.g., too large handle angles) must first be eliminated. The following parameters are used to determine which data to remove.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#parameters_1","title":"Parameters","text":"Name Description Default Value velocity_min_threshold Exclude minimal velocity 0.1 max_steer_threshold Exclude large steering angle 0.2 max_pitch_threshold Exclude large pitch angle 0.02 max_jerk_threshold Exclude large jerk 0.7 pedal_velocity_thresh Exclude large pedaling speed 0.15"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#update_offset_each_cell","title":"update_offset_each_cell","text":"<p>Update by Recursive Least Squares(RLS) method using data close enough to each grid.</p> <p>Advantage : Only data close enough to each grid is used for calibration, allowing accurate updates at each point.</p> <p>Disadvantage : Calibration is time-consuming due to a large amount of data to be excluded.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#parameters_2","title":"Parameters","text":"<p>Data selection is determined by the following thresholds. | Name | Default Value | | -------- | -------- | |velocity_diff_threshold|0.556| |pedal_diff_threshold|0.03|</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#update-formula","title":"Update formula","text":"\\begin{align}     \\theta[n]=&amp;     \\theta[n-1]+\\frac{p[n-1]x^{(n)}}{\\lambda+p[n-1](x^{(n)})^2}(y^{(n)}-\\theta[n-1]x^{(n)})\\\\     p[n]=&amp;\\frac{p[n-1]}{\\lambda+p[n-1](x^{(n)})^2} \\end{align}"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#variables","title":"Variables","text":"Variable name Symbol covariance p[n-1]p[n-1] map_offset \\theta[n]\\theta[n] forgettingfactor \\lambda\\lambda phi x(=1)x(=1) measured_acc yy"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#update_offset_four_cell_around-1","title":"update_offset_four_cell_around [1]","text":"<p>Update the offsets by RLS in four grids around newly obtained data. By considering linear interpolation, the update takes into account appropriate weights. Therefore, there is no need to remove data by thresholding.</p> <p>Advantage : No data is wasted because updates are performed on the 4 grids around the data with appropriate weighting. Disadvantage : Accuracy may be degraded due to extreme bias of the data. For example, if data z(k)z(k) is biased near Z_{RR}Z_{RR} in Fig. 2, updating is performed at the four surrounding points ( Z_{RR}Z_{RR}, Z_{RL}Z_{RL}, Z_{LR}Z_{LR}, and Z_{LL}Z_{LL}), but accuracy at Z_{LL}Z_{LL} is not expected.</p> <p> </p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#implementation","title":"Implementation","text":"<p>See eq.(7)-(10) in [1] for the updated formula. In addition, eq.(17),(18) from [1] are used for Anti-Windup.</p>"},{"location":"vehicle/accel_brake_map_calibrator/accel_brake_map_calibrator/#references","title":"References","text":"<p>[1] Gabrielle Lochrie, Michael Doljevic, Mario Nona, Yongsoon Yoon, Anti-Windup Recursive Least Squares Method for Adaptive Lookup Tables with Application to Automotive Powertrain Control Systems, IFAC-PapersOnLine, Volume 54, Issue 20, 2021, Pages 840-845</p>"},{"location":"vehicle/external_cmd_converter/","title":"external_cmd_converter","text":"<p><code>external_cmd_converter</code> is a node that converts desired mechanical input to acceleration and velocity by using accel/brake map.</p>"},{"location":"vehicle/external_cmd_converter/#input-topics","title":"Input topics","text":"Name Type Description <code>~/in/external_control_cmd</code> tier4_external_api_msgs::msg::ControlCommand target <code>throttle/brake/steering_angle/steering_angle_velocity</code> is necessary to calculate desired control command. <code>~/input/shift_cmd\"</code> autoware_auto_vehicle_msgs::GearCommand current command of gear. <code>~/input/emergency_stop</code> tier4_external_api_msgs::msg::Heartbeat emergency heart beat for external command. <code>~/input/current_gate_mode</code> tier4_control_msgs::msg::GateMode topic for gate mode. <code>~/input/odometry</code> navigation_msgs::Odometry twist topic in odometry is used."},{"location":"vehicle/external_cmd_converter/#output-topics","title":"Output topics","text":"Name Type Description <code>~/out/control_cmd</code> autoware_auto_control_msgs::msg::AckermannControlCommand ackermann control command converted from selected external command"},{"location":"vehicle/external_cmd_converter/#parameters","title":"Parameters","text":"Parameter Type Description <code>timer_rate</code> double timer's update rate <code>wait_for_first_topic</code> double if time out check is done after receiving first topic <code>control_command_timeout</code> double time out check for control command <code>emergency_stop_timeout</code> double time out check for emergency stop command"},{"location":"vehicle/external_cmd_converter/#limitation","title":"Limitation","text":"<p>tbd.</p>"},{"location":"vehicle/raw_vehicle_cmd_converter/","title":"raw_vehicle_cmd_converter","text":"<p><code>raw_vehicle_command_converter</code> is a node that converts desired acceleration and velocity to mechanical input by using feed forward + feed back control (optional).</p>"},{"location":"vehicle/raw_vehicle_cmd_converter/#input-topics","title":"Input topics","text":"Name Type Description <code>~/input/control_cmd</code> autoware_auto_control_msgs::msg::AckermannControlCommand target <code>velocity/acceleration/steering_angle/steering_angle_velocity</code> is necessary to calculate actuation command. <code>~/input/steering\"</code> autoware_auto_vehicle_msgs::SteeringReport current status of steering used for steering feed back control <code>~/input/twist</code> navigation_msgs::Odometry twist topic in odometry is used."},{"location":"vehicle/raw_vehicle_cmd_converter/#output-topics","title":"Output topics","text":"Name Type Description <code>~/output/actuation_cmd</code> tier4_vehicle_msgs::msg::ActuationCommandStamped actuation command for vehicle to apply mechanical input"},{"location":"vehicle/raw_vehicle_cmd_converter/#parameters","title":"Parameters","text":"Parameter Type Description <code>update_rate</code> double timer's update rate <code>th_max_message_delay_sec</code> double threshold time of input messages' maximum delay <code>th_arrived_distance_m</code> double threshold distance to check if vehicle has arrived at the trajectory's endpoint <code>th_stopped_time_sec</code> double threshold time to check if vehicle is stopped <code>th_stopped_velocity_mps</code> double threshold velocity to check if vehicle is stopped"},{"location":"vehicle/raw_vehicle_cmd_converter/#limitation","title":"Limitation","text":"<p>The current feed back implementation is only applied to steering control.</p>"},{"location":"vehicle/steer_offset_estimator/Readme/","title":"steer_offset_estimator","text":""},{"location":"vehicle/steer_offset_estimator/Readme/#purpose","title":"Purpose","text":"<p>The role of this node is to automatically calibrate <code>steer_offset</code> used in the <code>vehicle_interface</code> node.</p> <p>The base steer offset value is 0 by default, which is standard, is updated iteratively with the loaded driving data. This module is supposed to be used in below straight driving situation. </p>"},{"location":"vehicle/steer_offset_estimator/Readme/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":"<p>Estimates sequential steering offsets from kinematic model and state observations.  Calculate yaw rate error and then calculate steering error recursively by least squared method, for more details see <code>updateSteeringOffset()</code> function.</p>"},{"location":"vehicle/steer_offset_estimator/Readme/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"vehicle/steer_offset_estimator/Readme/#input","title":"Input","text":"Name Type Description <code>~/input/twist</code> <code>geometry_msgs::msg::TwistStamped</code> vehicle twist <code>~/input/steer</code> <code>autoware_auto_vehicle_msgs::msg::SteeringReport</code> steering"},{"location":"vehicle/steer_offset_estimator/Readme/#output","title":"Output","text":"Name Type Description <code>~/output/steering_offset</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> steering offset <code>~/output/steering_offset_covariance</code> <code>tier4_debug_msgs::msg::Float32Stamped</code> covariance of steering offset"},{"location":"vehicle/steer_offset_estimator/Readme/#launch-calibrator","title":"Launch Calibrator","text":"<p>After launching Autoware, run the <code>steer_offset_estimator</code> by the following command and then perform autonomous driving. Note: You can collect data with manual driving if it is possible to use the same vehicle interface as during autonomous driving (e.g. using a joystick).</p> <pre><code>ros2 launch steer_offset_estimator steer_offset_estimator.launch.xml\n</code></pre> <p>Or if you want to use rosbag files, run the following commands.</p> <pre><code>ros2 param set /use_sim_time true\nros2 bag play &lt;rosbag_file&gt; --clock\n</code></pre>"},{"location":"vehicle/steer_offset_estimator/Readme/#parameters","title":"Parameters","text":"Params Description <code>steer_update_hz</code> update hz <code>initial_covariance</code> steer offset is larger than tolerance <code>forgetting_factor</code> weight of using previous value <code>valid_min_velocity</code> velocity below this value is not used <code>valid_max_steer</code> steer above this value is not used <code>warn_steer_offset_deg</code> warn if offset is above this value"},{"location":"vehicle/steer_offset_estimator/Readme/#diagnostics","title":"Diagnostics","text":"<p>The <code>steer_offset_estimator</code> publishes diagnostics message depending on the calibration status. Diagnostic type <code>WARN</code> indicates that the current steer_offset is estimated to be inaccurate. In this situation, it is strongly recommended to perform a re-calibration of the steer_offset.</p> Status Diagnostics Type Diagnostics message No calibration required <code>OK</code> \"Preparation\" Calibration Required <code>WARN</code> \"Steer offset is larger than tolerance\" <p>This diagnostics status can be also checked on the following ROS topic.</p> <pre><code>ros2 topic echo /vehicle/status/steering_offset\n</code></pre>"},{"location":"vehicle/vehicle_info_util/Readme/","title":"Vehicle Info Util","text":""},{"location":"vehicle/vehicle_info_util/Readme/#purpose","title":"Purpose","text":"<p>This package is to get vehicle info parameters.</p>"},{"location":"vehicle/vehicle_info_util/Readme/#description","title":"Description","text":"<p>In here, you can check the vehicle dimensions with more detail.</p>"},{"location":"vehicle/vehicle_info_util/Readme/#scripts","title":"Scripts","text":""},{"location":"vehicle/vehicle_info_util/Readme/#minimum-turning-radius","title":"Minimum turning radius","text":"<pre><code>$ ros2 run vehicle_info_util min_turning_radius_calculator.py\nyaml path is /home/autoware/pilot-auto/install/vehicle_info_util/share/vehicle_info_util/config/vehicle_info.param.yaml\nMinimum turning radius is 3.253042620027102 [m] for rear, 4.253220695862465 [m] for front.\n</code></pre> <p>You can designate yaml file with <code>-y</code> option as follows.</p> <pre><code>ros2 run vehicle_info_util min_turning_radius_calculator.py -y &lt;path-to-yaml&gt;\n</code></pre>"},{"location":"vehicle/vehicle_info_util/Readme/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"}]}