{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Parameters for Concatenate and Time Synchronize Node",
  "type": "object",
  "definitions": {
    "concatenate_and_time_sync_node": {
      "type": "object",
      "properties": {
        "debug_mode": {
          "type": "boolean",
          "default": false,
          "description": "Flag to enable debug mode to display additional logging information."
        },
        "has_static_tf_only": {
          "type": "boolean",
          "default": false,
          "description": "Flag to indicate if only static TF is used."
        },
        "rosbag_length": {
          "type": "number",
          "default": 10.0,
          "minimum": 0.0,
          "description": " This value determine if the rosbag has started from the beginning again. The value should be set smaller than the actual length of the bag."
        },
        "maximum_queue_size": {
          "type": "integer",
          "default": "5",
          "minimum": 1,
          "description": "Maximum size of the queue for the Keep Last policy in QoS history."
        },
        "timeout_sec": {
          "type": "number",
          "default": "0.1",
          "minimum": 0.001,
          "description": "Timer's timeout duration in seconds when collectors are created. Collectors will concatenate the point clouds when timeout_sec reaches zero."
        },
        "is_motion_compensated": {
          "type": "boolean",
          "default": true,
          "description": "Flag to indicate if motion compensation is enabled."
        },
        "publish_synchronized_pointcloud": {
          "type": "boolean",
          "default": true,
          "description": "Flag to indicate if synchronized point cloud should be published."
        },
        "keep_input_frame_in_synchronized_pointcloud": {
          "type": "boolean",
          "default": true,
          "description": "Flag to indicate if input frame should be kept in synchronized point cloud."
        },
        "publish_previous_but_late_pointcloud": {
          "type": "boolean",
          "default": false,
          "description": "Flag to indicate if a concatenated point cloud should be published if its timestamp is earlier than the previous published concatenated point cloud."
        },
        "synchronized_pointcloud_postfix": {
          "type": "string",
          "default": "pointcloud",
          "description": "Postfix for the topic name of the synchronized point cloud."
        },
        "input_twist_topic_type": {
          "type": "string",
          "enum": ["twist", "odom"],
          "default": "twist",
          "description": "Type of the input twist topic."
        },
        "input_topics": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "default": ["cloud_topic1", "cloud_topic2", "cloud_topic3"],
          "minItems": 2,
          "description": "List of input point cloud topics."
        },
        "output_frame": {
          "type": "string",
          "default": "base_link",
          "minLength": 1,
          "description": "Output frame."
        },
        "matching_strategy": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["naive", "advanced"],
              "default": "advanced",
              "description": "Set it to `advanced` if you can synchronize your LiDAR sensor; otherwise, set it to `naive`."
            },
            "lidar_timestamp_offsets": {
              "type": "array",
              "items": {
                "type": "number",
                "minimum": 0.0
              },
              "default": [0.0, 0.0, 0.0],
              "minItems": 2,
              "description": "List of LiDAR timestamp offsets in seconds (relative to the earliest LiDAR timestamp). The offsets should be provided in the same order as the input topics."
            },
            "lidar_timestamp_noise_window": {
              "type": "array",
              "items": {
                "type": "number",
                "minimum": 0.0
              },
              "default": [0.01, 0.01, 0.01],
              "minItems": 2,
              "description": "List of LiDAR timestamp noise windows in seconds. The noise values should be specified in the same order as the input_topics."
            }
          },
          "required": ["type"],
          "dependencies": {
            "type": {
              "oneOf": [
                {
                  "properties": { "type": { "const": "naive" } },
                  "not": {
                    "required": ["lidar_timestamp_offsets", "lidar_timestamp_noise_window"]
                  }
                },
                {
                  "properties": { "type": { "const": "advanced" } },
                  "required": ["lidar_timestamp_offsets", "lidar_timestamp_noise_window"]
                }
              ]
            }
          }
        }
      },
      "required": [
        "debug_mode",
        "has_static_tf_only",
        "rosbag_length",
        "maximum_queue_size",
        "timeout_sec",
        "is_motion_compensated",
        "publish_synchronized_pointcloud",
        "keep_input_frame_in_synchronized_pointcloud",
        "publish_previous_but_late_pointcloud",
        "synchronized_pointcloud_postfix",
        "input_twist_topic_type",
        "input_topics",
        "output_frame",
        "matching_strategy"
      ]
    }
  },
  "properties": {
    "/**": {
      "type": "object",
      "properties": {
        "ros__parameters": {
          "$ref": "#/definitions/concatenate_and_time_sync_node"
        }
      },
      "required": ["ros__parameters"]
    }
  },
  "required": ["/**"]
}
