<?xml version="1.0"?>
<launch>
  <arg name="input/pointcloud" default="/sensing/lidar/concatenated/pointcloud"/>
  <arg name="output/objects" default="objects"/>
  <!-- <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/> -->
  <arg name="data_path" default="$(find-pkg-share autoware_lidar_bevfusion)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="model_name" default="bevfusion" description="options: `bevfusion`"/>
  <!-- <arg name="model_path" default="$(var data_path)/lidar_bevfusion"/> -->
  <arg name="model_path" default="$(find-pkg-share autoware_lidar_bevfusion)/config"/>
  <arg name="model_param_path" default="$(find-pkg-share autoware_lidar_bevfusion)/config/$(var model_name).param.yaml"/>
  <arg name="ml_package_param_path" default="$(var model_path)/$(var model_name)_ml_package.param.yaml"/>
  <arg name="class_remapper_param_path" default="$(find-pkg-share autoware_lidar_bevfusion)/config/detection_class_remapper.param.yaml"/>
  <arg name="build_only" default="false" description="shutdown node after TensorRT engine file is built"/>
  <arg name="log_level" default="info"/>

  <arg name="use_pointcloud_container" default="false" description="use pointcloud_container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container" description="pointcloud_container name"/>

  <arg name="use_decompress" default="true" description="use image_transport_decompressor"/>

  <arg name="camera_info0" default="/sensing/camera/camera0/camera_info"/>
  <arg name="camera_info1" default="/sensing/camera/camera1/camera_info"/>
  <arg name="camera_info2" default="/sensing/camera/camera2/camera_info"/>
  <arg name="camera_info3" default="/sensing/camera/camera3/camera_info"/>
  <arg name="camera_info4" default="/sensing/camera/camera4/camera_info"/>
  <arg name="camera_info5" default="/sensing/camera/camera5/camera_info"/>

  <arg name="image0" default="/sensing/camera/camera0/image_rect_color"/>
  <arg name="image1" default="/sensing/camera/camera1/image_rect_color"/>
  <arg name="image2" default="/sensing/camera/camera2/image_rect_color"/>
  <arg name="image3" default="/sensing/camera/camera3/image_rect_color"/>
  <arg name="image4" default="/sensing/camera/camera4/image_rect_color"/>
  <arg name="image5" default="/sensing/camera/camera5/image_rect_color"/>

  <arg name="decompressor_param_file" default="$(find-pkg-share autoware_image_transport_decompressor)/config/image_transport_decompressor.param.yaml"/>
  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var image0)/compressed"/>
    <remap from="~/output/raw_image" to="$(var image0)"/>
    <param from="$(var decompressor_param_file)"/>
  </node>

  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var image1)/compressed"/>
    <remap from="~/output/raw_image" to="$(var image1)"/>
    <param from="$(var decompressor_param_file)"/>
  </node>

  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var image2)/compressed"/>
    <remap from="~/output/raw_image" to="$(var image2)"/>
    <param from="$(var decompressor_param_file)"/>
  </node>

  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var image3)/compressed"/>
    <remap from="~/output/raw_image" to="$(var image3)"/>
    <param from="$(var decompressor_param_file)"/>
  </node>

  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var image4)/compressed"/>
    <remap from="~/output/raw_image" to="$(var image4)"/>
    <param from="$(var decompressor_param_file)"/>
  </node>

  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var image5)/compressed"/>
    <remap from="~/output/raw_image" to="$(var image5)"/>
    <param from="$(var decompressor_param_file)"/>
  </node>

  <group if="$(var use_pointcloud_container)">
    <load_composable_node target="$(var pointcloud_container_name)">
      <composable_node pkg="autoware_lidar_bevfusion" plugin="autoware::lidar_bevfusion::LidarTransfusionNode" name="lidar_bevfusion">
        <remap from="~/input/pointcloud" to="$(var input/pointcloud)"/>
        <remap from="~/output/objects" to="$(var output/objects)"/>
        <param from="$(var model_param_path)" allow_substs="true"/>
        <param from="$(var ml_package_param_path)" allow_substs="true"/>
        <param from="$(var class_remapper_param_path)"/>

        <remap from="~/input/camera_info0" to="$(var camera_info0)"/>
        <remap from="~/input/camera_info1" to="$(var camera_info1)"/>
        <remap from="~/input/camera_info2" to="$(var camera_info2)"/>
        <remap from="~/input/camera_info3" to="$(var camera_info3)"/>
        <remap from="~/input/camera_info4" to="$(var camera_info4)"/>
        <remap from="~/input/camera_info5" to="$(var camera_info5)"/>
        <remap from="~/input/image0" to="$(var image0)"/>
        <remap from="~/input/image1" to="$(var image1)"/>
        <remap from="~/input/image2" to="$(var image2)"/>
        <remap from="~/input/image3" to="$(var image3)"/>
        <remap from="~/input/image4" to="$(var image4)"/>
        <remap from="~/input/image5" to="$(var image5)"/>

        <!-- This parameter shall NOT be included in param file. See also: https://github.com/autowarefoundation/autoware.universe/pull/6167 -->
        <param name="build_only" value="$(var build_only)"/>
      </composable_node>
    </load_composable_node>
  </group>
  <group unless="$(var use_pointcloud_container)">
    <node pkg="autoware_lidar_bevfusion" exec="autoware_lidar_bevfusion_node" name="lidar_bevfusion" output="screen" args="--ros-args --log-level $(var log_level)">
      <remap from="~/input/pointcloud" to="$(var input/pointcloud)"/>
      <remap from="~/output/objects" to="$(var output/objects)"/>
      <param from="$(var model_param_path)" allow_substs="true"/>
      <param from="$(var ml_package_param_path)" allow_substs="true"/>
      <param from="$(var class_remapper_param_path)"/>

      <remap from="~/input/camera_info0" to="$(var camera_info0)"/>
      <remap from="~/input/camera_info1" to="$(var camera_info1)"/>
      <remap from="~/input/camera_info2" to="$(var camera_info2)"/>
      <remap from="~/input/camera_info3" to="$(var camera_info3)"/>
      <remap from="~/input/camera_info4" to="$(var camera_info4)"/>
      <remap from="~/input/camera_info5" to="$(var camera_info5)"/>
      <remap from="~/input/image0" to="$(var image0)"/>
      <remap from="~/input/image1" to="$(var image1)"/>
      <remap from="~/input/image2" to="$(var image2)"/>
      <remap from="~/input/image3" to="$(var image3)"/>
      <remap from="~/input/image4" to="$(var image4)"/>
      <remap from="~/input/image5" to="$(var image5)"/>

      <!-- This parameter shall NOT be included in param file. See also: https://github.com/autowarefoundation/autoware.universe/pull/6167 -->
      <param name="build_only" value="$(var build_only)"/>
    </node>
  </group>
</launch>
