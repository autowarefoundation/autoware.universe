<launch>
  <!-- map files -->
  <arg name="pointcloud_map_path"/>
  <arg name="pointcloud_map_metadata_path"/>
  <arg name="lanelet2_map_path"/>
  <arg name="map_projector_info_path"/>

  <!-- Parameter files -->
  <arg name="pointcloud_map_loader_param_path"/>
  <arg name="lanelet2_map_loader_param_path"/>
  <arg name="map_tf_generator_param_path"/>
  <arg name="map_projection_loader_param_path"/>

  <!-- select container type -->
  <arg name="use_multithread" default="false"/>
  <let name="container_type" value="component_container" unless="$(var use_multithread)"/>
  <let name="container_type" value="component_container_mt" if="$(var use_multithread)"/>

  <group>
    <push-ros-namespace namespace="map"/>

    <node_container pkg="rclcpp_components" exec="$(var container_type)" name="map_container" namespace="" output="both">
      <composable_node pkg="autoware_map_loader" plugin="autoware::map_loader::PointCloudMapLoaderNode" name="pointcloud_map_loader">
        <param from="$(var pointcloud_map_loader_param_path)"/>
        <param name="pcd_paths_or_directory" value="[$(var pointcloud_map_path)]"/>
        <param name="pcd_metadata_path" value="$(var pointcloud_map_metadata_path)"/>
        <remap from="output/pointcloud_map" to="pointcloud_map"/>
        <remap from="output/pointcloud_map_metadata" to="pointcloud_map_metadata"/>
        <remap from="service/get_partial_pcd_map" to="/map/get_partial_pointcloud_map"/>
        <remap from="service/get_differential_pcd_map" to="/map/get_differential_pointcloud_map"/>
        <remap from="service/get_selected_pcd_map" to="/map/get_selected_pointcloud_map"/>
      </composable_node>

      <composable_node pkg="autoware_map_loader" plugin="autoware::map_loader::Lanelet2MapLoaderNode" name="lanelet2_map_loader">
        <param from="$(var lanelet2_map_loader_param_path)"/>
        <param name="lanelet2_map_path" value="$(var lanelet2_map_path)"/>
        <remap from="output/lanelet2_map" to="vector_map"/>
      </composable_node>

      <composable_node pkg="autoware_lanelet2_map_visualizer" plugin="autoware::lanelet2_map_visualizer::Lanelet2MapVisualizationNode" name="lanelet2_map_visualization">
        <remap from="input/lanelet2_map" to="vector_map"/>
        <remap from="output/lanelet2_map_marker" to="vector_map_marker"/>
      </composable_node>

      <composable_node pkg="autoware_map_tf_generator" plugin="autoware::map_tf_generator::VectorMapTFGeneratorNode" name="vector_map_tf_generator">
        <param from="$(var map_tf_generator_param_path)"/>
      </composable_node>
    </node_container>

    <node pkg="autoware_map_loader" exec="map_hash_generator" name="map_hash_generator">
      <param name="lanelet2_map_path" value="$(var lanelet2_map_path)"/>
      <param name="pointcloud_map_path" value="$(var pointcloud_map_path)"/>
    </node>

    <include file="$(find-pkg-share autoware_map_projection_loader)/launch/map_projection_loader.launch.xml">
      <arg name="param_path" value="$(var map_projection_loader_param_path)"/>
      <arg name="map_projector_info_path" value="$(var map_projector_info_path)"/>
      <arg name="lanelet2_map_path" value="$(var lanelet2_map_path)"/>
    </include>
  </group>
</launch>
