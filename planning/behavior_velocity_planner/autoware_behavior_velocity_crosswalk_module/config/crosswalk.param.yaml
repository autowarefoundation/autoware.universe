/**:
  ros__parameters:
    crosswalk:
      common:
        show_processing_time: false # [-] whether to show processing time
        # param for input data
        traffic_light_state_timeout: 3.0 # [s] timeout threshold for traffic light signal
        enable_rtc: false # if true, the scene modules should be approved by (request to cooperate)rtc function. if false, the module can be run without approval from rtc.

      # param for stop position
      stop_position:
        stop_position_threshold: 1.0 # [m] If the ego vehicle has stopped near the stop line than this value, this module assumes itself to have achieved yielding.

        # For the Lanelet2 map with no explicit stop lines
        stop_distance_from_crosswalk: 3.5 # [m] make stop line away from crosswalk
        # For the case where the stop position is determined according to the object position.
        stop_distance_from_object_preferred: 3.0 # [m]
        stop_distance_from_object_limit: 3.0 # [m]
        min_acc_preferred: -1.0 # min acceleration [m/ss]
        min_jerk_preferred: -1.0 # min jerk [m/sss]

      # params for ego's slow down velocity. These params are not used for the case of "enable_rtc: false".
      slow_down:
        min_slow_down_velocity: 2.78 # [m/s] target vehicle velocity when module receive slow down command from FOA (2.78 m/s = 10.0 kmph)
        max_slow_down_jerk: -1.5 # [m/sss] minimum jerk deceleration for safe brake
        max_slow_down_accel: -2.5 # [m/ss] minimum accel deceleration for safe brake
        no_relax_velocity: 2.78 # [m/s] if the current velocity is less than X m/s, ego always stops at the stop position(not relax deceleration constraints 2.78 m/s = 10 kmph)

      # params to prevent stopping on crosswalks due to another vehicle ahead
      stuck_vehicle:
        enable_stuck_check_in_intersection: false # [-] flag to enable stuck vehicle checking for crosswalk which is in intersection
        stuck_vehicle_velocity: 1.0 # [m/s] threshold velocity whether other vehicles are assumed to be stuck or not.
        max_stuck_vehicle_lateral_offset: 2.0 # [m] The feature does not handle the vehicles farther than this value to the ego's path.
        required_clearance: 6.0 # [m] clearance to be secured between the ego and the ahead vehicle
        min_acc: -1.0 # min acceleration [m/ss]
        min_jerk: -1.0 # min jerk [m/sss]
        max_jerk: 1.0 # max jerk [m/sss]

      # params for the pass judge logic against the crosswalk users such as pedestrians or bicycles
      pass_judge:
        ego_pass_first_margin_x: [0.0] # [[s]] time to collision margin vector for ego pass first situation (the module judges that ego don't have to stop at TTC + MARGIN < TTV condition)
        ego_pass_first_margin_y: [4.0] # [[s]] time to vehicle margin vector for ego pass first situation (the module judges that ego don't have to stop at TTC + MARGIN < TTV condition)
        ego_pass_first_additional_margin: 0.5 # [s] additional time margin for ego pass first situation to suppress chattering
        ego_pass_later_margin_x: [0.0] # [[s]] time to vehicle margin vector for object pass first situation (the module judges that ego don't have to stop at TTV + MARGIN < TTC condition)
        ego_pass_later_margin_y: [13.0] # [[s]] time to collision margin vector for object pass first situation (the module judges that ego don't have to stop at TTV + MARGIN < TTC condition)
        ego_pass_later_additional_margin: 0.5 # [s] additional time margin for object pass first situation to suppress chattering
        ego_min_assumed_speed: 2.0 # [m/s] assumed speed to calculate the time to collision point

        no_stop_decision: # parameters to determine stop cancel. {-$overrun_threshold_length + f($min_acc, $min_jerk)} is compared against distance to stop pose.
          min_acc: -1.5 # min acceleration [m/ss]
          min_jerk: -1.5 # min jerk [m/sss]
          overrun_threshold_length: 1.0 # [m] required to avoid giving up against backward movement of the stop position due to approaching pedestrians, etc.

        stop_object_velocity_threshold: 0.25 # [m/s] velocity threshold for the module to judge whether the objects is stopped (0.28 m/s = 1.0 kmph)
        min_object_velocity: 1.39 # [m/s] minimum object velocity (compare the estimated velocity by perception module with this parameter and adopt the larger one to calculate TTV. 1.39 m/s = 5.0 kmph)
        ## param for yielding
        disable_yield_for_new_stopped_object: true # for the crosswalks with traffic signal
        # If the pedestrian does not move for X seconds after the ego has stopped in front the crosswalk, the module judge that the pedestrian has no intention to walk and allows the ego to proceed.
        distance_set_for_no_intention_to_walk: [1.0, 5.0] # [m] ascending order
        timeout_set_for_no_intention_to_walk: [1.0, 0.0] # [s]
        timeout_ego_stop_for_yield: 1.0 # [s] If the ego maintains the stop for this amount of time, then the ego proceeds, assuming it has stopped long time enough.

      # params for suppressing the ego to restart when the ego is close to the next stop position.
      restart_suppression:
        min_distance_to_stop: 0.5
        max_distance_to_stop: 1.0

      # param for target object filtering
      object_filtering:
        crosswalk_attention_range: 2.0 # [m] the detection area is defined as -X meters before the crosswalk to +X meters behind the crosswalk
        vehicle_object_cross_angle_threshold: 0.5 # [rad] threshold judging object is crossing walkway as a pedestrian or passing over as a vehicle
        target_object:
          unknown: true # [-] whether to look and stop by UNKNOWN objects
          bicycle: true # [-] whether to look and stop by BICYCLE objects
          motorcycle: true # [-] whether to look and stop by MOTORCYCLE objects (tmp: currently it is difficult for perception modules to detect bicycles and motorcycles separately.)
          pedestrian: true # [-] whether to look and stop by PEDESTRIAN objects

      # param for occlusions
      occlusion:
        enable: true  # if true, ego will slowdown around crosswalks that are occluded
        occluded_object_velocity: 1.0 # [m/s] assumed velocity of objects that may come out of the occluded space
        slow_down_velocity: 1.0  # [m/s]
        time_buffer: 0.5  # [s] consecutive time with/without an occlusion to add/remove the slowdown
        min_size: 1.0  # [m] minimum size of an occlusion (square side size)
        free_space_max: 43  # [-] maximum value of a free space cell in the occupancy grid
        occupied_min: 58    # [-] minimum value of an occupied cell in the occupancy grid
        ignore_with_traffic_light: true  # [-] if true, occlusions at crosswalks with traffic lights are ignored
        ignore_behind_predicted_objects: true  # [-] if true, occlusions behind predicted objects are ignored
        ignore_velocity_thresholds:
          default: 0.5  # [m/s] occlusions are only ignored behind objects with a higher or equal velocity
          custom_labels: ["PEDESTRIAN"]  # labels for which to define a non-default velocity threshold (see autoware_perception_msgs::msg::ObjectClassification for all the labels)
          custom_thresholds: [0.0]  # velocities of the custom labels
        extra_predicted_objects_size: 0.5  # [m] extra size added to the objects for masking the occlusions
