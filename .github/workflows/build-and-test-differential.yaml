name: build-and-test-differential

on:
  workflow_call:
    inputs:
      container:
        required: true
        type: string
      runner:
        default: ubuntu-24.04
        required: false
        type: string
      rosdistro:
        default: humble
        required: false
        type: string
      run-condition:
        default: true
        required: false
        type: boolean
      container-suffix:
        required: false
        default: ""
        type: string
    secrets:
      codecov-token:
        required: true

env:
  CC: /usr/lib/ccache/gcc
  CXX: /usr/lib/ccache/g++

jobs:
  build-and-test-differential:
    if: ${{ inputs.run-condition }}
    runs-on: ${{ inputs.runner }}
    container: ${{ inputs.container }}${{ inputs.container-suffix }}
    steps:
      - name: Set PR fetch depth
        run: echo "PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))" >> "${GITHUB_ENV}"
        shell: bash

      - name: Checkout PR branch and all PR commits
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ env.PR_FETCH_DEPTH }}

      - name: Show disk space before the tasks
        run: df -h
        shell: bash

      - name: Show machine specs
        run: lscpu && free -h
        shell: bash

      - name: Remove exec_depend
        uses: autowarefoundation/autoware-github-actions/remove-exec-depend@v1

      - name: Get modified packages
        id: get-modified-packages
        uses: autowarefoundation/autoware-github-actions/get-modified-packages@v1

      - name: Create ccache directory
        run: |
          mkdir -p ${CCACHE_DIR}
          du -sh ${CCACHE_DIR} && ccache -s
        shell: bash

      - name: Attempt to restore ccache
        uses: actions/cache/restore@v4
        with:
          path: |
            /root/.ccache
          key: ccache-main-${{ runner.arch }}-${{ inputs.rosdistro }}-${{ github.event.pull_request.base.sha }}
          restore-keys: |
            ccache-main-${{ runner.arch }}-${{ inputs.rosdistro }}-

      - name: Show ccache stats before build and reset stats
        run: |
          du -sh ${CCACHE_DIR} && ccache -s
          ccache --zero-stats
        shell: bash

      - name: Export CUDA state as a variable for adding to cache key
        run: |
          build_type_cuda_state=nocuda
          if [[ "${{ inputs.container-suffix }}" == "-cuda" ]]; then
            build_type_cuda_state=cuda
          fi
          echo "BUILD_TYPE_CUDA_STATE=$build_type_cuda_state" >> "${GITHUB_ENV}"
          echo "::notice::BUILD_TYPE_CUDA_STATE=$build_type_cuda_state"
        shell: bash

      - name: Build
        if: ${{ steps.get-modified-packages.outputs.modified-packages != '' }}
        uses: autowarefoundation/autoware-github-actions/colcon-build@v1
        with:
          rosdistro: ${{ inputs.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: build_depends.repos
          cache-key-element: ${{ env.BUILD_TYPE_CUDA_STATE }}

      - name: Show ccache stats after build
        run: du -sh ${CCACHE_DIR} && ccache -s
        shell: bash

      - name: Test
        id: test
        if: ${{ steps.get-modified-packages.outputs.modified-packages != '' }}
        uses: autowarefoundation/autoware-github-actions/colcon-test@v1
        with:
          rosdistro: ${{ inputs.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: build_depends.repos

      - name: Upload coverage to CodeCov
        if: ${{ steps.test.outputs.coverage-report-files != '' }}
        uses: codecov/codecov-action@v4
        with:
          files: ${{ steps.test.outputs.coverage-report-files }}
          fail_ci_if_error: false
          verbose: true
          flags: differential${{ inputs.container-suffix }}
          token: ${{ secrets.codecov-token }}

      - name: Show disk space after the tasks
        run: df -h
        shell: bash
