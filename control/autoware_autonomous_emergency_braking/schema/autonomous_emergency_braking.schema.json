{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "autoware_autonomous_emergency_braking parameter",
  "type": "object",
  "definitions": {
    "autoware_autonomous_emergency_braking": {
      "type": "object",
      "properties": {
        "use_predicted_trajectory": {
          "type": "boolean",
          "description": "Flag to use the predicted path from the control module.",
          "default": true
        },
        "use_imu_path": {
          "type": "boolean",
          "description": "Flag to use the predicted path generated by sensor data.",
          "default": true
        },
        "limit_imu_path_lat_dev": {
          "type": "boolean",
          "description": "Flag to limit the lateral deviation of the IMU path.",
          "default": false
        },
        "limit_imu_path_length": {
          "type": "boolean",
          "description": "Flag to limit the length of the IMU path.",
          "default": true
        },
        "use_pointcloud_data": {
          "type": "boolean",
          "description": "Flag to use point cloud data for collision detection.",
          "default": true
        },
        "use_predicted_object_data": {
          "type": "boolean",
          "description": "Flag to use predicted object data.",
          "default": false
        },
        "use_object_velocity_calculation": {
          "type": "boolean",
          "description": "Flag to use object velocity calculation. If false, object velocity is set to 0 m/s.",
          "default": true
        },
        "check_autoware_state": {
          "type": "boolean",
          "description": "Flag to enable or disable Autoware state check.",
          "default": true
        },
        "imu_path_lat_dev_threshold": {
          "type": "number",
          "description": "Lateral deviation threshold for the IMU path.",
          "default": 1.75
        },
        "min_generated_imu_path_length": {
          "type": "number",
          "description": "Minimum distance for a predicted path generated by sensors.",
          "default": 0.5
        },
        "max_generated_imu_path_length": {
          "type": "number",
          "description": "Maximum distance for a predicted path generated by sensors.",
          "default": 10.0
        },
        "imu_prediction_time_horizon": {
          "type": "number",
          "description": "Time horizon of the predicted path generated by sensors.",
          "default": 1.5
        },
        "imu_prediction_time_interval": {
          "type": "number",
          "description": "Time interval of the predicted path generated by sensors.",
          "default": 0.1
        },
        "mpc_prediction_time_horizon": {
          "type": "number",
          "description": "Time horizon of the predicted path generated by MPC.",
          "default": 4.5
        },
        "mpc_prediction_time_interval": {
          "type": "number",
          "description": "Time interval of the predicted path generated by MPC.",
          "default": 0.1
        },
        "publish_debug_pointcloud": {
          "type": "boolean",
          "description": "Flag to publish the point cloud used for debugging.",
          "default": false
        },
        "publish_debug_markers": {
          "type": "boolean",
          "description": "Flag to publish debug markers.",
          "default": true
        },
        "detection_range_min_height": {
          "type": "number",
          "description": "Minimum height of detection range used to avoid ghost braking by false positives.",
          "default": 0.0
        },
        "detection_range_max_height_margin": {
          "type": "number",
          "description": "Margin for maximum height of detection range used to avoid ghost braking.",
          "default": 0.0
        },
        "voxel_grid_x": {
          "type": "number",
          "description": "Downsampling parameter for x-axis in the voxel grid filter.",
          "default": 0.1
        },
        "voxel_grid_y": {
          "type": "number",
          "description": "Downsampling parameter for y-axis in the voxel grid filter.",
          "default": 0.1
        },
        "voxel_grid_z": {
          "type": "number",
          "description": "Downsampling parameter for z-axis in the voxel grid filter.",
          "default": 0.5
        },
        "expand_width": {
          "type": "number",
          "description": "Expansion width of the ego vehicle for collision checking, path cropping, and speed calculation.",
          "default": -0.2
        },
        "path_footprint_extra_margin": {
          "type": "number",
          "description": "Extra margin added to the ego vehicle footprint for cropping the point cloud.",
          "default": 1.0
        },
        "speed_calculation_expansion_margin": {
          "type": "number",
          "description": "Expansion width of the ego vehicle footprint used for speed calculation.",
          "default": 0.7
        },
        "cluster_tolerance": {
          "type": "number",
          "description": "Maximum allowable distance between two points in the same cluster.",
          "default": 0.15
        },
        "cluster_minimum_height": {
          "type": "number",
          "description": "Minimum height of a cluster to be considered as a target.",
          "default": 0.1
        },
        "minimum_cluster_size": {
          "type": "integer",
          "description": "Minimum number of points in a cluster to be considered as a target.",
          "default": 10
        },
        "maximum_cluster_size": {
          "type": "integer",
          "description": "Maximum number of points in a cluster to be considered as a target.",
          "default": 10000
        },
        "longitudinal_offset_margin": {
          "type": "number",
          "description": "Longitudinal offset distance for collision checking.",
          "default": 1.0
        },
        "t_response": {
          "type": "number",
          "description": "Response time for the ego vehicle to detect a decelerating object.",
          "default": 1.0
        },
        "a_ego_min": {
          "type": "number",
          "description": "Maximum deceleration value of the ego vehicle.",
          "default": -3.0
        },
        "a_obj_min": {
          "type": "number",
          "description": "Maximum deceleration value of objects.",
          "default": -1.0
        },
        "collision_keeping_sec": {
          "type": "number",
          "description": "Time duration to keep detecting a collision.",
          "default": 3.0
        },
        "previous_obstacle_keep_time": {
          "type": "number",
          "description": "Time duration to keep the previous obstacle detected.",
          "default": 1.0
        },
        "aeb_hz": {
          "type": "number",
          "description": "Frequency at which the AEB module operates.",
          "default": 10.0
        }
      },
      "required": [
        "use_predicted_trajectory",
        "use_imu_path",
        "publish_debug_markers",
        "detection_range_min_height",
        "voxel_grid_x",
        "expand_width"
      ],
      "additionalProperties": false
    }
  },
  "properties": {
    "/**": {
      "type": "object",
      "properties": {
        "ros__parameters": {
          "$ref": "#/definitions/autoware_autonomous_emergency_braking"
        }
      },
      "required": ["ros__parameters"],
      "additionalProperties": false
    }
  },
  "required": ["/**"],
  "additionalProperties": false
}
